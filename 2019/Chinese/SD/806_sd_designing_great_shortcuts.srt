1
00:00:06,640 --> 00:00:10,544 line:0
（设计超棒捷径）


2
00:00:10,611 --> 00:00:11,945 line:-1
大家好 我是Jay


3
00:00:12,012 --> 00:00:14,381 line:-2
我是Siri和捷径团队的一名
设计师


4
00:00:14,548 --> 00:00:15,916 line:-1
今天我们要讲


5
00:00:15,983 --> 00:00:18,252 line:-1
如何给app设计优秀的捷径


6
00:00:20,420 --> 00:00:22,389 line:-1
今天我们主要讲三个话题


7
00:00:23,724 --> 00:00:26,660 line:-1
首先我要讲查看你app的所有用例


8
00:00:26,727 --> 00:00:29,663 line:-1
并决定哪些看起来可以作为捷径


9
00:00:31,131 --> 00:00:34,568 line:-2
然后我要讲如何让这些捷径
在你的app中可发现


10
00:00:36,470 --> 00:00:39,806 line:-2
最后我要讲如何设计
优秀的Siri体验


11
00:00:39,873 --> 00:00:43,610 line:-2
针对iOS 13中捷径的
新交互性功能


12
00:00:44,878 --> 00:00:46,513 line:-1
现在让我们先往回退一步


13
00:00:46,580 --> 00:00:49,616 line:-1
捷径一般而言是把app的功能


14
00:00:49,683 --> 00:00:52,686 line:-2
在OS上的更多地方
呈现给更多用户的好方式


15
00:00:52,753 --> 00:00:55,789 line:-2
让我们看一下捷径可能会出现在
app中的哪些地方


16
00:00:55,856 --> 00:00:57,858 line:-1
从而了解哪些可能有用


17
00:01:00,327 --> 00:01:02,863 line:-2
如你告诉系统当用户在你的app中
执行某个行动时


18
00:01:02,930 --> 00:01:05,098 line:-2
当系统预测到
用户下一步会采取什么行动时


19
00:01:05,165 --> 00:01:07,768 line:-1
它可以自动推荐捷径


20
00:01:08,001 --> 00:01:11,004 line:-2
并且这些捷径可以出现在
锁屏和搜索中


21
00:01:11,605 --> 00:01:14,441 line:-1
这个捷径可以让你迅速开始


22
00:01:14,508 --> 00:01:16,376 line:-2
你通常在一天的这个时候执行的
指导性训练


23
00:01:18,946 --> 00:01:22,482 line:-2
如果用户向Siri添加了一个捷径
通过给它分配一个自定义短语


24
00:01:22,549 --> 00:01:25,385 line:-2
他们可以通过他们的声音
在任意时间唤醒它


25
00:01:25,752 --> 00:01:28,288 line:-2
在这里 捷径可以让他们预订
平常的晚餐


26
00:01:28,655 --> 00:01:30,224 line:-1
通过一个快速的确认步骤


27
00:01:30,290 --> 00:01:32,459 line:-2
用户就可以获得一些很棒的
地中海式食物


28
00:01:35,229 --> 00:01:36,997 line:-1
Siri捷径的另一个很棒的例子是


29
00:01:37,064 --> 00:01:39,399 line:-1
不通过手和眼睛获取信息


30
00:01:40,200 --> 00:01:43,136 line:-2
因此对于你的HomePad
如果你有一个交通app的捷径


31
00:01:43,203 --> 00:01:45,806 line:-2
你可以说
“嘿 Siri 公交时刻表”


32
00:01:45,973 --> 00:01:49,042 line:-2
Siri将为你播放来自
你的app的公交时刻表信息


33
00:01:52,613 --> 00:01:54,982 line:-1
你还可以把你app的功能


34
00:01:55,048 --> 00:01:56,583 line:-1
作为多步捷径的一部分


35
00:01:57,251 --> 00:01:59,553 line:-2
在这里 捷径处理你晚上的
例行安排


36
00:01:59,620 --> 00:02:01,788 line:-1
在你到家之前及时预订美味的鲜汤


37
00:02:01,855 --> 00:02:03,991 line:-1
在你开车时播放你最喜欢的音乐


38
00:02:04,057 --> 00:02:05,959 line:-1
并显示最快的路线


39
00:02:08,362 --> 00:02:09,997 line:-1
请看这些例子


40
00:02:10,062 --> 00:02:13,367 line:-2
我们可以看到捷径非常适合
很频繁地使用


41
00:02:13,433 --> 00:02:15,302 line:-1
你的app可以实现的有用的动作


42
00:02:16,136 --> 00:02:19,072 line:-2
瞥一眼就能看到信息
或通过声音获取信息


43
00:02:20,040 --> 00:02:23,043 line:-2
或作为强大的、
多步捷径的一部分


44
00:02:23,110 --> 00:02:25,512 line:-2
你的app可以和
其它app一起运作


45
00:02:27,281 --> 00:02:30,050 line:-2
我们在iOS 12中引入了
Siri捷径建议


46
00:02:30,117 --> 00:02:33,587 line:-2
因此你可以参考之前的演讲
获取更多关于如何开发


47
00:02:33,654 --> 00:02:37,324 line:-2
自动在锁屏和搜索中给出建议的
优秀的捷径的信息


48
00:02:37,691 --> 00:02:40,827 line:-1
今天我主要讲如何让捷径利用


49
00:02:40,894 --> 00:02:43,664 line:-1
iOS 13中的新的Siri功能


50
00:02:44,231 --> 00:02:47,034 line:-1
我们会讲如何优化你app的功能


51
00:02:47,100 --> 00:02:49,303 line:-1
从而有利于Siri捷径


52
00:02:50,070 --> 00:02:52,806 line:-2
为此 让我们看一下我们最喜欢的
其中一个app


53
00:02:52,873 --> 00:02:55,609 line:-2
Soup Chef
你可以通过它预订各种汤


54
00:02:55,676 --> 00:02:57,211 line:-1
可以自取或配送


55
00:02:57,611 --> 00:03:00,814 line:-2
让我们共同设计
并创建Soup Chef捷径


56
00:03:03,851 --> 00:03:06,086 line:-1
列出你的app可以实现的所有功能


57
00:03:06,653 --> 00:03:08,455 line:-1
当这样做时 开始考虑


58
00:03:08,522 --> 00:03:10,724 line:-2
用户可能想要通过他们的声音
重复去做的事


59
00:03:11,124 --> 00:03:14,962 line:-2
通过Soup Chef
你可以做比如浏览汤品菜单


60
00:03:15,028 --> 00:03:16,063 line:-1
预订汤品


61
00:03:16,129 --> 00:03:18,599 line:-1
查看订单状态或浏览之前的订单


62
00:03:19,466 --> 00:03:21,835 line:-1
让我们一个接一个看一下这些功能


63
00:03:24,938 --> 00:03:27,107 line:-1
浏览菜单是非常可视化的行为


64
00:03:27,174 --> 00:03:29,042 line:-1
需要大量结构化的信息


65
00:03:29,109 --> 00:03:30,844 line:-1
这些信息不能被很好地翻译成声音


66
00:03:30,911 --> 00:03:33,847 line:-1
它需要滚动、轻触和导航


67
00:03:34,381 --> 00:03:35,549 line:-1
并且它提供


68
00:03:35,616 --> 00:03:38,719 line:-1
不太可能在调用中修改的信息


69
00:03:40,153 --> 00:03:41,922 line:-1
它更像是一个结束


70
00:03:41,989 --> 00:03:44,057 line:-2
而不是包含一个有价值的动作
并且它自身也不是有价值的动作


71
00:03:45,626 --> 00:03:48,061 line:-1
因此这可能不太适合创建捷径


72
00:03:50,764 --> 00:03:52,566 line:-1
检查订单状态可能是


73
00:03:52,633 --> 00:03:54,134 line:-1
用户想要通过声音来实现的功能


74
00:03:54,201 --> 00:03:56,570 line:-1
从Siri获取信息的快速汇总


75
00:03:57,171 --> 00:04:00,207 line:-1
但同时它仅应用于很短的时间范围内


76
00:04:00,274 --> 00:04:02,109 line:-1
就在用户订购之后


77
00:04:02,943 --> 00:04:04,845 line:-1
你可以考虑把这个功能


78
00:04:04,912 --> 00:04:06,947 line:-1
允许用户通过捷径来实现


79
00:04:07,014 --> 00:04:10,851 line:-2
但也许只有当配送时间长
或有多个阶段时才使用


80
00:04:13,854 --> 00:04:15,455 line:-1
浏览过去的订单功能很棒


81
00:04:15,522 --> 00:04:18,024 line:-2
但我不知道你们怎么样
我一般不会浏览


82
00:04:18,091 --> 00:04:19,993 line:-1
因此这并不是个很好的捷径


83
00:04:22,796 --> 00:04:25,532 line:-1
订购汤品是个很有价值的活动


84
00:04:25,599 --> 00:04:27,968 line:-1
事实上它是你app的最重要的活动


85
00:04:28,335 --> 00:04:31,672 line:-2
你可以想象如果用户有很喜欢的汤品
他们一定会重复订购


86
00:04:32,906 --> 00:04:35,275 line:-2
我们可以把它叫做
捷径的最佳候选人


87
00:04:38,545 --> 00:04:40,214 line:-1
总的来说 捷径的最好用法是


88
00:04:40,280 --> 00:04:42,816 line:-2
一些很有价值或很有意思
并可以重复的功能


89
00:04:43,750 --> 00:04:47,154 line:-2
可以通过你的声音实现
而不依赖于视觉或轻触


90
00:04:47,221 --> 00:04:49,423 line:-1
并且在许多情境下可调用


91
00:04:49,489 --> 00:04:52,793 line:-2
因此捷径不只是应用于
很短的一段时间内


92
00:04:54,127 --> 00:04:55,896 line:-1
现在我们知道我们希望用户


93
00:04:55,963 --> 00:04:58,198 line:-1
可以通过捷径预订汤品


94
00:04:58,665 --> 00:05:01,401 line:-2
让我们看看如何让这个捷径
在你的app中可被发现


95
00:05:01,668 --> 00:05:03,737 line:-2
我们提供了一个标准的
“添加到Siri”按钮


96
00:05:03,804 --> 00:05:06,607 line:-2
那可以让用户了解你app中的
哪些功能


97
00:05:06,673 --> 00:05:08,509 line:-1
可以通过Siri捷径来实现


98
00:05:08,976 --> 00:05:10,077 line:-1
但要慎重使用


99
00:05:11,345 --> 00:05:13,914 line:-2
不要这样做
不要把“添加到Siri”按钮


100
00:05:13,981 --> 00:05:15,649 line:-1
放在主菜单上的每一项上


101
00:05:15,949 --> 00:05:18,051 line:-2
漂亮的按钮是指按钮自身漂亮
而不是附加其它东西


102
00:05:18,118 --> 00:05:21,288 line:-2
像这样重复它看起来很难看
并且它并不与这里相关


103
00:05:21,588 --> 00:05:24,191 line:-1
用户很可能只是初次尝试下订单


104
00:05:24,258 --> 00:05:25,826 line:-1
并且这些按钮挡住了路


105
00:05:26,527 --> 00:05:29,763 line:-2
并且这些可能是用户之前
从未订购过的产品


106
00:05:29,830 --> 00:05:32,633 line:-1
目前建议他们重新订购毫无意义


107
00:05:34,101 --> 00:05:37,671 line:-2
相反 请查找你有机会
在一个专用UI中呈现的功能


108
00:05:37,738 --> 00:05:40,674 line:-2
有明确的用户可能想重复
某些操作的信号


109
00:05:42,376 --> 00:05:44,878 line:-1
比如在用户订购某些产品之后


110
00:05:44,945 --> 00:05:46,780 line:-2
立即显示
“添加到Siri”按钮更好


111
00:05:47,014 --> 00:05:50,450 line:-2
逻辑是如果用户发现产品足够好
可以订购


112
00:05:50,517 --> 00:05:52,686 line:-1
那么用户非常可能再次订购它


113
00:05:52,753 --> 00:05:55,656 line:-2
并且这样你也不会中断
用户尝试进行的操作


114
00:05:55,722 --> 00:05:58,292 line:-2
他们已经完成了订购
所以这是个好机会


115
00:06:00,227 --> 00:06:01,795 line:-1
要让“添加到Siri”按钮


116
00:06:01,862 --> 00:06:04,164 line:-1
更好地适应你app的视觉外观


117
00:06:04,765 --> 00:06:07,568 line:-1
你现在可以自定义按钮的圆角半径了


118
00:06:09,369 --> 00:06:11,839 line:-1
并且你可以根据用户的深色模式偏好


119
00:06:11,905 --> 00:06:14,074 line:-1
自动修改按钮的外观


120
00:06:15,309 --> 00:06:18,412 line:-2
如果你非常努力地尝试了
是非常努力的那种


121
00:06:18,478 --> 00:06:21,248 line:-2
而按钮的样式仍不能适应
你的app的样式


122
00:06:21,315 --> 00:06:22,583 line:-1
你可以创建你自己的按钮


123
00:06:22,649 --> 00:06:25,352 line:-2
但你应该复制所有的
“添加到Siri”的功能


124
00:06:27,588 --> 00:06:29,223 line:-1
标准的“添加到Siri”按钮


125
00:06:29,289 --> 00:06:31,758 line:-2
一旦被配置好
就显示用户的捷径短语


126
00:06:31,825 --> 00:06:35,729 line:-2
这是提醒用户要运行捷径
需要说什么的好方式


127
00:06:37,231 --> 00:06:39,399 line:-1
轻触它将显示一张标准的表单


128
00:06:39,466 --> 00:06:41,735 line:-1
允许用户编辑或删除捷径


129
00:06:45,372 --> 00:06:47,174 line:-1
如果你想要一个集中的位置


130
00:06:47,241 --> 00:06:48,675 line:-1
来列出你的所有捷径


131
00:06:48,742 --> 00:06:50,744 line:-2
在每一行上都有一个
“添加到Siri”按钮可能太多了


132
00:06:50,811 --> 00:06:52,846 line:-1
就像我们之前见过的那样


133
00:06:53,213 --> 00:06:56,917 line:-2
因此你可以自由使用
标准的UIKit元素


134
00:06:57,918 --> 00:07:00,420 line:-1
请一定确保当用户设置捷径时


135
00:07:00,487 --> 00:07:02,389 line:-1
就像“添加到Siri”按钮一样


136
00:07:03,056 --> 00:07:05,726 line:-2
你也要显示用户使用哪个短语
设置了捷径


137
00:07:06,126 --> 00:07:07,961 line:-1
轻触捷径应该也会显示表单


138
00:07:08,028 --> 00:07:09,863 line:-1
用户可以编辑或删除捷径


139
00:07:10,898 --> 00:07:14,768 line:-1
让我们看一下用户首次设置捷径


140
00:07:17,638 --> 00:07:19,640 line:-2
一旦用户轻触了
“添加到Siri”按钮


141
00:07:19,706 --> 00:07:21,341 line:-1
他们将看到“添加到Siri”表单


142
00:07:21,408 --> 00:07:24,578 line:-2
用户可以选择调用捷径
所使用的短语


143
00:07:24,978 --> 00:07:29,349 line:-2
在iOS 13中 你的app
可以预填充你自己所选的捷径


144
00:07:29,683 --> 00:07:33,187 line:-2
并且绝大多数用户可能会给捷径
分配这个短语 如果你提供的话


145
00:07:33,253 --> 00:07:35,556 line:-2
因此一定要确保提供了一个很好的
默认短语


146
00:07:36,857 --> 00:07:40,227 line:-2
在这个例子中 订购汤品就是一个
很好、很短并且很容易记住的短语


147
00:07:40,294 --> 00:07:43,063 line:-2
用户可能会由衷地用作
捷径的短语


148
00:07:44,264 --> 00:07:47,301 line:-2
让我们再看一个例子
让我们从汤品中解脱出来一会儿


149
00:07:49,536 --> 00:07:50,838 line:-1
检查公交时刻表


150
00:07:51,305 --> 00:07:53,173 line:-1
这听起来像是个明智的短语


151
00:07:53,240 --> 00:07:54,975 line:-1
考虑到它相对较短


152
00:07:55,042 --> 00:07:57,878 line:-1
用户非常可能会忘记某个词


153
00:07:57,945 --> 00:07:59,046 line:-1
或换成别的词


154
00:07:59,379 --> 00:08:01,582 line:-2
他们可能会尝试说
“查找公交时刻表”


155
00:08:01,648 --> 00:08:03,650 line:-1
或“35路公交时刻表”


156
00:08:03,717 --> 00:08:05,552 line:-1
或只是完全漏掉“检”这个字


157
00:08:06,987 --> 00:08:09,389 line:-2
Siri会尽它所能
把这些与短语相匹配


158
00:08:09,456 --> 00:08:12,960 line:-2
当用户尝试回想较长的短语时
他们仍有相当大的创造力


159
00:08:13,260 --> 00:08:16,029 line:-1
因此这可能不是最佳的推荐短语


160
00:08:17,831 --> 00:08:21,268 line:-2
相反 要保持短语简短
大约在三个字或更少


161
00:08:21,335 --> 00:08:25,172 line:-2
试着把它限定为一个专有名词
或只是一个动词和一个对象


162
00:08:25,472 --> 00:08:28,008 line:-1
这会减少用户混淆词序的机会


163
00:08:28,075 --> 00:08:29,476 line:-1
或使用不同的介词的机会


164
00:08:33,046 --> 00:08:36,183 line:-2
好的 有个用户想设置订购
西红柿汤的捷径


165
00:08:36,750 --> 00:08:40,120 line:-2
如果用户希望捷径每次都实现
稍微不同的功能会怎么样呢


166
00:08:40,187 --> 00:08:41,922 line:-1
比如订购不同的汤品？


167
00:08:42,422 --> 00:08:46,660 line:-2
在iOS 13中 用户可以轻触
“执行”区域下面的网格


168
00:08:47,361 --> 00:08:50,597 line:-1
并自定义向捷径中预制多少信息


169
00:08:50,664 --> 00:08:52,633 line:-1
只需要轻触其中一个字段即可实现


170
00:08:54,501 --> 00:08:56,837 line:-1
用户可以选择保留某些字段空白


171
00:08:56,904 --> 00:08:58,205 line:-1
比如汤品类型


172
00:08:58,472 --> 00:08:59,740 line:-1
当他们这样做时


173
00:09:00,240 --> 00:09:03,410 line:-2
Siri会以你的app的名义
请求这个缺失的信息


174
00:09:04,311 --> 00:09:07,014 line:-1
理想情况是 捷径产生最少的交互


175
00:09:07,080 --> 00:09:10,617 line:-2
毕竟 它应该加速
人们总是频繁去做的操作


176
00:09:12,119 --> 00:09:13,954 line:-2
因此当你呈现
“添加到Siri”表单时


177
00:09:14,021 --> 00:09:16,990 line:-1
这个动作应该包含尽可能多的信息


178
00:09:17,057 --> 00:09:19,526 line:-2
从而只需要一步或两步就能运行
捷径


179
00:09:19,860 --> 00:09:22,996 line:-2
在这个例子中
这个捷径将直接进入确认屏幕


180
00:09:23,063 --> 00:09:24,898 line:-1
因为一切都已经指定好了


181
00:09:26,066 --> 00:09:29,002 line:-2
但当用户选择把一切信息
都保留为空白


182
00:09:29,069 --> 00:09:31,471 line:-1
并且他们想在与Siri的交互中


183
00:09:31,538 --> 00:09:32,873 line:-2
指定关于订单的
所有详情会怎么样呢？


184
00:09:35,576 --> 00:09:37,344 line:-1
让我们看看我们要如何设计


185
00:09:37,411 --> 00:09:39,880 line:-1
与Siri的完整的订购汤品的交互


186
00:09:43,050 --> 00:09:45,419 line:-1
考虑一下你需要了解哪些信息


187
00:09:45,485 --> 00:09:46,987 line:-1
来执行订购汤品请求


188
00:09:47,054 --> 00:09:48,822 line:-1
比如要订购哪种汤品


189
00:09:49,289 --> 00:09:51,258 line:-1
是否需要配送还是自取？


190
00:09:51,325 --> 00:09:54,294 line:-2
如果你预订了配送
你需要配送到哪儿


191
00:09:54,361 --> 00:09:56,730 line:-2
以及如果你选择了自取
你要自取什么


192
00:09:57,264 --> 00:09:58,665 line:-1
要开始考虑订单


193
00:09:58,732 --> 00:10:00,868 line:-1
以及收集这些信息的可能的方式


194
00:10:00,934 --> 00:10:02,603 line:-1
你应该把app的交互


195
00:10:02,669 --> 00:10:05,138 line:-2
看作是你的用户和Siri
之间的交谈


196
00:10:07,407 --> 00:10:10,511 line:-2
可视化这个交谈的一种方式是
通过脚本


197
00:10:10,577 --> 00:10:13,914 line:-2
脚本对于快速记下一条对话路径来说
非常有用


198
00:10:15,749 --> 00:10:18,252 line:-1
当然并不是只有一条路径


199
00:10:18,652 --> 00:10:20,420 line:-1
你应该写下所有


200
00:10:20,487 --> 00:10:21,955 line:-1
交谈可能会进入的路径


201
00:10:22,523 --> 00:10:25,893 line:-2
比如用户可能会说出一种可选方案
但你的app并不支持


202
00:10:26,226 --> 00:10:29,530 line:-2
在那种情况下
Siri很可能应该暗示用户这一点


203
00:10:30,731 --> 00:10:32,900 line:-1
提交一本脚本书


204
00:10:32,966 --> 00:10:35,369 line:-1
作为设计规范可能会有些不灵便


205
00:10:35,435 --> 00:10:37,070 line:-1
因此在过程结束时


206
00:10:37,137 --> 00:10:39,339 line:-1
你更可能会这样做


207
00:10:39,406 --> 00:10:42,709 line:-2
一个流程图
包含在会话内所涉及到的


208
00:10:42,776 --> 00:10:43,944 line:-1
全部可能的状态和转换


209
00:10:44,745 --> 00:10:48,215 line:-1
Siri有一些特定的方式提供选择


210
00:10:48,282 --> 00:10:49,616 line:-1
并处理用户输入


211
00:10:49,683 --> 00:10:52,219 line:-1
让我们直接来看


212
00:10:52,286 --> 00:10:53,754 line:-1
你所拥有并可以任意使用的会话模式


213
00:10:56,023 --> 00:10:58,225 line:-1
第一种模式是提示


214
00:10:58,492 --> 00:11:02,229 line:-2
这是用于从用户那儿收集值的
最开放的一种方式


215
00:11:02,796 --> 00:11:04,865 line:-2
你应该把你的提示作为一个问题
提出来


216
00:11:04,932 --> 00:11:06,967 line:-2
并用一种能让用户
做出良好反应的方式


217
00:11:07,034 --> 00:11:08,535 line:-1
表达出来


218
00:11:11,572 --> 00:11:14,675 line:-2
当用户说了一些对于你的app来说
意味着很多东西的内容时


219
00:11:14,741 --> 00:11:16,210 line:-1
你可以显示一个选项列表


220
00:11:16,276 --> 00:11:18,846 line:-1
可以让用户指明他们具体是指哪个


221
00:11:19,146 --> 00:11:21,381 line:-1
这叫做消除歧义提示


222
00:11:22,516 --> 00:11:24,484 line:-1
你可以最小化消除歧义提示


223
00:11:24,551 --> 00:11:26,587 line:-1
那会通过在前面显示一个选项列表


224
00:11:27,154 --> 00:11:29,456 line:-1
给会话添加另一个步骤


225
00:11:29,957 --> 00:11:33,360 line:-2
请注意 用户说了他们的捷径
短语“订购汤品”


226
00:11:33,427 --> 00:11:34,928 line:-1
并直接进入列表中


227
00:11:35,529 --> 00:11:38,031 line:-1
如果是有限的几个选项可以选择的话


228
00:11:38,098 --> 00:11:40,434 line:-2
你应该使用列表
而不是自由形式的提示


229
00:11:41,168 --> 00:11:44,271 line:-2
请确保你的提示对话鼓励用户
从列表中进行选择


230
00:11:44,338 --> 00:11:47,407 line:-2
以“哪个”开头的问题用在这里
最好不过了


231
00:11:51,245 --> 00:11:54,948 line:-2
当使用捷径而没有显示屏时
Siri会读出选项


232
00:11:55,015 --> 00:11:58,385 line:-2
比如在AirPods或HomePod上
或当用户说“嘿Siri”时


233
00:12:02,356 --> 00:12:05,792 line:-2
并且Siri将像你在可视化UI中
所提供的那样读出这些选项


234
00:12:06,159 --> 00:12:08,462 line:-1
但你可以想象这可能会太啰嗦了


235
00:12:08,529 --> 00:12:10,731 line:-1
特别是如果许多选项都很相似的话


236
00:12:11,698 --> 00:12:14,468 line:-1
为了改善这种体验 你可以分别指定


237
00:12:14,535 --> 00:12:16,403 line:-1
Siri如何大声读出你的选项


238
00:12:16,470 --> 00:12:20,174 line:-2
你可以给每个选项都添加一个
发音暗示


239
00:12:20,908 --> 00:12:23,010 line:-2
让我们看一个
稍微有点不一样的例子


240
00:12:23,510 --> 00:12:25,112 line:-1
用户请求订购面汤


241
00:12:25,179 --> 00:12:26,413 line:-1
有两种面汤


242
00:12:26,813 --> 00:12:29,416 line:-1
与其说牛肉面汤或蔬菜面汤


243
00:12:29,483 --> 00:12:31,685 line:-1
你不如说牛肉或蔬菜


244
00:12:32,186 --> 00:12:36,223 line:-2
因此只需要考虑读出能区分
每一项的细节


245
00:12:37,824 --> 00:12:40,294 line:-1
对话是双向的


246
00:12:40,360 --> 00:12:43,063 line:-1
因此你还要考虑用户可能会说什么


247
00:12:43,664 --> 00:12:47,067 line:-2
用户可能不会使用与你的选项
完全相同的词


248
00:12:49,069 --> 00:12:51,538 line:-1
要处理响应中的自然差异


249
00:12:51,605 --> 00:12:54,374 line:-2
对于每个选项
你应该为Siri提供一些同义词


250
00:12:54,441 --> 00:12:56,343 line:-2
这些同义词与那个选项指的是
同一件东西


251
00:12:56,910 --> 00:13:00,013 line:-2
因此当用户说牛肉时
Siri会匹配牛肉面汤


252
00:13:01,548 --> 00:13:03,150 line:-1
当想到这些同义词时


253
00:13:03,217 --> 00:13:05,886 line:-1
你还应该记住你提问的措辞


254
00:13:05,953 --> 00:13:08,088 line:-1
会影响用户的响应方式


255
00:13:11,525 --> 00:13:14,261 line:-2
因此如果你有用于描述选项的一种
更随意的方式


256
00:13:14,328 --> 00:13:16,730 line:-1
比如“带肉的”或“蔬菜的”


257
00:13:16,797 --> 00:13:20,701 line:-1
你应该确保你能识别出用户也会


258
00:13:20,767 --> 00:13:21,869 line:-1
向Siri重复那种措辞


259
00:13:25,873 --> 00:13:28,775 line:-2
如果用户了一个响应
而你想进行额外确认


260
00:13:28,842 --> 00:13:31,311 line:-1
比如一个后果特别严重的值


261
00:13:31,378 --> 00:13:34,081 line:-1
你可以提供一个参数确认提示


262
00:13:34,147 --> 00:13:37,718 line:-2
但仅针对真正的例外情况
明智而审慎地使用它


263
00:13:37,784 --> 00:13:39,486 line:-1
因为这会减慢用户的速度


264
00:13:42,089 --> 00:13:45,425 line:-1
使用参数确认提示的另一种方式是


265
00:13:45,492 --> 00:13:48,929 line:-2
如果你的app有自己的推测
用户可能想要什么的逻辑


266
00:13:49,630 --> 00:13:51,398 line:-1
你可以给用户显示你的最佳猜测


267
00:13:51,465 --> 00:13:53,767 line:-2
他们可以确认它
在这种情况下 是的


268
00:13:53,834 --> 00:13:55,769 line:-1
他们不需要提供额外信息


269
00:13:56,003 --> 00:13:58,071 line:-1
或他们可以拒绝它 在这种情况下


270
00:13:58,138 --> 00:14:00,240 line:-1
你可以退回到一个更开放的提示中


271
00:14:01,041 --> 00:14:02,676 line:-1
如果你可以猜出用户想要什么


272
00:14:02,743 --> 00:14:05,879 line:-2
这是一种可以让捷径交互
变得更快的好方式


273
00:14:09,783 --> 00:14:12,920 line:-1
在流程的最后 考虑使用确认提示


274
00:14:12,986 --> 00:14:14,855 line:-1
作为一个整体应用于整个动作


275
00:14:15,122 --> 00:14:17,991 line:-2
尤其是如果动作自身会引发
特别严重的后果的话


276
00:14:18,692 --> 00:14:21,795 line:-2
在这个步骤中
你可以在可视化用户界面中确认


277
00:14:21,862 --> 00:14:24,298 line:-2
要实施的与最终决定相关的动作的
全部细节


278
00:14:24,364 --> 00:14:27,367 line:-1
比如价格、配送时间


279
00:14:27,434 --> 00:14:29,102 line:-2
你可以完全自定义这个
可视化用户界面


280
00:14:29,169 --> 00:14:31,538 line:-1
请注意 对于订购类中的动作


281
00:14:31,605 --> 00:14:33,640 line:-1
系统要求用户进行确认


282
00:14:33,707 --> 00:14:35,809 line:-1
如果你属于那个类


283
00:14:35,876 --> 00:14:37,978 line:-1
一定要提供很优秀的确认体验


284
00:14:40,380 --> 00:14:42,416 line:-1
但请记住用户可以不用看屏幕


285
00:14:42,482 --> 00:14:44,184 line:-1
就可以运行你的捷径


286
00:14:44,251 --> 00:14:47,287 line:-2
因此你应该提供一个
仅语音对话的体验


287
00:14:47,354 --> 00:14:51,625 line:-2
在这个例子中我们提供了额外的对话
用于帮助用户做出决定


288
00:14:53,560 --> 00:14:56,530 line:-1
这个额外对话的目的是提供


289
00:14:56,597 --> 00:14:59,499 line:-1
不能在可视化用户界面中显示的信息


290
00:14:59,967 --> 00:15:03,103 line:-1
可以把这个额外对话看作是


291
00:15:03,170 --> 00:15:06,540 line:-2
你会在显示屏上显示的
最重要信息的语音等价物


292
00:15:09,877 --> 00:15:11,778 line:-1
最后你的响应


293
00:15:12,179 --> 00:15:14,615 line:-1
Siri将指出动作的状态


294
00:15:14,681 --> 00:15:18,619 line:-2
你可以在这里提供一个可视化
UI概述用于描述额外信息


295
00:15:18,685 --> 00:15:20,587 line:-1
比如谁会配送你的汤品


296
00:15:20,654 --> 00:15:22,422 line:-1
以及最新估计的配送时间


297
00:15:23,023 --> 00:15:25,425 line:-2
请注意 我们只需要在这里说出
“好的 已订购”


298
00:15:25,492 --> 00:15:28,262 line:-2
因为我们使用了
显示屏来显示额外信息


299
00:15:28,762 --> 00:15:30,464 line:-1
对于仅语音体验来说


300
00:15:30,531 --> 00:15:32,833 line:-1
你应该指定一个更具描述性的对话


301
00:15:34,735 --> 00:15:38,105 line:-1
再一次 把这个额外对话看作是


302
00:15:38,172 --> 00:15:40,841 line:-2
你在显示屏上的
响应式UI中所显示的


303
00:15:40,908 --> 00:15:42,342 line:-1
最重要的信息的语音等价物


304
00:15:45,612 --> 00:15:48,348 line:-1
当你思考确认和响应对话时


305
00:15:48,415 --> 00:15:51,985 line:-2
你应该记住你需要
为捷径选择一个类别


306
00:15:52,386 --> 00:15:54,288 line:-1
当你在Xcode中定义捷径时


307
00:15:54,354 --> 00:15:57,758 line:-1
选择最匹配你捷径的功能的类别


308
00:15:58,091 --> 00:15:59,293 line:-1
在我们的Soup Chef例子中


309
00:15:59,359 --> 00:16:01,929 line:-1
很明显它属于订购类


310
00:16:05,399 --> 00:16:08,635 line:-1
在确认提示中


311
00:16:08,702 --> 00:16:10,137 line:-2
Siri会根据你所选择的类别
自动提出问题


312
00:16:10,604 --> 00:16:14,608 line:-2
因此不要在你自定义的确认对话中
包含问题


313
00:16:14,675 --> 00:16:15,976 line:-1
这里用白色突出显示


314
00:16:19,213 --> 00:16:20,514 line:-1
在响应对话中


315
00:16:20,581 --> 00:16:23,417 line:-1
Siri将提供适合所选类别的状态


316
00:16:23,817 --> 00:16:27,654 line:-2
你的自定义对话将附加在Siri
所提供的对话的最后


317
00:16:30,824 --> 00:16:33,760 line:-1
语音交互应该总是尽可能地强健


318
00:16:33,827 --> 00:16:37,764 line:-2
从而避免强迫用户打开app
并手动继续


319
00:16:38,432 --> 00:16:41,201 line:-1
比如你应该提供清晰的错误信息


320
00:16:41,268 --> 00:16:43,270 line:-1
如果某个参数值无效的话


321
00:16:43,337 --> 00:16:46,406 line:-1
然后Siri会自动重复提示那个值


322
00:16:47,307 --> 00:16:50,577 line:-1
你还应该首先避免自己陷入这种情况


323
00:16:50,644 --> 00:16:52,312 line:-1
如果你正在呈现选项列表


324
00:16:52,379 --> 00:16:55,983 line:-2
一定不要呈现你所了解的在运行时
无效的任何选项


325
00:16:59,219 --> 00:17:02,256 line:-2
你还应该考虑
深入挖掘用户潜力的机会


326
00:17:02,689 --> 00:17:05,893 line:-2
用户可能在捷径中包含
比如配送地址的值


327
00:17:06,093 --> 00:17:07,528 line:-1
因为一般来说就是他们家所在的位置


328
00:17:07,594 --> 00:17:10,531 line:-1
因此他们可能习惯不说配送地址


329
00:17:11,064 --> 00:17:13,599 line:-2
某天他们可能在离家很远的地方
使用这个捷径


330
00:17:13,834 --> 00:17:16,537 line:-2
你应该核查那种情况
并提示不同的地址


331
00:17:17,471 --> 00:17:18,771 line:-1
无论什么原因


332
00:17:18,839 --> 00:17:21,775 line:-2
用户可能想要继续在你的app中
运行捷径


333
00:17:22,276 --> 00:17:24,611 line:-1
他们可以轻触UI中的任意位置继续


334
00:17:25,244 --> 00:17:26,445 line:-1
当你呈现UI时


335
00:17:26,512 --> 00:17:30,217 line:-2
请记住整个区域都是打开你app的
一个大按钮


336
00:17:30,584 --> 00:17:33,353 line:-2
因此不要绘制任何看起来
可单独交互的元素


337
00:17:33,420 --> 00:17:34,254 line:-1
它们不能进行单独交互


338
00:17:35,455 --> 00:17:37,958 line:-1
当用户轻触这个区域时


339
00:17:38,025 --> 00:17:39,993 line:-1
请确保你的app在正确的位置打开


340
00:17:40,060 --> 00:17:43,730 line:-1
并在app中填充好


341
00:17:43,797 --> 00:17:45,132 line:-1
用户在此之前所提供的全部信息


342
00:17:46,934 --> 00:17:51,038 line:-2
最后我们鼓励你们在编写对话上
花点时间


343
00:17:51,104 --> 00:17:53,407 line:-1
这并不是进行一次快速传递


344
00:17:53,473 --> 00:17:54,641 line:-1
从而获得一些要展示的东西


345
00:17:54,708 --> 00:17:56,677 line:-1
最后就是最终要提交的产品


346
00:17:56,743 --> 00:18:01,348 line:-2
请记住在语音交互中
语言就是用户界面


347
00:18:01,415 --> 00:18:04,418 line:-1
因此你应该在Siri交互中


348
00:18:04,484 --> 00:18:08,088 line:-2
像对待app中的像素一样
尊重和关心措辞


349
00:18:09,389 --> 00:18:11,692 line:-1
照这样说 让我们看几个指导方针


350
00:18:14,328 --> 00:18:17,030 line:-2
不要太过礼貌或不要注入太多
个性化内容


351
00:18:17,097 --> 00:18:19,099 line:-1
想要自定义汤品的用户


352
00:18:19,166 --> 00:18:22,336 line:-2
在每次运行这个捷径时都会听到
这段非必要的对话


353
00:18:22,402 --> 00:18:24,738 line:-1
那很烦人


354
00:18:26,473 --> 00:18:28,041 line:-1
如果你不确定 就进行测试


355
00:18:28,108 --> 00:18:30,477 line:-1
听Siri说出你的对话


356
00:18:30,544 --> 00:18:33,614 line:-2
在听了三次之后
你觉得你的对话听起来怎么样？


357
00:18:33,680 --> 00:18:34,982 line:-1
听了十次之后呢？


358
00:18:35,616 --> 00:18:36,984 line:-1
如果你感觉其中某些部分令人讨厌


359
00:18:37,050 --> 00:18:40,621 line:-2
那很可能是一个不错的信号
表明你应该减少对话中的啰嗦信息


360
00:18:43,156 --> 00:18:45,559 line:-1
对话应该要简明 并保持中性


361
00:18:45,626 --> 00:18:48,295 line:-1
并传达你所期待的响应类型


362
00:18:51,231 --> 00:18:53,534 line:-1
不要在对话中包含app的名称


363
00:18:54,701 --> 00:18:56,470 line:-2
你的app应该以可视化的方式
进行属性化


364
00:18:56,537 --> 00:18:59,173 line:-1
通过你的确认和响应UI实现


365
00:18:59,239 --> 00:19:02,042 line:-1
偶尔通过Siri自己的添加实现


366
00:19:03,744 --> 00:19:06,079 line:-2
因此请剔除app的名称
不要担心 你的商标很安全


367
00:19:09,483 --> 00:19:12,819 line:-2
类似地 你也不应该在对话中包含
用户姓名


368
00:19:13,887 --> 00:19:17,925 line:-2
Siri有时会在HomePod上
说出用户姓名以验证他们的身份


369
00:19:17,991 --> 00:19:21,428 line:-2
如果你的app也这样做
那可能听起来有点啰嗦和烦人


370
00:19:23,830 --> 00:19:24,932 line:-1
因此请剔除用户的姓名


371
00:19:27,668 --> 00:19:31,538 line:-2
请避免使用第一人称
因为Siri不会执行


372
00:19:31,605 --> 00:19:32,606 line:-1
你的app要执行的动作


373
00:19:32,840 --> 00:19:35,375 line:-1
这是一个很细微的差别 但它很重要


374
00:19:35,442 --> 00:19:38,412 line:-2
以Siri的语音说
“我”或“我们”


375
00:19:38,645 --> 00:19:40,948 line:-2
用户可能认为Siri可以更好理解
你app的功能


376
00:19:41,014 --> 00:19:42,883 line:-1
而实际上它不能


377
00:19:42,950 --> 00:19:47,187 line:-2
用户可能会尝试采取你的app
和Siri不能理解的后续动作


378
00:19:49,790 --> 00:19:52,092 line:-1
与此相反 请中立地呈现选项


379
00:19:52,159 --> 00:19:55,662 line:-2
使用这样的词 比如
“在这里”或“那儿有一些选项”


380
00:19:58,165 --> 00:19:59,566 line:-1
那么我们今天学到了什么？


381
00:20:02,302 --> 00:20:06,173 line:-2
捷径旨在提升你app中
最可重复的功能


382
00:20:07,841 --> 00:20:09,443 line:-1
你应该使用“添加到Siri”按钮


383
00:20:09,510 --> 00:20:13,580 line:-2
确保用户了解他们可以在你app内
把哪些功能转化成捷径


384
00:20:15,649 --> 00:20:19,620 line:-2
你应该确保Siri交互合理、
简明和稳健


385
00:20:21,255 --> 00:20:23,857 line:-1
编写对话时 你应该要格外小心


386
00:20:24,525 --> 00:20:25,392 line:-1
谢谢

