1
00:00:00,506 --> 00:00:05,500
[音乐]


2
00:00:09,516 --> 00:00:13,500
[掌声]


3
00:00:15,666 --> 00:00:16,796
>> 大家早上好


4
00:00:17,466 --> 00:00:20,176
我是 Ricky Mondello


5
00:00:20,246 --> 00:00:22,016
今天能够站在这里


6
00:00:22,016 --> 00:00:24,126
给大家介绍 Apple 平台


7
00:00:24,126 --> 00:00:25,926
认证新内容 我感到非常激动


8
00:00:25,926 --> 00:00:30,856
介绍内容包括在认证服务框架中


9
00:00:30,856 --> 00:00:32,606
让人为之兴奋的全新 API


10
00:00:33,596 --> 00:00:36,136
我的目标就是帮助你的


11
00:00:36,136 --> 00:00:38,526
用户在你的 App 上面


12
00:00:38,526 --> 00:00:41,196
又快又安全地登录成功


13
00:00:44,736 --> 00:00:47,086
我们今天主要想谈的内容


14
00:00:47,126 --> 00:00:50,426
有五点 首先我们从


15
00:00:50,426 --> 00:00:52,000
Sign in with Apple 开始


16
00:00:54,606 --> 00:00:56,736
Sign in with Apple 对于想登入


17
00:00:56,736 --> 00:00:59,146
你的 App 的用户来说 


18
00:00:59,146 --> 00:00:59,936
是一个既简单又安全的方法


19
00:01:00,936 --> 00:01:03,926
只需要按几下


20
00:01:03,926 --> 00:01:10,616
然后再做一个面容 ID 识别


21
00:01:10,836 --> 00:01:12,736
Sign in with Apple 是一个 


22
00:01:12,736 --> 00:01:14,626
对于你所知道的其他单点登录程序


23
00:01:14,626 --> 00:01:16,986
来说 更加私人的替代性选择


24
00:01:18,326 --> 00:01:19,746
并且你可能已经知道


25
00:01:19,746 --> 00:01:21,776
这个功能的强大之处了


26
00:01:22,276 --> 00:01:23,716
但是关于你的 App 中


27
00:01:23,716 --> 00:01:25,616
已有认证的工作方式


28
00:01:25,616 --> 00:01:29,136
我还想再去强调关键的几点


29
00:01:30,366 --> 00:01:32,396
首先对于你的用户来说


30
00:01:32,396 --> 00:01:36,776
Sign in with Apple 比使用密码更加便捷


31
00:01:37,986 --> 00:01:40,356
人们通常都不太喜欢


32
00:01:40,606 --> 00:01:41,626
去管理密码


33
00:01:42,516 --> 00:01:44,166
当用户没有密码时


34
00:01:44,166 --> 00:01:46,386
其密码就不是


35
00:01:46,386 --> 00:01:48,286
一个容易被破解的密码


36
00:01:48,286 --> 00:01:50,136
更不会被钓鱼


37
00:01:50,136 --> 00:01:52,446
都是好事 这对于你和用户来说


38
00:01:53,786 --> 00:01:56,306
特别对于你来说


39
00:01:56,306 --> 00:01:58,526
这些帐号都是很棒帐号


40
00:01:59,276 --> 00:02:00,776
那些可以使用 Apple


41
00:02:00,776 --> 00:02:01,926
进行登录的帐号


42
00:02:01,926 --> 00:02:04,616
每一个都具备


43
00:02:04,616 --> 00:02:06,466
双重验证功能


44
00:02:06,466 --> 00:02:08,126
这已经可以保护他们的 Apple ID 了


45
00:02:12,286 --> 00:02:14,946
以及极强的生物识别功能


46
00:02:16,026 --> 00:02:19,706
让一名用户从注册开始 就有如此


47
00:02:19,706 --> 00:02:21,266
强大的安全保障比试图


48
00:02:21,266 --> 00:02:22,496
将其插入到已经有密码


49
00:02:22,496 --> 00:02:23,516
的帐号上 容易得多


50
00:02:24,026 --> 00:02:26,336
为了帮助你解决欺诈问题


51
00:02:26,666 --> 00:02:28,126
API 包含了一些信息


52
00:02:28,126 --> 00:02:31,596
主要关于 Apple 如何


53
00:02:31,596 --> 00:02:32,836
确认该帐号


54
00:02:32,836 --> 00:02:34,416
来源于真实用户


55
00:02:34,416 --> 00:02:36,106
这一点 你在今后会非常感激的


56
00:02:36,726 --> 00:02:38,286
而关于 Sign in with Apple


57
00:02:38,286 --> 00:02:39,696
我想强调的第三点是


58
00:02:39,696 --> 00:02:42,636
这是一种跨平台的


59
00:02:42,836 --> 00:02:45,976
体验 同时也可以


60
00:02:45,976 --> 00:02:47,126
支持用户的所有设备


61
00:02:47,476 --> 00:02:48,456
如果他们用 Apple ID 登录


62
00:02:48,456 --> 00:02:53,466
你的 App 这个过程就和 面容 ID 


63
00:02:53,466 --> 00:02:54,266
或者 触控 ID 识别一样简单


64
00:02:54,746 --> 00:02:56,996
感谢互联网还有互联网科技


65
00:02:56,996 --> 00:02:59,926
Sign in with Apple 现在随时随地都可用


66
00:03:01,956 --> 00:03:03,016
不用担心


67
00:03:03,756 --> 00:03:05,246
如果你的用户已经


68
00:03:05,246 --> 00:03:07,776
有了一个可以为他们


69
00:03:07,776 --> 00:03:09,646
服务的帐号 那么我们还将帮助


70
00:03:09,646 --> 00:03:10,516
你避免为他们二次创建帐号


71
00:03:11,736 --> 00:03:13,636
在启动 App 的时候 你的 App 可以


72
00:03:13,636 --> 00:03:15,316
检查已经保存在 iCloud 钥匙串


73
00:03:15,316 --> 00:03:17,036
中的含有密码的帐号


74
00:03:17,036 --> 00:03:19,396
这个过程甚至在你的 App


75
00:03:19,396 --> 00:03:20,656
展示标准登录界面之前


76
00:03:20,656 --> 00:03:22,636
它可以帮助你的用户


77
00:03:22,636 --> 00:03:24,000
做出正确的选择


78
00:03:26,296 --> 00:03:28,136
如果你有一个用户帐号服务器


79
00:03:28,136 --> 00:03:30,576
那么你和你的用户都会


80
00:03:30,576 --> 00:03:32,086
受益于 Sign in with Apple


81
00:03:33,266 --> 00:03:34,196
想要更多地了解它


82
00:03:34,616 --> 00:03:36,276
包括如何在网页 watchOS


83
00:03:36,276 --> 00:03:39,216
tvOS macOS iPadOS 和 iOS


84
00:03:40,326 --> 00:03:43,826
上面使用这个功能


85
00:03:43,956 --> 00:03:46,266
可以在 WWDC App


86
00:03:46,556 --> 00:03:47,846
上面查看 Sign in with Apple 的介绍


87
00:03:52,156 --> 00:03:55,006
这就是 Sign in with Apple


88
00:03:55,006 --> 00:03:56,646
一个对于基于密码的


89
00:03:56,646 --> 00:03:59,556
认证来说 更加便捷 私密的选择


90
00:04:00,836 --> 00:04:01,576
而且 基于密码的认证


91
00:04:01,576 --> 00:04:03,516
其实是我的下一个话题


92
00:04:03,516 --> 00:04:06,116
因为即使在如今社会


93
00:04:06,116 --> 00:04:10,816
已经有很棒且私密的单点登录选择


94
00:04:10,816 --> 00:04:11,856
密码还是构成了


95
00:04:11,856 --> 00:04:12,196
人们生活的大部分内容


96
00:04:13,296 --> 00:04:15,256
这就是为什么 iPhone 具备


97
00:04:15,346 --> 00:04:17,926
密码自动填写功能


98
00:04:17,926 --> 00:04:19,946
这个功能可以让用户


99
00:04:19,946 --> 00:04:23,916
在已有的登录屏幕上更加便捷地


100
00:04:23,916 --> 00:04:24,486
登录你的 App


101
00:04:25,946 --> 00:04:28,166
今天 我非常兴奋地告诉大家


102
00:04:28,166 --> 00:04:29,976
密码自动填写功能


103
00:04:29,976 --> 00:04:32,106
已经为 Mac 上的 iPad App


104
00:04:32,506 --> 00:04:33,926
适配 并且它的界面


105
00:04:33,926 --> 00:04:37,476
是专门为 Mac 量身定做的


106
00:04:37,686 --> 00:04:39,346
谢谢 为了让用户能够得到


107
00:04:39,346 --> 00:04:40,706
你们在这里已经目睹的


108
00:04:40,706 --> 00:04:42,496
这一非凡体验


109
00:04:42,496 --> 00:04:45,116
那你还需要再做一件事就能确保


110
00:04:45,116 --> 00:04:47,146
用户可以在列表中


111
00:04:47,386 --> 00:04:48,956
选择了正确的密码


112
00:04:49,196 --> 00:04:50,286
一旦你的 App 到了


113
00:04:50,286 --> 00:04:52,166
Mac 平台 它就会拥有一个


114
00:04:52,166 --> 00:04:54,606
新的 App ID 而这个 ID


115
00:04:54,606 --> 00:04:56,416
将会记录到你的服务器中


116
00:04:56,416 --> 00:04:58,236
为了可以将你的 App 和


117
00:04:58,236 --> 00:04:59,216
你的网址连接起来


118
00:05:00,936 --> 00:05:04,716
如果你是使用的 webcredentials


119
00:05:04,716 --> 00:05:06,556
那你的 Apple App


120
00:05:06,556 --> 00:05:07,346
站点关联文件看起来是这样


121
00:05:08,396 --> 00:05:10,016
而你所需要做的事情就是


122
00:05:10,016 --> 00:05:12,036
将 App ID 添加到这个 App 序列


123
00:05:12,946 --> 00:05:18,346
非常简单 但是如果你用的是


124
00:05:18,346 --> 00:05:21,066
通用链接 你得把新的 App ID


125
00:05:21,066 --> 00:05:24,526
作为其 Key 的一部分


126
00:05:24,526 --> 00:05:26,126
它可以获取列表


127
00:05:27,106 --> 00:05:30,066
对于 iOS 13 和 macOS Catalina


128
00:05:30,066 --> 00:05:31,116
来说 这个 Key 是新的


129
00:05:32,756 --> 00:05:35,086
为了保证 iOS 13 之前的


130
00:05:35,086 --> 00:05:37,926
版本兼容性 你需要


131
00:05:37,926 --> 00:05:40,086
使这个 Key 和数列值


132
00:05:40,086 --> 00:05:42,896
以及与你 iOS App


133
00:05:42,896 --> 00:05:45,886
上的现有 Key 保持一致 


134
00:05:46,836 --> 00:05:48,326
这一点至关重要


135
00:05:48,326 --> 00:05:50,066
这样可以确保通用链接


136
00:05:50,066 --> 00:05:51,356
可以为你还在使用 iOS 12


137
00:05:51,356 --> 00:05:53,276
的用户正常工作


138
00:05:54,576 --> 00:05:56,306
今年有很多全新的功能


139
00:05:56,306 --> 00:05:57,756
还有通用链接问世


140
00:05:57,756 --> 00:06:01,276
包括更加强大的 URL 匹配


141
00:06:01,676 --> 00:06:03,776
如果想要了解更多


142
00:06:03,776 --> 00:06:05,036
我建议你去 WWDC App


143
00:06:05,036 --> 00:06:06,856
中查看关于


144
00:06:06,856 --> 00:06:09,946
“What's New in Universal Link”的视频


145
00:06:14,636 --> 00:06:18,416
不论是在 Mac iPad Apple TV


146
00:06:18,416 --> 00:06:21,476
还是 iPhone 上 密码自动填写


147
00:06:21,666 --> 00:06:23,296
都让用户在你的登录界面


148
00:06:23,296 --> 00:06:26,116
更加便捷地登录 App


149
00:06:27,286 --> 00:06:31,346
但是我们仔细看下这个界面


150
00:06:32,246 --> 00:06:33,516
用户的当前任务是


151
00:06:33,516 --> 00:06:34,656
登录你的 App 吗


152
00:06:35,336 --> 00:06:37,096
对于这个问题 答案在这里


153
00:06:37,746 --> 00:06:39,026
这是键盘的一小部分


154
00:06:39,026 --> 00:06:42,076
这很棒 因为


155
00:06:42,076 --> 00:06:43,896
自动填写是在 


156
00:06:43,896 --> 00:06:45,996
iPhone 诞生之前


157
00:06:45,996 --> 00:06:47,876
我们就非常期待的


158
00:06:47,876 --> 00:06:50,036
一个可以整合


159
00:06:50,246 --> 00:06:50,736
帐号和密码栏的方式


160
00:06:52,046 --> 00:06:53,796
但是你的 App 可以


161
00:06:53,796 --> 00:06:55,786
拥有比这个更加人性化 


162
00:06:55,786 --> 00:06:58,526
更加精心打造的舒适体验


163
00:06:58,996 --> 00:07:00,646
有了 iOS 13 


164
00:07:00,646 --> 00:07:01,106
这个过程变得更加简单快捷


165
00:07:02,156 --> 00:07:05,476
刚才我向你们展示的 Sign in with Apple


166
00:07:05,476 --> 00:07:09,226
这种相同的体验 现在支持任何


167
00:07:09,226 --> 00:07:10,186
使用密码的 App


168
00:07:10,596 --> 00:07:13,526
而且它还支持认证服务框架


169
00:07:14,776 --> 00:07:20,016
相同的 API 还有功能也适用于 macOS Catalina


170
00:07:23,516 --> 00:07:29,176
[掌声]


171
00:07:29,676 --> 00:07:31,306
现在谈一谈如何把


172
00:07:31,306 --> 00:07:33,286
这个功能加入你的 App


173
00:07:34,336 --> 00:07:37,586
第一步就是用 AuthenticationServices


174
00:07:37,586 --> 00:07:39,156
框架敲一些代码


175
00:07:39,606 --> 00:07:41,786
你需要使用密码请求


176
00:07:41,786 --> 00:07:45,406
来制作一个 ASAuthorizationController


177
00:07:46,416 --> 00:07:48,006
这个 ASAuthorizationController


178
00:07:48,006 --> 00:07:49,486
是你在 Sign in with Apple 中


179
00:07:49,486 --> 00:07:50,526
使用的同一个对象


180
00:07:51,016 --> 00:07:54,186
但是在这里我们要用另一种请求


181
00:07:55,456 --> 00:07:58,286
你需要设置一个代理


182
00:07:58,286 --> 00:07:59,886
以及可以帮助协调


183
00:07:59,886 --> 00:08:01,976
用户界面展示


184
00:08:02,526 --> 00:08:04,796
然后它就会告知


185
00:08:04,796 --> 00:08:06,826
控制器来履行这个请求


186
00:08:08,296 --> 00:08:10,166
当用户已经选择了


187
00:08:10,166 --> 00:08:11,516
他们想要使用的帐号


188
00:08:12,586 --> 00:08:15,026
那么 API 就会调用代理


189
00:08:15,476 --> 00:08:16,986
然后你就可以那里


190
00:08:16,986 --> 00:08:18,536
填充登录信息


191
00:08:19,576 --> 00:08:21,716
如果 didCompleteWithError


192
00:08:21,716 --> 00:08:23,626
直接弹出来


193
00:08:23,626 --> 00:08:24,846
那就可能是你的用户


194
00:08:24,846 --> 00:08:26,406
没有在 iCould 钥匙串


195
00:08:26,406 --> 00:08:28,016
里面保存用于登录


196
00:08:28,016 --> 00:08:28,926
App 或者网页的密码


197
00:08:28,926 --> 00:08:31,256
然后你应该再向其


198
00:08:31,256 --> 00:08:33,166
展示你的 App 正常登录界面


199
00:08:33,356 --> 00:08:34,395
用户可以从那里登录


200
00:08:35,846 --> 00:08:37,106
但是你要确保 


201
00:08:37,106 --> 00:08:38,976
在测试设备上有认证信息


202
00:08:38,976 --> 00:08:40,366
然后你可以看到处理错误的 Handler


203
00:08:40,366 --> 00:08:42,196
被调用了 你就要去


204
00:08:42,196 --> 00:08:44,326
检查一下对应的域


205
00:08:45,506 --> 00:08:46,746
如果你之前没有通过


206
00:08:46,746 --> 00:08:48,056
对应域将你的 App


207
00:08:48,056 --> 00:08:49,366
和网站绑定在一起


208
00:08:50,056 --> 00:08:51,816
“Introducing Password AutoFill for Apps”


209
00:08:51,816 --> 00:08:53,996
这个视频会有一步一步


210
00:08:53,996 --> 00:08:55,016
的指导 可以帮助你


211
00:08:55,016 --> 00:08:55,336
实现这个目标


212
00:08:55,336 --> 00:08:59,386
非常简单 至于通用链接


213
00:08:59,386 --> 00:09:00,656
再次强调 你可以在


214
00:09:00,656 --> 00:09:02,466
WWDC App 中查看


215
00:09:02,466 --> 00:09:05,326
通用链接的视频


216
00:09:07,776 --> 00:09:10,276
这个 API 的功能


217
00:09:10,276 --> 00:09:12,586
实在是太赞了 因为


218
00:09:12,586 --> 00:09:16,036
你可以使用 ASAuthorizationController


219
00:09:16,036 --> 00:09:17,256
来请求多种类型的用户


220
00:09:18,346 --> 00:09:20,206
如果你想在 App 启动时


221
00:09:20,206 --> 00:09:22,036
同时处理基于密码的帐户


222
00:09:22,036 --> 00:09:24,176
和 Sign in with Apple 的帐户


223
00:09:24,176 --> 00:09:26,396
这个功能非常方便


224
00:09:27,636 --> 00:09:29,336
如果你这么做


225
00:09:29,336 --> 00:09:30,196
你需要确保你在


226
00:09:30,196 --> 00:09:34,356
didCompleteWithAuthorization 代理方法


227
00:09:34,356 --> 00:09:35,646
同时处理了这两种类型的认证


228
00:09:37,506 --> 00:09:39,636
这就可以看出使用全新


229
00:09:39,636 --> 00:09:41,586
认证服务 API 来


230
00:09:41,586 --> 00:09:45,666
创建你的 App 登录流程有多简单


231
00:09:46,066 --> 00:09:47,516
甚至比密码自动填写


232
00:09:47,516 --> 00:09:48,846
更加先进快捷


233
00:09:54,336 --> 00:09:56,686
只要我们有密码


234
00:09:57,956 --> 00:09:59,156
就需要有一个


235
00:09:59,156 --> 00:10:01,976
安全健康的方式来使用它


236
00:10:02,906 --> 00:10:04,726
这就是为什么 iPhone


237
00:10:04,886 --> 00:10:06,746
有推荐的强密码


238
00:10:07,406 --> 00:10:09,466
这是用来鼓励用户


239
00:10:09,466 --> 00:10:11,806
针对他们每个帐号


240
00:10:11,806 --> 00:10:12,816
都使用有效且独特的密码


241
00:10:12,816 --> 00:10:15,056
这可以大幅度提升


242
00:10:15,056 --> 00:10:17,436
他们的安全系数


243
00:10:17,436 --> 00:10:18,746
也比用手创建密码


244
00:10:18,746 --> 00:10:21,206
反而输入错误方便得多


245
00:10:22,466 --> 00:10:23,746
但是如果你的用户


246
00:10:23,856 --> 00:10:25,206
已经有了一个安全性比较低的


247
00:10:25,206 --> 00:10:25,716
密码 这该怎么办呢


248
00:10:26,786 --> 00:10:30,096
现在 在 Safari 13 还有 iOS 13


249
00:10:30,796 --> 00:10:32,796
当一个用户使用


250
00:10:33,136 --> 00:10:34,536
较弱的密码登录网页的时候


251
00:10:34,536 --> 00:10:35,966
Safari 会自动识别


252
00:10:35,966 --> 00:10:38,536
它将提示用户


253
00:10:38,536 --> 00:10:41,806
去对应的网页修改密码


254
00:10:42,546 --> 00:10:43,726
只有登录的时候


255
00:10:43,726 --> 00:10:45,246
也许才是用户思考


256
00:10:45,246 --> 00:10:46,696
帐户对于他们来说


257
00:10:46,696 --> 00:10:47,266
到底意味着什么的时候


258
00:10:47,836 --> 00:10:50,346
如果用户接受了 Safari 密码


259
00:10:50,346 --> 00:10:51,826
他们将会被带领到


260
00:10:51,826 --> 00:10:54,266
设置界面 在这里 他们可以


261
00:10:54,266 --> 00:10:54,886
更改自己的密码


262
00:10:55,366 --> 00:10:56,546
有了推荐强密码


263
00:10:56,546 --> 00:11:01,846
升级密码只需要几次点按而已


264
00:11:02,516 --> 00:11:06,596
[掌声]


265
00:11:07,096 --> 00:11:08,266
当然了 这个功能


266
00:11:08,266 --> 00:11:11,000
也支持带有 Safari 13 的 Mac


267
00:11:15,046 --> 00:11:20,136
当你的用户被直接带到


268
00:11:20,136 --> 00:11:22,166
网页的更改密码界面


269
00:11:22,166 --> 00:11:24,186
而不是首页的时候


270
00:11:24,186 --> 00:11:24,596
这个流程才称得上最佳


271
00:11:25,806 --> 00:11:27,296
而真正酷的地方在于


272
00:11:27,296 --> 00:11:28,566
这个流程全是由你掌控


273
00:11:28,566 --> 00:11:30,656
并且非常容易就能实现


274
00:11:31,416 --> 00:11:35,556
比如 Twitter GitHub 还有 WordPress.com


275
00:11:35,556 --> 00:11:37,396
这些网页都予以实施


276
00:11:37,396 --> 00:11:41,056
你只需要放置一个重定向


277
00:11:41,056 --> 00:11:43,056
在你的服务器里 然后它


278
00:11:43,056 --> 00:11:44,486
就可以把用户切到


279
00:11:44,966 --> 00:11:45,886
密码更改页面 这就好了


280
00:11:46,766 --> 00:11:49,636
重定向可以是客户端的重定向


281
00:11:50,056 --> 00:11:51,436
也可以是服务器端的重定向


282
00:11:52,096 --> 00:11:54,646
你们可以再多了解一下


283
00:11:54,646 --> 00:11:58,586
“Well-Known URL for Changing Passwords”


284
00:11:58,586 --> 00:12:00,426
这个 URL 做建议标准的


285
00:12:01,736 --> 00:12:02,726
如果你在网页上搜索它


286
00:12:02,726 --> 00:12:04,746
也会非常简单地就能找到


287
00:12:08,406 --> 00:12:13,176
这就是关于 iOS 13 iPadOS 还有


288
00:12:13,596 --> 00:12:16,536
Safari 13 如何帮助用户升级


289
00:12:16,536 --> 00:12:17,426
他们安全性比较差的密码的内容


290
00:12:20,656 --> 00:12:22,236
你们的 App 有一些


291
00:12:22,236 --> 00:12:24,096
使用了第三方网页服务器


292
00:12:24,536 --> 00:12:25,936
如果你是这么做的


293
00:12:25,936 --> 00:12:27,456
那么你可能在使用


294
00:12:27,456 --> 00:12:27,976
比如 OAuth 这种标准


295
00:12:29,196 --> 00:12:31,866
认证服务框架


296
00:12:32,246 --> 00:12:34,526
ASWebAuthenticationSession 是


297
00:12:34,526 --> 00:12:36,706
处理这样的认证最好的方式


298
00:12:37,246 --> 00:12:42,086
一旦用户确认他们可以登录


299
00:12:42,086 --> 00:12:43,916
那么 AuthenticationSession 


300
00:12:44,306 --> 00:12:47,586
就可以使用在 Safari Cookie 还有数据中


301
00:12:47,586 --> 00:12:49,716
保存的现有登入帐号


302
00:12:49,716 --> 00:12:51,186
让用户更快地登录


303
00:12:51,566 --> 00:12:54,836
有时 用户已经在身份


304
00:12:54,836 --> 00:12:56,356
提供商那里登录


305
00:12:56,356 --> 00:12:58,506
他们只需要做的就是


306
00:12:58,506 --> 00:13:01,006
容易登录你的 App


307
00:13:01,736 --> 00:13:03,186
一旦他们点按同意


308
00:13:03,186 --> 00:13:03,666
那么他们就成功登录了


309
00:13:03,756 --> 00:13:06,276
就是这么简单


310
00:13:06,456 --> 00:13:08,556
今天我还非常高兴地告诉


311
00:13:08,556 --> 00:13:11,036
大家 这个 API


312
00:13:11,036 --> 00:13:15,576
现在已经支持 macOS Catalina


313
00:13:16,516 --> 00:13:19,366
[掌声]


314
00:13:19,866 --> 00:13:23,616
在 macOS Catalina 平台


315
00:13:23,616 --> 00:13:25,446
这个 API 使用用户优选


316
00:13:25,686 --> 00:13:27,386
的网页浏览器登录


317
00:13:27,386 --> 00:13:28,326
（如果该浏览器支持的话）


318
00:13:28,376 --> 00:13:30,186
这就非常棒


319
00:13:30,606 --> 00:13:33,806
因为这意味着你的所有用户都可以


320
00:13:33,806 --> 00:13:35,696
拥有自己的浏览器密码管理器


321
00:13:35,696 --> 00:13:37,036
或者密码管理扩展插件


322
00:13:37,036 --> 00:13:40,266
来使用 这可以帮助他们更快地登录


323
00:13:42,416 --> 00:13:43,816
如果你正在使用


324
00:13:43,816 --> 00:13:46,156
AuthenticationSession API


325
00:13:46,156 --> 00:13:47,456
它今年有几个全新


326
00:13:47,456 --> 00:13:48,216
功能需要你了解


327
00:13:48,326 --> 00:13:53,136
首先就是更加私密的登录方式


328
00:13:54,576 --> 00:13:57,216
因为 AuthenticationSession 


329
00:13:57,216 --> 00:13:58,726
会和 Safari 分享网页数据


330
00:13:59,686 --> 00:14:01,586
ASWebAuthenticationSession


331
00:14:01,676 --> 00:14:04,366
可以实现单点登录体验


332
00:14:05,496 --> 00:14:08,116
现在在 iOS 13 中 你的 App


333
00:14:08,116 --> 00:14:10,436
可以选择提供一个


334
00:14:10,436 --> 00:14:12,716
更加私密的登录方式


335
00:14:12,716 --> 00:14:14,896
在用户登录你的 App 之后


336
00:14:14,896 --> 00:14:16,446
它不会把用户信息


337
00:14:16,446 --> 00:14:18,306
留在网页浏览器


338
00:14:18,306 --> 00:14:19,466
的身份提供商那里


339
00:14:20,456 --> 00:14:24,546
如果你的 App 想要这样的功能


340
00:14:24,546 --> 00:14:25,026
那么用户就不会看到对话框


341
00:14:25,886 --> 00:14:27,726
相反 他们会直接被


342
00:14:27,726 --> 00:14:31,496
切到身份提供商那里进行登录


343
00:14:33,576 --> 00:14:35,266
实现这个功能 需要


344
00:14:35,266 --> 00:14:36,616
在启动会话之前


345
00:14:36,616 --> 00:14:38,836
设置 prefersEphemeral


346
00:14:38,836 --> 00:14:41,426
WebBrowserSession 的属性为 true


347
00:14:42,696 --> 00:14:44,376
这样做 你就可以给你的


348
00:14:44,436 --> 00:14:47,396
用户提供更多的隐私


349
00:14:47,396 --> 00:14:49,486
避免那些确认对话框的出现


350
00:14:49,486 --> 00:14:50,796
从而让你的 App


351
00:14:50,796 --> 00:14:52,426
变得更加人性化


352
00:14:54,296 --> 00:14:57,266
下面我要说的是多窗口


353
00:14:58,706 --> 00:15:02,586
在 iOS 12 AuthenticationSession API


354
00:15:02,586 --> 00:15:07,186
不需要任何界面或者窗口的信息


355
00:15:07,186 --> 00:15:08,236
来展示它的界面


356
00:15:09,236 --> 00:15:11,326
这是因为当时的 API


357
00:15:11,326 --> 00:15:14,186
只使用于 iOS 平台


358
00:15:14,186 --> 00:15:15,236
且基本所有 App 都是单窗口显示


359
00:15:16,186 --> 00:15:19,136
但是现在有了 iPadOS 和 macOS 支持


360
00:15:19,136 --> 00:15:22,076
你们需要给我们提供一些信息


361
00:15:22,076 --> 00:15:23,686
来搞清楚在哪里显示界面


362
00:15:25,056 --> 00:15:28,726
首先 你需要给会话


363
00:15:28,726 --> 00:15:30,746
一个 presentationContextProvider


364
00:15:31,496 --> 00:15:33,466
然后这个 presentationContextProvider


365
00:15:33,796 --> 00:15:35,606
就会通过 presentationAnchor() 方法


366
00:15:35,606 --> 00:15:36,896
提供一个窗口


367
00:15:37,786 --> 00:15:39,316
这是一个非常简单的转换


368
00:15:39,316 --> 00:15:43,926
也是你肯定想要去做的一件事情


369
00:15:43,926 --> 00:15:45,026
还有关于 OAuth 的另一件事


370
00:15:46,096 --> 00:15:48,576
ASWebAuthenticationSession


371
00:15:48,576 --> 00:15:50,936
有一个弃用的上一代


372
00:15:51,006 --> 00:15:52,226
叫做 SFAuthenticationSession


373
00:15:52,866 --> 00:15:54,526
这也是基于 Safari 服务框架设计出的


374
00:15:55,536 --> 00:15:57,046
如果你还没有完全


375
00:15:57,046 --> 00:15:58,076
准备好 那么可能还需要


376
00:15:58,076 --> 00:15:58,916
一段时间去过渡


377
00:16:00,066 --> 00:16:02,216
ASWebAuthenticationSession 


378
00:16:02,216 --> 00:16:03,256
拥有的新功能我们已经谈过了


379
00:16:03,256 --> 00:16:07,786
它还支持 Mac 基本上 它是


380
00:16:07,786 --> 00:16:09,636
未弃用 可立即使用的


381
00:16:09,636 --> 00:16:11,026
旧版本 API 的替代品


382
00:16:11,756 --> 00:16:15,936
这就是 OAuth


383
00:16:20,836 --> 00:16:23,776
今年 macOS 上的 Safari 支持


384
00:16:23,936 --> 00:16:26,906
WebAuthentication 


385
00:16:26,906 --> 00:16:28,336
标准的 USB 安全密匙


386
00:16:29,156 --> 00:16:31,246
我对于此项更新


387
00:16:31,246 --> 00:16:33,056
非常满意 尤其是因为


388
00:16:33,056 --> 00:16:34,096
我知道你们很多人


389
00:16:34,096 --> 00:16:35,586
都在对这个功能翘首以盼


390
00:16:36,736 --> 00:16:39,266
考虑到你们在保护的受众


391
00:16:39,266 --> 00:16:41,126
以及内容 还有一直担心的


392
00:16:41,126 --> 00:16:42,986
威胁模型


393
00:16:42,986 --> 00:16:47,126
你们也许会尝试将物理层面的


394
00:16:47,126 --> 00:16:49,566
一些硬件设备用于用户认证


395
00:16:50,696 --> 00:16:54,346
Safari 13 支持 基于 USB


396
00:16:54,796 --> 00:16:57,246
FIDO2-compliant 且具备 WebAuthentication 


397
00:16:57,246 --> 00:17:01,656
标准的设备 在 macOS Catalina 中


398
00:17:02,426 --> 00:17:05,185
它会作为实验性内容


399
00:17:05,185 --> 00:17:07,626
出现在 Seed 1 中


400
00:17:07,626 --> 00:17:09,236
而在 Seed 2 中 它将作为默认功能出现


401
00:17:10,175 --> 00:17:11,786
如果你们下载了


402
00:17:11,786 --> 00:17:13,465
Safari Technology Preview


403
00:17:13,465 --> 00:17:14,356
你们也可以现在就尝试一下


404
00:17:14,955 --> 00:17:17,816
如果你们对于


405
00:17:17,816 --> 00:17:19,976
支持 USB 安全密匙 感兴趣


406
00:17:20,506 --> 00:17:22,445
那就非常需要


407
00:17:22,445 --> 00:17:24,236
提供一个完善的帐号恢复模式


408
00:17:25,435 --> 00:17:26,935
以防用户的密码


409
00:17:27,205 --> 00:17:29,816
丢失 被盗或者损坏


410
00:17:31,276 --> 00:17:33,196
而基于硬件令牌


411
00:17:33,336 --> 00:17:35,316
设计帐号恢复系统


412
00:17:35,316 --> 00:17:37,996
是至关重要的


413
00:17:37,996 --> 00:17:39,336
但是并不一定那么简单


414
00:17:40,486 --> 00:17:42,286
所以除非你已经


415
00:17:42,286 --> 00:17:44,246
在从事这项工作 或者


416
00:17:44,246 --> 00:17:46,106
已经对其进行了严密的思考


417
00:17:46,856 --> 00:17:50,076
否则极有可能我今天讲的其他


418
00:17:50,076 --> 00:17:51,816
领域的内容 和你们的用户


419
00:17:51,816 --> 00:17:54,976
你的 App 还有你的网页更加相关


420
00:18:00,266 --> 00:18:01,866
如果你开发了一款带有


421
00:18:01,866 --> 00:18:04,386
用户帐号的 App 


422
00:18:04,426 --> 00:18:05,286
那么我今天讲的内容


423
00:18:05,286 --> 00:18:05,506
你们需要注意三点


424
00:18:06,936 --> 00:18:11,036
首先 务必优先考虑使用 Sign in with Apple


425
00:18:12,196 --> 00:18:13,946
对于你们的用户来说


426
00:18:13,946 --> 00:18:15,736
最好的密码就是没密码


427
00:18:16,306 --> 00:18:19,666
尤其是它还支持双重验证


428
00:18:19,666 --> 00:18:21,000
以及很棒的生物识别功能


429
00:18:22,236 --> 00:18:25,126
第二 使用认证服务框架


430
00:18:25,476 --> 00:18:28,086
让登录你的 App


431
00:18:28,086 --> 00:18:30,286
变成只需点按一次的工作


432
00:18:31,056 --> 00:18:32,406
用户几乎无需


433
00:18:32,406 --> 00:18:34,796
再去找键盘 就能登录你的 App


434
00:18:35,476 --> 00:18:39,686
最后就是使用已知的 URL 来更改密码


435
00:18:40,456 --> 00:18:44,056
这非常简单 仅仅只需要一会


436
00:18:44,056 --> 00:18:46,146
就能在 Safari 帮助你的


437
00:18:46,146 --> 00:18:47,586
用户更新他们的密码时


438
00:18:47,756 --> 00:18:48,906
实现极棒的效果


439
00:18:51,076 --> 00:18:52,686
在 WWDC 的 App 


440
00:18:52,686 --> 00:18:54,106
或者对应网站上


441
00:18:54,196 --> 00:18:57,136
你都能找到关于我今天


442
00:18:57,136 --> 00:18:57,356
介绍的内容更多的信息


443
00:18:58,406 --> 00:18:59,796
这就是我的演讲


444
00:18:59,956 --> 00:19:01,066
非常感谢大家


445
00:19:01,376 --> 00:19:02,556
希望你们都能


446
00:19:02,556 --> 00:19:04,186
享受美好的 WWDC


447
00:19:05,176 --> 00:19:07,500
[掌声]

