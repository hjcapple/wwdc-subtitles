1
00:00:06,006 --> 00:00:09,409 line:-2
SwiftUI中的辅助功能
为每个人建立新一代的app


2
00:00:09,476 --> 00:00:12,412 line:-2
大家早上好 我是
Michael Gorbach


3
00:00:12,479 --> 00:00:14,948 line:-2
同我一起演示的是我同事
John Nefulda


4
00:00:15,015 --> 00:00:16,750 line:-2
我们都来自
Apple的辅助功能团队


5
00:00:18,452 --> 00:00:23,056 line:-2
我相信大家都很兴奋 对于
SwiftUI及它如何能让你创建


6
00:00:23,390 --> 00:00:25,893 line:-1
更好 更快 更易操作的app


7
00:00:26,994 --> 00:00:32,432 line:-2
我对SwiftUI也很兴奋
更让我兴奋的是


8
00:00:32,499 --> 00:00:34,668 line:-1
它的辅助能力


9
00:00:35,669 --> 00:00:40,207 line:-2
今天我们向大家演示SwiftUI
是如何帮助你构建新一代


10
00:00:40,274 --> 00:00:42,676 line:-1
面向所有用户的app


11
00:00:45,179 --> 00:00:48,048 line:-1
首先我们来快速了解一下


12
00:00:48,315 --> 00:00:51,618 line:-2
什么是辅助功能
以及我们的辅助功能技术


13
00:00:51,685 --> 00:00:52,719 line:-1
在我们的平台


14
00:00:55,589 --> 00:01:01,728 line:-2
然后我们讲述SwiftUI
如何能让你的app以默认方式


15
00:01:01,995 --> 00:01:02,996 line:-1
更易操作


16
00:01:05,032 --> 00:01:09,136 line:-1
John会完整地讲解辅助API


17
00:01:09,203 --> 00:01:10,571 line:-1
就是今天的主题


18
00:01:11,104 --> 00:01:15,809 line:-1
他还会带大家了解辅助树


19
00:01:15,876 --> 00:01:18,245 line:-1
是SwiftUI在app中生成的


20
00:01:21,915 --> 00:01:23,717 line:-1
那么首先开始介绍


21
00:01:24,852 --> 00:01:28,889 line:-2
今天我们讲到辅助功能时
究竟在讲什么


22
00:01:30,057 --> 00:01:35,195 line:-2
各位都在app上投入了大量精力
为了将它们变得有趣


23
00:01:35,262 --> 00:01:38,432 line:-1
实用 有益 且令人愉悦


24
00:01:39,766 --> 00:01:43,804 line:-2
做了这么多你一定希望
你的app可以服务于所有


25
00:01:43,871 --> 00:01:46,907 line:-2
潜在客户
而不是其中一部分


26
00:01:48,008 --> 00:01:50,444 line:-1
这就是辅助功能的意义


27
00:01:50,511 --> 00:01:54,314 line:-2
它是为了让身患残障的客户
也能完全


28
00:01:54,381 --> 00:01:56,617 line:-1
享受你app的价值


29
00:01:57,684 --> 00:02:00,187 line:-1
你也会收获更多开心的客户


30
00:02:01,555 --> 00:02:05,125 line:-2
辅助功能特别有用
尤其是客户中有残障人士时


31
00:02:06,360 --> 00:02:11,231 line:-2
在我们的各种设备上 如Mac、
iPhone、Watch、HomePod


32
00:02:11,798 --> 00:02:16,370 line:-2
Apple的辅助技术
让残障者的生活更加完整


33
00:02:17,604 --> 00:02:22,276 line:-2
它们为残障人士打通了更多可能
而几年前这根本不存在


34
00:02:23,777 --> 00:02:27,748 line:-2
这样的结果很大程度上
要归功于你的app


35
00:02:28,415 --> 00:02:30,751 line:-2
没错
你的app能改变人们的生活


36
00:02:31,351 --> 00:02:34,488 line:-2
但为了实现它
你还需要更努力地让这些功能


37
00:02:34,555 --> 00:02:35,489 line:-1
更好用


38
00:02:39,393 --> 00:02:43,130 line:-1
在残障人士与app交互时


39
00:02:43,197 --> 00:02:47,334 line:-2
他们通常使用
Apple内置的辅助功能


40
00:02:48,068 --> 00:02:51,672 line:-2
我们有太多这样的功能
用于我们的各个平台


41
00:02:52,306 --> 00:02:54,942 line:-1
这里我们只讲其中一个旁白


42
00:02:57,077 --> 00:03:01,181 line:-2
旁白是屏幕阅读器
所有平台都可用


43
00:03:01,615 --> 00:03:06,220 line:-2
它是为了让低视力和失明的人
在使用Apple设备时


44
00:03:06,286 --> 00:03:08,222 line:-1
不再需要看到屏幕


45
00:03:09,690 --> 00:03:12,192 line:-1
它的工作就是读给你听


46
00:03:12,860 --> 00:03:15,495 line:-2
旁白会带你逐个了解
屏幕上的元素


47
00:03:15,762 --> 00:03:17,164 line:-1
每次就一个元素


48
00:03:17,698 --> 00:03:21,635 line:-2
播放相关的信息
比如按键名称


49
00:03:21,969 --> 00:03:25,172 line:-2
图片名称
以及文本字段值


50
00:03:26,440 --> 00:03:32,079 line:-2
它还允许在iOS上用手势
或者在Mac上用热键


51
00:03:32,145 --> 00:03:35,516 line:-1
完成交互并触发相应动作


52
00:03:36,250 --> 00:03:39,253 line:-2
现在演示的就是旁白
在Mac上与计算器互动


53
00:03:39,920 --> 00:03:43,457 line:-2
旁白正读到这里
并将阅读的内容显示在


54
00:03:43,524 --> 00:03:44,625 line:-1
右下角


55
00:03:46,860 --> 00:03:51,231 line:-2
在这个长长的名单上
今年多了两个酷炫的新东西


56
00:03:51,832 --> 00:03:53,534 line:-2
第一个是
Voice Control


57
00:03:53,700 --> 00:03:56,436 line:-2
我相信你们都已经
看过那些惊人的演示了


58
00:03:58,906 --> 00:04:01,275 line:-1
第二 对 它很酷


59
00:04:03,644 --> 00:04:05,679 line:-1
第二个是全键盘访问


60
00:04:06,046 --> 00:04:09,349 line:-2
这是今年全新的iOS功能
在Mac上也有极大提升


61
00:04:10,217 --> 00:04:14,388 line:-2
全键盘访问让你
能完全使用Mac或iOS设备


62
00:04:14,454 --> 00:04:15,989 line:-1
只用一个键盘


63
00:04:17,690 --> 00:04:21,928 line:-2
它能让你迅速灵活地
在Apple设备上完成交互


64
00:04:23,063 --> 00:04:26,500 line:-2
我们相信这个功能
能被真正地使用


65
00:04:26,567 --> 00:04:28,402 line:-1
不仅仅作为辅助功能


66
00:04:28,635 --> 00:04:32,573 line:-2
而且能够满足对Apple
设备生产力有更多要求的用户


67
00:04:32,840 --> 00:04:34,842 line:-1
在屏幕上移动 触发命令


68
00:04:36,243 --> 00:04:39,246 line:-2
这是全键盘访问功能
在iOS上与计算器的交互


69
00:04:39,813 --> 00:04:43,650 line:-2
注意这个高亮的8键显示了
键盘关注的点


70
00:04:45,385 --> 00:04:49,323 line:-2
这两个优秀的功能完美地
诠释了我们团队


71
00:04:49,389 --> 00:04:51,158 line:-1
不断在学习的东西


72
00:04:51,959 --> 00:04:56,129 line:-2
辅助功能服务于所有人
不仅是残障人士


73
00:04:56,763 --> 00:04:59,900 line:-2
这就是为什么你多做一点
在app的辅助功能上


74
00:04:59,967 --> 00:05:01,435 line:-1
就会有广泛的影响


75
00:05:04,705 --> 00:05:09,977 line:-2
我们的平台最好的一点
就是许多功能


76
00:05:10,043 --> 00:05:13,647 line:-2
大屏上显示的
包括我们刚刚讨论过的 都用同一套


77
00:05:13,714 --> 00:05:15,249 line:-1
底层技术


78
00:05:15,983 --> 00:05:20,120 line:-2
如果你的app能很好运行辅助功能
其他的也可以


79
00:05:22,022 --> 00:05:25,092 line:-2
所有这些功能最终都基于
你的app提供的信息


80
00:05:25,158 --> 00:05:27,027 line:-1
给我们平台


81
00:05:27,361 --> 00:05:30,230 line:-2
信息越完整
这些功能就越好用


82
00:05:31,031 --> 00:05:35,235 line:-2
我们称之为
app的辅助功能UI


83
00:05:36,870 --> 00:05:38,972 line:-1
究竟需要哪些信息呢


84
00:05:39,139 --> 00:05:43,043 line:-2
就以这个计算器
快速做一个简单的例子


85
00:05:43,277 --> 00:05:44,344 line:-1
然后把它拆开


86
00:05:45,646 --> 00:05:49,049 line:-1
app中的辅助功能UI


87
00:05:49,116 --> 00:05:51,585 line:-1
包含多个辅助功能元素


88
00:05:52,119 --> 00:05:55,923 line:-2
计算器中的每个视图
构成一个辅助功能元素


89
00:05:57,558 --> 00:06:00,627 line:-2
这里的辅助功能元素
大部分是按键


90
00:06:01,161 --> 00:06:03,363 line:-1
现在我们单看其中一个


91
00:06:04,631 --> 00:06:08,168 line:-2
这里有个X键在左边
它的辅助功能元素


92
00:06:08,235 --> 00:06:09,236 line:-1
在右边


93
00:06:10,070 --> 00:06:12,472 line:-2
注意它有一个标签
要旁白读出


94
00:06:13,173 --> 00:06:16,643 line:-2
所有元素都要配一个类似的标签
以便旁白的用户


95
00:06:16,910 --> 00:06:18,745 line:-1
知道他们正在app里做什么


96
00:06:19,947 --> 00:06:23,483 line:-2
这里 计算器的开发者
已经客户化了


97
00:06:23,550 --> 00:06:26,887 line:-2
默认标签
将符号X对应文本 乘以


98
00:06:28,222 --> 00:06:29,957 line:-1
元素也分类型


99
00:06:30,390 --> 00:06:35,495 line:-2
在iOS上的描述是trait
在MacOS上是role


100
00:06:35,963 --> 00:06:37,331 line:-1
类型是按键


101
00:06:38,232 --> 00:06:41,602 line:-2
最后
这个按键元素设有默认动作


102
00:06:42,169 --> 00:06:45,038 line:-2
MacOS上为按键
iOS上为轻触


103
00:06:45,472 --> 00:06:49,576 line:-2
旁白用户可以使用这些动作
与元素进行交互


104
00:06:51,945 --> 00:06:53,614 line:-1
再来看另外一个


105
00:06:54,181 --> 00:06:58,151 line:-1
这是上方显示计算结果的地方


106
00:06:59,152 --> 00:07:02,322 line:-2
开发者已经给它配了一个标签
命名为display


107
00:07:03,390 --> 00:07:07,828 line:-2
它还显示了另一个重要信息
叫做value


108
00:07:08,028 --> 00:07:10,163 line:-1
就是现在显示的文本


109
00:07:11,532 --> 00:07:14,568 line:-2
它没有默认动作
因为你不能立刻与


110
00:07:14,635 --> 00:07:15,636 line:-1
这个元素互动


111
00:07:16,970 --> 00:07:21,141 line:-2
默认动作不是唯一方法
让辅助功能用户


112
00:07:21,208 --> 00:07:24,077 line:-1
与app和其中的元素进行交互


113
00:07:24,678 --> 00:07:29,283 line:-2
你可以添加自定义动作
给app中的辅助功能元素


114
00:07:29,883 --> 00:07:32,886 line:-2
比如你可以给它添加
一个自定义动作clear


115
00:07:33,220 --> 00:07:34,621 line:-1
就是清除显示


116
00:07:37,057 --> 00:07:40,427 line:-1
以上就是计算器的辅助功能UI


117
00:07:41,161 --> 00:07:42,563 line:-1
你的app也有


118
00:07:43,230 --> 00:07:45,566 line:-1
许多辅助都是自动创建


119
00:07:45,632 --> 00:07:48,368 line:-2
但你可以多做一点
让它更好用


120
00:07:50,437 --> 00:07:54,908 line:-1
你会不断完善app的可视用户界面


121
00:07:55,676 --> 00:07:56,844 line:-1
同样你也会


122
00:07:56,910 --> 00:07:58,745 line:-1
完善你的辅助功能


123
00:07:58,812 --> 00:07:59,947 line:-1
用户界面


124
00:08:00,948 --> 00:08:02,516 line:-1
这里有三个关键点


125
00:08:02,583 --> 00:08:03,417 line:-1
就是我们将要


126
00:08:03,483 --> 00:08:04,852 line:-1
展示的内容


127
00:08:06,186 --> 00:08:08,155 line:-1
首先你的辅助功能元素


128
00:08:08,222 --> 00:08:09,156 line:-1
一定要


129
00:08:09,223 --> 00:08:10,057 line:-1
易于理解


130
00:08:10,557 --> 00:08:11,658 line:-1
它们要有合理的


131
00:08:11,725 --> 00:08:13,694 line:-1
标签 值 和其他


132
00:08:13,760 --> 00:08:14,995 line:-1
描述信息


133
00:08:15,162 --> 00:08:16,864 line:-1
举个例子


134
00:08:16,930 --> 00:08:18,565 line:-1
计算器更改了标签


135
00:08:18,632 --> 00:08:20,634 line:-1
将X键对应乘以


136
00:08:20,701 --> 00:08:21,635 line:-1
就更易于理解


137
00:08:22,135 --> 00:08:25,038 line:-1
元素还应该


138
00:08:25,105 --> 00:08:25,939 line:-1
可交互


139
00:08:26,406 --> 00:08:28,308 line:-1
也就是说适当的默认


140
00:08:28,375 --> 00:08:30,277 line:-1
动作和自定义动作


141
00:08:30,344 --> 00:08:31,512 line:-1
要在需要时出现


142
00:08:32,212 --> 00:08:33,679 line:-1
添加清楚的动作


143
00:08:33,746 --> 00:08:35,048 line:-1
给主屏幕 如之前所说


144
00:08:35,115 --> 00:08:36,750 line:-1
就是这样一个例子


145
00:08:37,985 --> 00:08:39,419 line:-1
最后 元素应该


146
00:08:39,486 --> 00:08:40,687 line:-1
可引导


147
00:08:41,288 --> 00:08:42,688 line:-1
慎重考虑


148
00:08:42,756 --> 00:08:44,157 line:-1
如何排序辅助功能


149
00:08:44,224 --> 00:08:45,792 line:-1
元素并将它们按需分团


150
00:08:45,859 --> 00:08:47,694 line:-1
会让你的app


151
00:08:47,761 --> 00:08:49,463 line:-1
更好的使用


152
00:08:49,530 --> 00:08:50,797 line:-1
辅助功能


153
00:08:51,331 --> 00:08:54,434 line:-1
如果你有兴趣了解


154
00:08:54,501 --> 00:08:56,036 line:-1
如何完成这些有趣的工作


155
00:08:56,103 --> 00:08:58,105 line:-2
用AppKit或UIKit
我们有一些


156
00:08:58,172 --> 00:08:59,840 line:-2
很棒的讲座给你
但不包括


157
00:08:59,907 --> 00:09:00,741 line:-1
本场


158
00:09:01,508 --> 00:09:03,076 line:-1
今天的主题是


159
00:09:03,143 --> 00:09:06,513 line:-1
SwiftUI


160
00:09:06,580 --> 00:09:09,183 line:-1
在Apple我们始终深信


161
00:09:09,249 --> 00:09:11,118 line:-1
辅助的重要性


162
00:09:11,185 --> 00:09:12,686 line:-1
和辅助的力量


163
00:09:13,487 --> 00:09:14,721 line:-1
因此我们所有人都


164
00:09:14,788 --> 00:09:15,989 line:-1
十分努力地打造


165
00:09:16,056 --> 00:09:17,424 line:-1
各种框架 让你们


166
00:09:17,591 --> 00:09:19,526 line:-1
更轻松地使用app


167
00:09:19,593 --> 00:09:20,694 line:-1
甚至自动化某些


168
00:09:20,761 --> 00:09:21,595 line:-1
地方


169
00:09:22,629 --> 00:09:24,398 line:-1
今天因为有高水平的


170
00:09:24,464 --> 00:09:26,400 line:-1
描述性SwiftUI


171
00:09:26,466 --> 00:09:27,835 line:-1
而且它能理解


172
00:09:27,901 --> 00:09:30,237 line:-1
你的陈述 所以我们能


173
00:09:30,304 --> 00:09:31,839 line:-1
将辅助功能自动化


174
00:09:31,905 --> 00:09:33,574 line:-1
进入新的境界 用新的


175
00:09:33,640 --> 00:09:34,474 line:-1
框架


176
00:09:35,209 --> 00:09:36,777 line:-1
SwiftUI可以让app的


177
00:09:36,844 --> 00:09:39,379 line:-1
默认设置更好用


178
00:09:39,446 --> 00:09:40,581 line:-1
并为我们打下坚实的


179
00:09:40,647 --> 00:09:42,449 line:-2
基础
让我们完成更多的


180
00:09:42,516 --> 00:09:44,518 line:-1
辅助功能 帮助你


181
00:09:44,585 --> 00:09:45,419 line:-1
进步


182
00:09:47,588 --> 00:09:49,890 line:-1
SwiftUI会生成


183
00:09:49,957 --> 00:09:51,458 line:-1
辅助功能元素


184
00:09:51,525 --> 00:09:52,993 line:-1
就像它会生成


185
00:09:53,060 --> 00:09:54,862 line:-1
NSView和UIViews


186
00:09:55,762 --> 00:09:57,030 line:-1
来看一个简单的


187
00:09:57,097 --> 00:09:57,965 line:-1
SwiftUI代码


188
00:09:58,966 --> 00:10:00,300 line:-1
它创建了一个垂直叠层


189
00:10:01,068 --> 00:10:03,670 line:-1
这个层是一个按键


190
00:10:03,737 --> 00:10:05,372 line:-1
它的前后是一些


191
00:10:05,439 --> 00:10:06,273 line:-1
文本


192
00:10:08,342 --> 00:10:10,310 line:-1
SwiftUI会创建三个


193
00:10:10,377 --> 00:10:11,879 line:-1
辅助功能元素


194
00:10:11,945 --> 00:10:12,779 line:-1
在这里


195
00:10:12,846 --> 00:10:14,314 line:-1
两个文本各对应一个


196
00:10:14,381 --> 00:10:15,682 line:-1
当然还有一个对应


197
00:10:15,749 --> 00:10:16,583 line:-1
按键


198
00:10:17,451 --> 00:10:19,119 line:-1
记住 辅助功能


199
00:10:19,186 --> 00:10:20,787 line:-1
元素 在SwiftUI里


200
00:10:20,854 --> 00:10:23,590 line:-2
不是UIViews
或NSViews


201
00:10:24,291 --> 00:10:26,493 line:-1
而是SwiftUI自己的


202
00:10:26,560 --> 00:10:27,895 line:-1
辅助功能元素


203
00:10:29,496 --> 00:10:31,064 line:-1
我们所有人都努力确保


204
00:10:31,131 --> 00:10:32,833 line:-1
SwiftUI的标准


205
00:10:32,900 --> 00:10:34,568 line:-1
控件也尽可能


206
00:10:34,635 --> 00:10:36,136 line:-1
默认可用


207
00:10:37,104 --> 00:10:38,038 line:-1
注意 尽管这些


208
00:10:38,105 --> 00:10:41,175 line:-1
元素很简单


209
00:10:41,241 --> 00:10:42,843 line:-1
但包含了所有重要的


210
00:10:42,910 --> 00:10:43,877 line:-1
必要信息


211
00:10:44,178 --> 00:10:45,279 line:-1
它们好理解 是因为


212
00:10:45,345 --> 00:10:46,180 line:-1
有标签


213
00:10:46,947 --> 00:10:48,682 line:-1
可交互 是因为按键


214
00:10:48,749 --> 00:10:49,583 line:-1
有动作


215
00:10:49,816 --> 00:10:51,084 line:-1
可引导 是因为


216
00:10:51,151 --> 00:10:52,386 line:-1
排序正确


217
00:10:54,821 --> 00:10:56,190 line:-1
如我所说 SwiftUI


218
00:10:56,256 --> 00:10:58,125 line:-1
有一个辅助功能API


219
00:10:58,192 --> 00:10:59,560 line:-1
自定义元素


220
00:10:59,626 --> 00:11:00,460 line:-1
给你


221
00:11:01,261 --> 00:11:02,729 line:-1
在讲这个之前


222
00:11:02,796 --> 00:11:04,031 line:-1
我想聊一聊


223
00:11:04,097 --> 00:11:05,732 line:-1
一个优秀的辅助功能


224
00:11:05,799 --> 00:11:07,901 line:-2
来自SwiftUI
然后你再去写


225
00:11:07,968 --> 00:11:09,903 line:-1
具体的辅助功能代码


226
00:11:12,706 --> 00:11:13,774 line:-1
你有个免费的工具


227
00:11:13,841 --> 00:11:15,609 line:-1
在SwiftUI 就是通知


228
00:11:15,676 --> 00:11:17,611 line:-1
它让辅助功能


229
00:11:17,678 --> 00:11:19,780 line:-1
比如旁白 在你的app


230
00:11:19,847 --> 00:11:20,948 line:-1
对所发生的一切


231
00:11:21,014 --> 00:11:21,849 line:-1
给出最新消息


232
00:11:22,583 --> 00:11:23,951 line:-1
记住 辅助功能


233
00:11:24,017 --> 00:11:25,352 line:-1
如我之前所讲


234
00:11:25,419 --> 00:11:26,687 line:-1
都是基于


235
00:11:26,753 --> 00:11:28,589 line:-1
辅助功能元素


236
00:11:28,655 --> 00:11:29,690 line:-1
由app提供


237
00:11:31,291 --> 00:11:32,793 line:-1
运行时 旁白会


238
00:11:32,860 --> 00:11:34,361 line:-1
向app请求一个列表


239
00:11:34,428 --> 00:11:35,596 line:-1
关于辅助功能元素


240
00:11:36,496 --> 00:11:37,798 line:-1
例如 当用户打开


241
00:11:37,865 --> 00:11:39,933 line:-2
计算器时
它会要求计算器


242
00:11:40,000 --> 00:11:41,602 line:-1
给出屏幕上的元素


243
00:11:41,668 --> 00:11:42,836 line:-1
计算器就会回复


244
00:11:42,903 --> 00:11:44,071 line:-1
这些按键


245
00:11:44,137 --> 00:11:44,972 line:-1
如前所述


246
00:11:46,006 --> 00:11:47,574 line:-1
它也会发送


247
00:11:47,641 --> 00:11:49,409 line:-1
元素给主显示屏


248
00:11:49,610 --> 00:11:50,878 line:-1
同时它还发送一个值


249
00:11:50,944 --> 00:11:53,080 line:-1
此时这个值为5


250
00:11:54,681 --> 00:11:56,250 line:-1
那么想象一下如果


251
00:11:56,316 --> 00:11:57,551 line:-1
信息变了呢


252
00:11:58,085 --> 00:11:59,553 line:-1
假设一下


253
00:11:59,620 --> 00:12:01,154 line:-1
计算器识别了


254
00:12:01,221 --> 00:12:02,656 line:-1
等号键被按下


255
00:12:02,723 --> 00:12:04,258 line:-1
更新这个值到


256
00:12:04,324 --> 00:12:05,158 line:-1
主显示屏


257
00:12:05,626 --> 00:12:07,494 line:-1
假设这个值现在为10


258
00:12:08,529 --> 00:12:10,564 line:-1
旁白需要知道


259
00:12:10,631 --> 00:12:11,698 line:-1
这个元素的值


260
00:12:11,765 --> 00:12:12,599 line:-1
变了


261
00:12:13,233 --> 00:12:14,268 line:-1
因此我们的框架


262
00:12:14,334 --> 00:12:15,636 line:-1
要支持辅助功能


263
00:12:15,702 --> 00:12:16,637 line:-1
通知


264
00:12:17,104 --> 00:12:18,338 line:-1
这样app就能告诉旁白


265
00:12:18,505 --> 00:12:20,340 line:-1
嘿 值变了哦


266
00:12:23,410 --> 00:12:25,045 line:-1
整场会议我们一直在讲


267
00:12:25,112 --> 00:12:27,247 line:-1
SwiftUI是如何


268
00:12:27,314 --> 00:12:28,148 line:-1
被陈述驱动


269
00:12:28,916 --> 00:12:30,217 line:-1
正是这些方面


270
00:12:30,284 --> 00:12:31,652 line:-1
将优势带给了


271
00:12:31,718 --> 00:12:32,553 line:-1
辅助功能


272
00:12:33,020 --> 00:12:34,288 line:-1
因为SwiftUI能


273
00:12:34,354 --> 00:12:35,722 line:-1
理解你的陈述


274
00:12:35,789 --> 00:12:38,125 line:-1
并跟踪变化


275
00:12:38,192 --> 00:12:39,393 line:-1
你无须再担心


276
00:12:39,459 --> 00:12:40,827 line:-1
辅助功能


277
00:12:41,028 --> 00:12:41,895 line:-1
通知


278
00:12:41,962 --> 00:12:43,430 line:-1
甚至是自定义控件


279
00:12:44,898 --> 00:12:45,966 line:-1
对 就是这样


280
00:12:49,069 --> 00:12:50,604 line:-1
SwiftUI会跟踪陈述


281
00:12:50,771 --> 00:12:51,972 line:-1
你正使用的


282
00:12:52,039 --> 00:12:54,575 line:-1
辅助功能 并发送给你


283
00:12:54,641 --> 00:12:55,542 line:-1
究竟如何


284
00:12:55,609 --> 00:12:56,443 line:-1
做到？


285
00:12:57,077 --> 00:12:58,545 line:-1
这里有个触发和一个


286
00:12:58,612 --> 00:13:00,113 line:-1
按键 都链接到一个


287
00:13:00,180 --> 00:13:01,248 line:-1
单一陈述


288
00:13:01,648 --> 00:13:02,816 line:-1
这是个布尔值 叫做


289
00:13:02,883 --> 00:13:03,717 line:-1
Enabled


290
00:13:05,586 --> 00:13:06,720 line:-1
可见这里有两个


291
00:13:06,787 --> 00:13:08,222 line:-1
辅助功能元素


292
00:13:08,288 --> 00:13:09,156 line:-1
被创建


293
00:13:09,223 --> 00:13:10,157 line:-1
其中一个


294
00:13:10,224 --> 00:13:12,292 line:-1
元素对应的是触发


295
00:13:12,359 --> 00:13:13,594 line:-1
正确的标签和


296
00:13:13,660 --> 00:13:14,528 line:-1
类别


297
00:13:14,595 --> 00:13:15,829 line:-1
它的值一开始


298
00:13:15,896 --> 00:13:16,730 line:-1
为0


299
00:13:17,097 --> 00:13:19,733 line:-1
当你点击按键


300
00:13:19,800 --> 00:13:21,335 line:-1
enabled的布尔值


301
00:13:21,401 --> 00:13:22,603 line:-1
就会更改


302
00:13:22,803 --> 00:13:25,672 line:-2
它会从0变为1
或从1变为0


303
00:13:25,973 --> 00:13:26,874 line:-1
所以我们称这个


304
00:13:26,940 --> 00:13:28,075 line:-1
按键为Flip


305
00:13:28,742 --> 00:13:30,277 line:-1
它会如何影响


306
00:13:30,344 --> 00:13:31,178 line:-1
辅助功能？


307
00:13:31,879 --> 00:13:33,714 line:-1
辅助功能的


308
00:13:33,780 --> 00:13:35,015 line:-1
触发值变了


309
00:13:35,082 --> 00:13:36,550 line:-1
这要让旁白


310
00:13:36,617 --> 00:13:37,484 line:-1
知道


311
00:13:37,551 --> 00:13:38,652 line:-1
因为当它理解到


312
00:13:38,719 --> 00:13:40,254 line:-2
那个值变了
SwiftUI就会


313
00:13:40,320 --> 00:13:41,154 line:-1
自动发送一个


314
00:13:41,221 --> 00:13:42,422 line:-1
通知给旁白


315
00:13:42,689 --> 00:13:43,524 line:-1
告诉它准确的


316
00:13:43,590 --> 00:13:44,424 line:-1
变化


317
00:13:44,658 --> 00:13:46,226 line:-1
记住 不需要辅助功能


318
00:13:46,293 --> 00:13:47,895 line:-1
具体的代码


319
00:13:48,295 --> 00:13:49,196 line:-1
你无需担心


320
00:13:49,263 --> 00:13:50,531 line:-1
通知是否发到了


321
00:13:50,597 --> 00:13:52,499 line:-2
SwiftUI
因为我们会替你


322
00:13:52,566 --> 00:13:53,400 line:-1
发送


323
00:13:56,003 --> 00:13:57,938 line:-1
SwiftUI的另一个


324
00:13:58,005 --> 00:14:00,040 line:-1
提升 是自定义控件


325
00:14:00,908 --> 00:14:02,910 line:-1
通常在设计app时


326
00:14:03,177 --> 00:14:04,444 line:-1
你需要自定义


327
00:14:04,511 --> 00:14:06,380 line:-1
UI的外观和感觉


328
00:14:06,647 --> 00:14:08,115 line:-1
你也许需要


329
00:14:08,182 --> 00:14:09,917 line:-1
独特的视觉风格 或者


330
00:14:09,983 --> 00:14:10,884 line:-1
要适应公司


331
00:14:10,951 --> 00:14:11,785 line:-1
主题


332
00:14:12,686 --> 00:14:13,954 line:-1
如果你做过辅助功能


333
00:14:14,021 --> 00:14:15,822 line:-1
在以前的工作 你就知道


334
00:14:15,889 --> 00:14:17,758 line:-1
自定义控件越多


335
00:14:17,824 --> 00:14:19,393 line:-1
就有越多的


336
00:14:19,459 --> 00:14:20,928 line:-1
辅助功能需要


337
00:14:20,994 --> 00:14:21,828 line:-1
加入


338
00:14:22,462 --> 00:14:24,765 line:-1
SwiftUI的控制风格


339
00:14:24,831 --> 00:14:26,466 line:-1
是让你完全掌控


340
00:14:26,533 --> 00:14:27,868 line:-1
UI的外观和感觉


341
00:14:27,935 --> 00:14:29,970 line:-1
同时又能拥有良好的


342
00:14:30,037 --> 00:14:31,505 line:-1
即时辅助功能


343
00:14:32,306 --> 00:14:33,607 line:-1
因此最终你能


344
00:14:33,674 --> 00:14:35,242 line:-1
轻松的制作自定义控件


345
00:14:35,309 --> 00:14:37,277 line:-1
它美丽又独特


346
00:14:37,344 --> 00:14:38,946 line:-1
还随时可用


347
00:14:39,146 --> 00:14:40,547 line:-1
就像系统元素一样


348
00:14:40,981 --> 00:14:43,817 line:-1
这个例子 是要自定义


349
00:14:43,884 --> 00:14:45,485 line:-1
按键样式 使用


350
00:14:45,552 --> 00:14:46,386 line:-1
SwiftUI


351
00:14:47,421 --> 00:14:50,190 line:-1
这个API显示了按键的


352
00:14:50,257 --> 00:14:51,425 line:-1
样式 包括


353
00:14:51,491 --> 00:14:53,460 line:-1
标签和按键状态


354
00:14:54,361 --> 00:14:55,662 line:-1
于是我们需要


355
00:14:55,729 --> 00:14:57,364 line:-1
告诉style如何


356
00:14:57,431 --> 00:14:58,265 line:-1
绘制这个按键


357
00:14:59,099 --> 00:15:01,034 line:-1
那么首先将这个


358
00:15:01,101 --> 00:15:03,003 line:-1
标签放入圆角矩形


359
00:15:03,403 --> 00:15:04,471 line:-1
然后设置背景和


360
00:15:04,538 --> 00:15:05,672 line:-1
前景的颜色


361
00:15:05,739 --> 00:15:06,907 line:-1
代表我们是否


362
00:15:06,974 --> 00:15:07,808 line:-1
按了键


363
00:15:08,475 --> 00:15:09,710 line:-1
还要添加一点


364
00:15:09,776 --> 00:15:11,345 line:-1
填充并设置漂亮的


365
00:15:11,411 --> 00:15:13,447 line:-1
大号字体和颜色


366
00:15:14,982 --> 00:15:16,884 line:-1
最终的形态


367
00:15:16,950 --> 00:15:17,784 line:-1
在右边


368
00:15:18,085 --> 00:15:21,355 line:-1
现在我们已经定义了


369
00:15:21,421 --> 00:15:23,123 line:-1
这个漂亮的自定义绘制


370
00:15:23,190 --> 00:15:24,191 line:-1
当然也要用它


371
00:15:25,225 --> 00:15:26,693 line:-1
我们要创建一个


372
00:15:26,760 --> 00:15:28,495 line:-1
正常的按键 然后用


373
00:15:28,562 --> 00:15:30,264 line:-1
按键样式修改器函数


374
00:15:30,697 --> 00:15:31,865 line:-1
设置我们想要的


375
00:15:31,932 --> 00:15:32,833 line:-1
按键样式


376
00:15:33,867 --> 00:15:34,935 line:-1
这会创建一个


377
00:15:35,002 --> 00:15:36,637 line:-1
辅助功能元素


378
00:15:36,703 --> 00:15:37,704 line:-1
你可以在顶部看到


379
00:15:37,771 --> 00:15:38,605 line:-1
这里


380
00:15:38,972 --> 00:15:40,707 line:-1
注意尽管有这些


381
00:15:40,774 --> 00:15:42,042 line:-1
自定义的绘制


382
00:15:42,109 --> 00:15:44,711 line:-1
辅助功能元素还是很值得尝试


383
00:15:44,778 --> 00:15:46,413 line:-1
它有标签


384
00:15:46,480 --> 00:15:48,182 line:-1
正确的类别 还有一个


385
00:15:48,248 --> 00:15:49,082 line:-1
动作


386
00:15:50,350 --> 00:15:51,451 line:-1
还是一样 完成这些时


387
00:15:51,518 --> 00:15:52,553 line:-1
不需要编写任何的


388
00:15:52,619 --> 00:15:54,855 line:-1
辅助功能具体代码


389
00:15:57,491 --> 00:16:00,127 line:-1
SwiftUI还能提供更好的


390
00:16:00,194 --> 00:16:02,162 line:-1
更多的直观辅助功能


391
00:16:02,229 --> 00:16:03,063 line:-1
给图片


392
00:16:03,430 --> 00:16:04,631 line:-1
具体我要讲


393
00:16:04,698 --> 00:16:06,200 line:-1
图解 还有


394
00:16:06,266 --> 00:16:07,434 line:-1
字形 它们是


395
00:16:07,501 --> 00:16:08,802 line:-1
UI的重要组成


396
00:16:10,437 --> 00:16:11,872 line:-1
假设你的app带有


397
00:16:11,939 --> 00:16:13,841 line:-1
注册功能 完成时会有


398
00:16:13,907 --> 00:16:17,811 line:-1
绿色对勾 如图


399
00:16:18,011 --> 00:16:19,313 line:-1
这是简单的SwiftUI


400
00:16:19,379 --> 00:16:20,514 line:-1
代码 你可以用来


401
00:16:20,581 --> 00:16:21,882 line:-1
创建这样的视图


402
00:16:21,949 --> 00:16:22,883 line:-1
这里它只是个


403
00:16:22,950 --> 00:16:24,384 line:-2
带图片的
垂直叠层


404
00:16:25,719 --> 00:16:27,554 line:-1
完成注册后


405
00:16:27,621 --> 00:16:28,989 line:-1
没有视力障碍的用户会看到


406
00:16:29,056 --> 00:16:31,458 line:-2
然后说 太好了
完成了


407
00:16:31,525 --> 00:16:35,095 line:-1
真棒 而用户如果使用


408
00:16:35,162 --> 00:16:36,430 line:-1
旁白 就会听到


409
00:16:36,964 --> 00:16:37,798 line:-1
对勾字形


410
00:16:39,032 --> 00:16:40,767 line:-1
这个没有什么用处


411
00:16:40,834 --> 00:16:42,569 line:-1
这是开发者创建的


412
00:16:42,636 --> 00:16:43,604 line:-1
图片名称


413
00:16:43,871 --> 00:16:45,906 line:-1
我不知道什么是字形


414
00:16:45,973 --> 00:16:46,907 line:-1
或者它意味什么


415
00:16:47,241 --> 00:16:48,976 line:-2
作为旁白用户
我会困惑


416
00:16:49,042 --> 00:16:50,110 line:-1
我完成了吗


417
00:16:50,444 --> 00:16:51,278 line:-1
出问题了吗


418
00:16:52,613 --> 00:16:54,214 line:-1
我不能


419
00:16:54,281 --> 00:16:55,115 line:-1
理解


420
00:16:55,682 --> 00:16:57,050 line:-1
原因在于


421
00:16:57,117 --> 00:16:59,119 line:-1
图片的标签不明确


422
00:16:59,987 --> 00:17:01,388 line:-1
这个辅助功能元素


423
00:17:01,455 --> 00:17:03,590 line:-1
由SwiftUI创建


424
00:17:03,657 --> 00:17:04,825 line:-1
你能看到它有正确的


425
00:17:04,892 --> 00:17:06,093 line:-1
类别 但没有标签


426
00:17:07,426 --> 00:17:08,829 line:-1
SwiftUI要做的


427
00:17:08,896 --> 00:17:10,998 line:-1
是将标签拖过来


428
00:17:11,064 --> 00:17:12,799 line:-1
从图片的文件名或


429
00:17:12,866 --> 00:17:13,700 line:-1
资源名上


430
00:17:14,568 --> 00:17:15,935 line:-1
这并不是我们


431
00:17:16,002 --> 00:17:16,837 line:-1
想依赖的


432
00:17:17,003 --> 00:17:19,940 line:-1
因为这个名字是给你们


433
00:17:20,007 --> 00:17:21,642 line:-1
开发者 而不是用户


434
00:17:23,310 --> 00:17:25,612 line:-1
有了SwiftUI 你可以


435
00:17:25,679 --> 00:17:27,247 line:-1
给图片做标签 用本地化的


436
00:17:27,314 --> 00:17:29,149 line:-1
辅助功能信息


437
00:17:29,216 --> 00:17:30,684 line:-1
在创建时就能用


438
00:17:30,751 --> 00:17:33,420 line:-1
我们要做的是用


439
00:17:33,487 --> 00:17:35,622 line:-1
基于标签的初始化器


440
00:17:35,689 --> 00:17:36,523 line:-1
画图


441
00:17:37,024 --> 00:17:37,991 line:-1
这样我们就不需要


442
00:17:38,058 --> 00:17:39,459 line:-1
总是记得后面还要再做


443
00:17:39,693 --> 00:17:40,861 line:-1
一些单独的代码


444
00:17:41,862 --> 00:17:42,696 line:-1
这会创建一个


445
00:17:42,763 --> 00:17:44,164 line:-1
辅助功能UI


446
00:17:44,231 --> 00:17:45,632 line:-1
易于理解


447
00:17:47,000 --> 00:17:48,302 line:-1
记住 这个更新过的


448
00:17:48,368 --> 00:17:49,870 line:-1
辅助功能元素现在


449
00:17:49,937 --> 00:17:50,871 line:-1
有了正确的标签


450
00:17:51,171 --> 00:17:52,539 line:-1
当我看到这个图片


451
00:17:52,606 --> 00:17:54,074 line:-1
旁白会说 注册


452
00:17:54,141 --> 00:17:54,975 line:-1
完成


453
00:17:55,042 --> 00:17:59,580 line:-1
另一方面 有时候


454
00:17:59,813 --> 00:18:01,181 line:-1
旁白用户不需要


455
00:18:01,248 --> 00:18:02,382 line:-1
以图片结尾


456
00:18:02,916 --> 00:18:04,184 line:-1
例如这个


457
00:18:04,251 --> 00:18:05,319 line:-1
对勾其实仅仅是


458
00:18:05,385 --> 00:18:06,653 line:-1
一个装饰 而且你已经


459
00:18:06,720 --> 00:18:08,589 line:-1
下面有文字说明


460
00:18:08,655 --> 00:18:09,489 line:-1
注册完成


461
00:18:10,490 --> 00:18:11,725 line:-1
SwiftUI代码


462
00:18:11,792 --> 00:18:12,726 line:-1
大概是这样


463
00:18:13,060 --> 00:18:14,428 line:-1
一个带图片的垂直叠层


464
00:18:14,494 --> 00:18:15,829 line:-1
和两行文本


465
00:18:17,231 --> 00:18:18,432 line:-1
这里的图片


466
00:18:18,498 --> 00:18:19,566 line:-1
真的只是装饰


467
00:18:20,033 --> 00:18:21,335 line:-1
其实你可以这样做


468
00:18:21,535 --> 00:18:23,036 line:-1
通知SwiftUI 通过


469
00:18:23,103 --> 00:18:23,971 line:-1
正确的初始化程序


470
00:18:25,072 --> 00:18:26,607 line:-1
现在 旁白用户不会


471
00:18:26,673 --> 00:18:28,075 line:-1
再看到这个图片


472
00:18:28,408 --> 00:18:29,576 line:-1
这时辅助功能中


473
00:18:29,643 --> 00:18:31,044 line:-1
两个元素对应文本


474
00:18:31,111 --> 00:18:33,447 line:-1
但没有元素对应图片


475
00:18:34,581 --> 00:18:36,216 line:-1
这样就更好操控了


476
00:18:36,283 --> 00:18:37,784 line:-1
因为旁白用户


477
00:18:37,851 --> 00:18:39,453 line:-1
不会再遇到无用的


478
00:18:39,653 --> 00:18:40,487 line:-1
元素


479
00:18:41,822 --> 00:18:44,958 line:-1
SwiftUI最后一个


480
00:18:45,025 --> 00:18:46,226 line:-1
用辅助让生活


481
00:18:46,293 --> 00:18:47,494 line:-1
更轻松的地方


482
00:18:47,761 --> 00:18:49,062 line:-1
就是标签


483
00:18:49,630 --> 00:18:50,564 line:-1
我们看到


484
00:18:50,631 --> 00:18:52,132 line:-1
这个控件实际就是


485
00:18:52,199 --> 00:18:53,033 line:-1
系统偏好


486
00:18:53,634 --> 00:18:55,102 line:-1
目的是让你选择一个


487
00:18:55,169 --> 00:18:56,069 line:-1
声音


488
00:18:56,136 --> 00:18:58,472 line:-1
这个辅助功能的


489
00:18:58,539 --> 00:19:00,140 line:-1
元素在右上角


490
00:19:00,407 --> 00:19:02,142 line:-1
它没有标签 只有一个值


491
00:19:02,209 --> 00:19:03,043 line:-1
Alex


492
00:19:03,944 --> 00:19:05,779 line:-1
这个不好理解


493
00:19:05,846 --> 00:19:07,080 line:-1
作为旁白用户


494
00:19:07,247 --> 00:19:08,148 line:-1
因为旁白


495
00:19:08,215 --> 00:19:10,484 line:-1
只会读出Alex


496
00:19:10,884 --> 00:19:13,020 line:-2
谁是Alex 我为什么要
知道他？


497
00:19:13,086 --> 00:19:15,222 line:-2
如果我用旁白
就不懂


498
00:19:15,289 --> 00:19:16,456 line:-1
我得到处搜寻


499
00:19:16,523 --> 00:19:17,925 line:-1
屏幕上的其他内容


500
00:19:17,991 --> 00:19:19,092 line:-1
找点线索


501
00:19:19,560 --> 00:19:22,763 line:-1
这是SwiftUI代码


502
00:19:22,829 --> 00:19:24,831 line:-1
编写的控件


503
00:19:25,666 --> 00:19:27,501 line:-1
这里是一个标准的


504
00:19:27,568 --> 00:19:29,369 line:-1
SwiftUI选择器


505
00:19:29,436 --> 00:19:30,771 line:-1
显示为弹窗按钮


506
00:19:32,172 --> 00:19:33,774 line:-1
SwiftUI的选择器


507
00:19:33,841 --> 00:19:35,509 line:-1
有内置标签可以使用


508
00:19:35,576 --> 00:19:37,010 line:-1
这里我们设置了系统


509
00:19:37,077 --> 00:19:37,911 line:-1
声音


510
00:19:38,445 --> 00:19:40,047 line:-1
许多SwiftUI控件都有


511
00:19:40,113 --> 00:19:41,648 line:-1
类似的标签 其他也很快


512
00:19:41,715 --> 00:19:42,549 line:-1
会有


513
00:19:42,783 --> 00:19:44,351 line:-1
现在我们来看


514
00:19:44,418 --> 00:19:47,020 line:-2
这个辅助功能
元素


515
00:19:47,087 --> 00:19:48,388 line:-1
这时它有一个标签


516
00:19:48,822 --> 00:19:50,023 line:-1
旁白


517
00:19:50,090 --> 00:19:52,826 line:-1
读的是 Alex 系统声音


518
00:19:53,227 --> 00:19:56,864 line:-1
弹窗按钮


519
00:19:56,930 --> 00:19:59,099 line:-1
在更新的SwiftUI中


520
00:19:59,166 --> 00:20:01,268 line:-1
你能做更多的


521
00:20:01,335 --> 00:20:02,169 line:-1
事情


522
00:20:02,402 --> 00:20:03,737 line:-1
如果你只想用一个


523
00:20:03,804 --> 00:20:05,372 line:-1
标签显示给所有


524
00:20:05,439 --> 00:20:06,673 line:-1
用户 无论他们


525
00:20:06,740 --> 00:20:07,975 line:-1
是否使用辅助功能


526
00:20:09,042 --> 00:20:10,077 line:-1
那么你可以


527
00:20:10,143 --> 00:20:11,545 line:-1
设置这个标签为


528
00:20:11,612 --> 00:20:13,113 line:-1
类似左边的内容


529
00:20:13,180 --> 00:20:15,549 line:-1
如果你这样做 我们就会


530
00:20:15,616 --> 00:20:17,384 line:-1
为你设置辅助


531
00:20:17,885 --> 00:20:19,219 line:-1
比如一个连接


532
00:20:19,286 --> 00:20:20,587 line:-1
连接左边标签


533
00:20:20,654 --> 00:20:22,556 line:-1
和右边的弹窗


534
00:20:22,623 --> 00:20:23,457 line:-1
按钮


535
00:20:23,790 --> 00:20:24,925 line:-1
它们本身都是


536
00:20:24,992 --> 00:20:26,293 line:-1
辅助功能元素


537
00:20:26,360 --> 00:20:28,495 line:-2
但旁白知道
其中联系


538
00:20:28,562 --> 00:20:29,663 line:-1
旁白就会


539
00:20:29,730 --> 00:20:32,099 line:-2
读出
Alex 系统声音 弹窗


540
00:20:32,165 --> 00:20:33,000 line:-1
按钮


541
00:20:36,403 --> 00:20:39,506 line:-1
这就是SwiftUI可以


542
00:20:39,573 --> 00:20:40,807 line:-1
自动为你做的事


543
00:20:41,508 --> 00:20:42,543 line:-1
这里有两点


544
00:20:42,609 --> 00:20:44,645 line:-2
要强调 关于所有
元素


545
00:20:44,711 --> 00:20:46,380 line:-1
首先 它们始终保持一致


546
00:20:46,547 --> 00:20:48,882 line:-1
在所有的SwiftUI平台


547
00:20:49,650 --> 00:20:51,919 line:-1
第二 实现这一切


548
00:20:51,985 --> 00:20:53,086 line:-1
不需要编写任何


549
00:20:53,153 --> 00:20:54,821 line:-1
辅助功能代码


550
00:20:56,190 --> 00:20:57,624 line:-1
即便有时候无论


551
00:20:57,691 --> 00:20:59,593 line:-1
自动化辅助功能有多好


552
00:20:59,660 --> 00:21:01,695 line:-2
它可能还是
不够


553
00:21:01,762 --> 00:21:02,963 line:-1
因此我们提供一个


554
00:21:03,030 --> 00:21:05,399 line:-2
辅助功能API给你
使用


555
00:21:05,465 --> 00:21:06,633 line:-1
现在我要将舞台交给


556
00:21:06,700 --> 00:21:08,335 line:-1
John 他会讲解 更多


557
00:21:08,836 --> 00:21:09,670 line:-1
John


558
00:21:17,244 --> 00:21:18,078 line:-1
谢谢Michael


559
00:21:19,179 --> 00:21:20,147 line:-1
我们已经展示了


560
00:21:20,214 --> 00:21:21,815 line:-1
优秀的内置辅助功能


561
00:21:22,182 --> 00:21:23,283 line:-1
来自SwiftUI


562
00:21:23,817 --> 00:21:25,686 line:-1
它的设计是为所有人提供


563
00:21:25,752 --> 00:21:26,787 line:-1
即时的


564
00:21:26,854 --> 00:21:27,688 line:-1
良好体验


565
00:21:28,021 --> 00:21:29,523 line:-1
但我们知道


566
00:21:29,590 --> 00:21:31,058 line:-1
仅靠它并不能带来


567
00:21:31,124 --> 00:21:31,959 line:-1
完整体验


568
00:21:33,026 --> 00:21:34,928 line:-1
SwiftUI辅助功能API


569
00:21:35,863 --> 00:21:36,763 line:-1
让你可以修改并


570
00:21:36,830 --> 00:21:38,665 line:-1
最终创建更好的


571
00:21:38,732 --> 00:21:39,833 line:-1
体验给所有人


572
00:21:43,370 --> 00:21:44,404 line:-1
那么首先我要


573
00:21:44,471 --> 00:21:46,974 line:-2
演示几个简单的
API实例


574
00:21:47,040 --> 00:21:48,075 line:-1
回到之前的


575
00:21:48,141 --> 00:21:49,443 line:-2
计算器
如Michael


576
00:21:49,510 --> 00:21:50,344 line:-1
刚才所示


577
00:21:50,844 --> 00:21:51,712 line:-1
首先是


578
00:21:51,778 --> 00:21:53,780 line:-1
乘号 默认是


579
00:21:54,181 --> 00:21:55,349 line:-1
读出X


580
00:21:55,949 --> 00:21:58,085 line:-1
要修改这个标签 我使用


581
00:21:58,151 --> 00:21:59,353 line:-1
辅助功能修改器


582
00:21:59,419 --> 00:22:00,821 line:-1
函数 和标签


583
00:22:00,888 --> 00:22:01,722 line:-1
参数


584
00:22:02,055 --> 00:22:04,191 line:-1
修改以后 这个按钮


585
00:22:04,258 --> 00:22:05,526 line:-1
现在读作 乘以


586
00:22:05,592 --> 00:22:08,929 line:-1
我们还想让


587
00:22:08,996 --> 00:22:10,364 line:-1
旁白有特定的


588
00:22:10,430 --> 00:22:11,265 line:-1
按键状态


589
00:22:11,832 --> 00:22:13,200 line:-1
在视觉上 按键


590
00:22:13,267 --> 00:22:14,268 line:-1
被选择后 变成白色


591
00:22:14,902 --> 00:22:18,038 line:-1
辅助功能trait


592
00:22:18,105 --> 00:22:19,039 line:-1
可以帮助我们


593
00:22:19,973 --> 00:22:20,807 line:-1
如果你还不熟悉


594
00:22:21,041 --> 00:22:22,509 line:-1
trait是为了


595
00:22:22,576 --> 00:22:23,844 line:-1
描述元素


596
00:22:24,044 --> 00:22:24,878 line:-1
和方法


597
00:22:26,113 --> 00:22:27,314 line:-1
例如 按键会


598
00:22:27,381 --> 00:22:28,916 line:-1
自动带有isButton


599
00:22:28,982 --> 00:22:30,017 line:-1
默认的trait


600
00:22:31,084 --> 00:22:32,319 line:-1
旁白会读出 按键


601
00:22:32,920 --> 00:22:34,454 line:-2
在读取元素标签
之后


602
00:22:34,521 --> 00:22:37,224 line:-1
这里我们就要添加


603
00:22:37,291 --> 00:22:38,926 line:-1
isSelected状态 使用


604
00:22:38,992 --> 00:22:40,460 line:-1
辅助功能函数 并加上


605
00:22:40,527 --> 00:22:41,495 line:-1
参数trait


606
00:22:42,529 --> 00:22:43,430 line:-1
旁白会读出


607
00:22:43,497 --> 00:22:45,299 line:-1
已选 当按键处于


608
00:22:46,033 --> 00:22:47,801 line:-1
当前状态


609
00:22:48,001 --> 00:22:48,869 line:-1
再来讲如何提升


610
00:22:48,936 --> 00:22:50,771 line:-2
结果视图的
辅助功能


611
00:22:52,673 --> 00:22:54,441 line:-1
将标签改为结果


612
00:22:54,842 --> 00:22:56,176 line:-1
并添加辅助功能的值


613
00:22:57,010 --> 00:22:58,378 line:-1
这个值可以用来


614
00:22:58,445 --> 00:23:00,581 line:-2
给旁白提供
可读的描述


615
00:23:02,349 --> 00:23:03,283 line:-1
你也许要添加


616
00:23:03,350 --> 00:23:04,918 line:-1
单位或其他


617
00:23:04,985 --> 00:23:05,819 line:-1
文本


618
00:23:06,520 --> 00:23:07,788 line:-1
但在这里


619
00:23:07,855 --> 00:23:09,456 line:-1
数字就可以


620
00:23:10,958 --> 00:23:12,526 line:-1
最后要添加的是


621
00:23:12,593 --> 00:23:14,061 line:-1
自定义动作 使用


622
00:23:14,127 --> 00:23:14,962 line:-1
动作函数


623
00:23:16,230 --> 00:23:17,564 line:-1
通过姓名参数


624
00:23:17,631 --> 00:23:19,533 line:-1
创建一个自定义动作


625
00:23:19,600 --> 00:23:20,434 line:-1
清除


626
00:23:21,268 --> 00:23:22,503 line:-1
旁白会播放


627
00:23:22,569 --> 00:23:23,704 line:-1
发生的动作


628
00:23:23,770 --> 00:23:24,738 line:-1
对应的元素


629
00:23:25,873 --> 00:23:26,740 line:-1
以上只是简单


630
00:23:26,807 --> 00:23:28,008 line:-1
学习了如何添加


631
00:23:28,075 --> 00:23:29,176 line:-1
辅助功能在SwiftUI


632
00:23:29,977 --> 00:23:31,445 line:-1
辅助功能函数


633
00:23:31,512 --> 00:23:32,613 line:-1
添加信息


634
00:23:32,679 --> 00:23:34,147 line:-1
辅助功能动作函数


635
00:23:34,414 --> 00:23:35,516 line:-1
则添加动作


636
00:23:36,216 --> 00:23:37,217 line:-1
我想多讲一点


637
00:23:37,284 --> 00:23:38,752 line:-1
关于何时使用这个API


638
00:23:38,819 --> 00:23:40,687 line:-1
以及如何定义


639
00:23:40,754 --> 00:23:42,356 line:-1
app中需要它的地方


640
00:23:42,990 --> 00:23:45,926 line:-1
这就要回到客户


641
00:23:45,993 --> 00:23:49,029 line:-1
需要怎样的app


642
00:23:49,296 --> 00:23:52,366 line:-1
易于理解 可以交互


643
00:23:53,033 --> 00:23:54,801 line:-1
并能够操控


644
00:23:56,603 --> 00:23:57,704 line:-1
下面这几个问题


645
00:23:57,771 --> 00:23:58,739 line:-1
帮助你评估


646
00:24:01,175 --> 00:24:02,709 line:-1
显示的字符串是否提供了


647
00:24:02,776 --> 00:24:03,610 line:-1
足够的信息


648
00:24:07,181 --> 00:24:08,749 line:-1
自定义动作会简化


649
00:24:08,815 --> 00:24:09,650 line:-1
交互吗


650
00:24:13,053 --> 00:24:13,987 line:-1
能否加快引导


651
00:24:18,058 --> 00:24:19,092 line:-1
下面这段视频


652
00:24:19,159 --> 00:24:20,194 line:-1
旁白在app中的


653
00:24:20,260 --> 00:24:21,128 line:-1
应用


654
00:24:21,195 --> 00:24:22,629 line:-1
观看中请时刻谨记


655
00:24:22,696 --> 00:24:23,931 line:-1
这三个问题


656
00:24:27,434 --> 00:24:29,636 line:-2
这个app用来
计算对比度


657
00:24:29,937 --> 00:24:31,305 line:-1
文本对背景


658
00:24:31,371 --> 00:24:32,206 line:-1
颜色


659
00:24:32,272 --> 00:24:33,173 line:-1
顶部显示的是


660
00:24:33,240 --> 00:24:35,442 line:-1
当前对比度的值


661
00:24:35,509 --> 00:24:36,643 line:-1
底部是两个


662
00:24:36,710 --> 00:24:37,978 line:-1
区域 用于调整


663
00:24:38,045 --> 00:24:39,746 line:-1
红 绿 蓝的值


664
00:24:39,813 --> 00:24:40,948 line:-1
给背景颜色和


665
00:24:41,014 --> 00:24:41,849 line:-1
文本颜色


666
00:24:42,683 --> 00:24:43,750 line:-1
我还增加了双击手势


667
00:24:43,817 --> 00:24:45,385 line:-1
在顶部视图切换


668
00:24:45,452 --> 00:24:46,286 line:-1
两种颜色


669
00:24:47,588 --> 00:24:48,722 line:-1
那么旁白如何


670
00:24:48,789 --> 00:24:49,623 line:-1
操作呢


671
00:24:52,826 --> 00:24:54,728 line:-1
11.7 1.


672
00:24:56,496 --> 00:24:58,298 line:-1
11.7 1


673
00:24:59,366 --> 00:25:01,134 line:-1
11.7 1


674
00:25:02,903 --> 00:25:04,771 line:-1
重置颜色 按键


675
00:25:05,706 --> 00:25:06,640 line:-1
背景


676
00:25:07,541 --> 00:25:11,211 line:-1
红色 76 30%


677
00:25:11,478 --> 00:25:12,312 line:-1
可调节


678
00:25:12,779 --> 00:25:14,948 line:-1
绿色 217


679
00:25:15,649 --> 00:25:17,084 line:-1
85%


680
00:25:17,384 --> 00:25:18,218 line:-1
可调节


681
00:25:18,785 --> 00:25:22,589 line:-1
蓝色 100 39%


682
00:25:22,890 --> 00:25:23,724 line:-1
可调节


683
00:25:24,358 --> 00:25:26,793 line:-1
39…100%


684
00:25:30,364 --> 00:25:31,365 line:-1
视频中引起我


685
00:25:31,431 --> 00:25:32,499 line:-1
注意的是


686
00:25:32,566 --> 00:25:34,234 line:-1
顶部的标签


687
00:25:35,969 --> 00:25:37,538 line:-1
首先有一个符号


688
00:25:37,604 --> 00:25:38,438 line:-1
没有读出来


689
00:25:39,106 --> 00:25:40,073 line:-1
旁白一般不读


690
00:25:40,140 --> 00:25:41,275 line:-1
标点 根据app的


691
00:25:41,341 --> 00:25:42,209 line:-1
设置


692
00:25:42,276 --> 00:25:43,577 line:-1
但在这里


693
00:25:43,911 --> 00:25:45,078 line:-1
当标点代表


694
00:25:45,145 --> 00:25:46,480 line:-1
比率时 我们就要


695
00:25:46,547 --> 00:25:47,548 line:-1
将信息传达给


696
00:25:47,614 --> 00:25:48,448 line:-1
旁白


697
00:25:49,149 --> 00:25:51,485 line:-2
所以 11.7 1应读作
11.7比


698
00:25:51,552 --> 00:25:52,386 line:-1
1


699
00:25:53,120 --> 00:25:54,154 line:-1
第二 读数字时


700
00:25:54,221 --> 00:25:55,556 line:-1
没有任何上下文


701
00:25:57,090 --> 00:25:58,125 line:-1
有个办法是


702
00:25:58,192 --> 00:25:59,126 line:-1
给它合适的标签


703
00:25:59,193 --> 00:26:00,027 line:-1
描述它的值


704
00:26:00,894 --> 00:26:02,362 line:-1
这里就是 对比度


705
00:26:04,798 --> 00:26:05,732 line:-1
所以我们要调用


706
00:26:05,799 --> 00:26:07,467 line:-1
两次辅助功能函数


707
00:26:07,534 --> 00:26:08,535 line:-1
给一个对比度视图


708
00:26:09,169 --> 00:26:11,071 line:-1
一次是加标签 一次是


709
00:26:11,138 --> 00:26:14,675 line:-1
添加值


710
00:26:15,242 --> 00:26:16,143 line:-1
另外我注意到


711
00:26:16,210 --> 00:26:17,845 line:-1
这个信息的


712
00:26:17,911 --> 00:26:18,745 line:-1
滑块


713
00:26:19,479 --> 00:26:20,781 line:-1
滑块的值是


714
00:26:20,848 --> 00:26:22,749 line:-1
百分比 但在这里


715
00:26:22,816 --> 00:26:24,318 line:-1
实际是指色彩


716
00:26:24,384 --> 00:26:26,653 line:-1
分量值 从0到255


717
00:26:27,487 --> 00:26:30,424 line:-1
这个标签可以隐藏


718
00:26:30,490 --> 00:26:32,426 line:-1
不显示在滑块上方


719
00:26:32,492 --> 00:26:33,727 line:-1
而是跟随滑动


720
00:26:33,961 --> 00:26:34,828 line:-1
显示


721
00:26:34,895 --> 00:26:35,863 line:-1
这样就能集合


722
00:26:35,929 --> 00:26:37,664 line:-1
信息给一个元素


723
00:26:39,233 --> 00:26:41,335 line:-1
首先讲隐藏标签


724
00:26:42,302 --> 00:26:43,203 line:-1
先调用函数


725
00:26:43,270 --> 00:26:44,805 line:-1
将可见度设为


726
00:26:44,872 --> 00:26:45,706 line:-1
参数


727
00:26:46,240 --> 00:26:47,908 line:-1
写入.hidden来隐藏


728
00:26:47,975 --> 00:26:50,010 line:-2
元素及其所有
子元素


729
00:26:53,347 --> 00:26:54,648 line:-1
然后添加信息


730
00:26:54,715 --> 00:26:55,949 line:-1
给滑块标签


731
00:26:56,884 --> 00:26:58,018 line:-1
这个标签是


732
00:26:58,085 --> 00:26:59,820 line:-1
要调整的颜色和


733
00:26:59,887 --> 00:27:04,157 line:-1
0到255之间的一个值


734
00:27:05,826 --> 00:27:06,760 line:-1
我们还加了双击


735
00:27:06,827 --> 00:27:07,661 line:-1
手势在这里


736
00:27:08,362 --> 00:27:09,530 line:-1
iOS中的手势


737
00:27:09,596 --> 00:27:10,764 line:-1
很难操作


738
00:27:10,831 --> 00:27:12,199 line:-1
对于客户使用


739
00:27:12,266 --> 00:27:13,100 line:-1
辅助功能产品


740
00:27:14,301 --> 00:27:15,536 line:-1
部分产品自带


741
00:27:15,602 --> 00:27:17,471 line:-1
手势菜单 以帮助


742
00:27:17,538 --> 00:27:18,605 line:-1
完成较为复杂的


743
00:27:18,672 --> 00:27:19,506 line:-1
手势


744
00:27:20,307 --> 00:27:21,141 line:-1
其实可以更好


745
00:27:21,942 --> 00:27:23,310 line:-1
最简单的就是


746
00:27:23,544 --> 00:27:24,745 line:-1
创建自定义动作


747
00:27:24,811 --> 00:27:25,646 line:-1
给手势


748
00:27:26,180 --> 00:27:27,314 line:-1
它有两个好处


749
00:27:28,182 --> 00:27:29,650 line:-1
第一 动作名称


750
00:27:29,716 --> 00:27:30,551 line:-1
能够描述


751
00:27:30,617 --> 00:27:31,785 line:-1
触发的任务


752
00:27:32,586 --> 00:27:33,754 line:-1
第二 动作在


753
00:27:33,820 --> 00:27:35,589 line:-1
iOS中随时可用


754
00:27:35,656 --> 00:27:36,590 line:-1
它们存在于


755
00:27:36,657 --> 00:27:37,591 line:-1
所有辅助功能中


756
00:27:41,228 --> 00:27:42,563 line:-1
现在将颜色转换动作


757
00:27:42,629 --> 00:27:44,698 line:-1
添加到对比度视图


758
00:27:44,765 --> 00:27:45,732 line:-1
通过调用


759
00:27:45,799 --> 00:27:47,234 line:-1
动作修改器


760
00:27:47,301 --> 00:27:48,135 line:-1
函数


761
00:27:48,202 --> 00:27:52,372 line:-1
最后 如何加快


762
00:27:52,439 --> 00:27:53,273 line:-1
导航？


763
00:27:54,608 --> 00:27:55,843 line:-1
这个视图可以


764
00:27:55,909 --> 00:27:57,711 line:-1
分为三大块


765
00:27:58,612 --> 00:28:01,081 line:-1
对比度


766
00:28:01,148 --> 00:28:03,917 line:-1
背景颜色和文本


767
00:28:03,984 --> 00:28:04,818 line:-1
颜色


768
00:28:05,252 --> 00:28:06,720 line:-1
它们都是组成


769
00:28:06,887 --> 00:28:08,255 line:-1
isHeader的


770
00:28:08,322 --> 00:28:09,223 line:-1
trait


771
00:28:09,289 --> 00:28:10,624 line:-1
它被旁白用来


772
00:28:10,791 --> 00:28:11,892 line:-1
快速切换


773
00:28:11,959 --> 00:28:12,926 line:-1
不同的标题


774
00:28:12,993 --> 00:28:14,928 line:-1
在app里


775
00:28:15,996 --> 00:28:17,364 line:-1
将trait加给


776
00:28:17,431 --> 00:28:19,299 line:-1
对比度视图和这两个


777
00:28:19,366 --> 00:28:20,567 line:-1
文本颜色的


778
00:28:20,634 --> 00:28:21,468 line:-1
选择区域


779
00:28:25,439 --> 00:28:27,174 line:-2
现在看下
修改的结果


780
00:28:27,241 --> 00:28:28,442 line:-1
首先是顶部


781
00:28:28,509 --> 00:28:29,343 line:-1
视图


782
00:28:31,078 --> 00:28:33,981 line:-1
对比度11.7比1


783
00:28:34,248 --> 00:28:35,082 line:-1
标题


784
00:28:35,682 --> 00:28:36,950 line:-1
现在既有上下文


785
00:28:37,017 --> 00:28:38,585 line:-1
也有适当的描述


786
00:28:38,652 --> 00:28:40,621 line:-1
关于这个值


787
00:28:40,687 --> 00:28:41,755 line:-1
接下来是滑块


788
00:28:41,822 --> 00:28:42,789 line:-1
调整蓝色的


789
00:28:42,856 --> 00:28:43,690 line:-1
值


790
00:28:44,458 --> 00:28:46,293 line:-1
重置颜色 按钮


791
00:28:47,327 --> 00:28:48,262 line:-1
背景


792
00:28:48,562 --> 00:28:49,396 line:-1
标题


793
00:28:50,364 --> 00:28:52,099 line:-1
红色 76


794
00:28:52,332 --> 00:28:53,166 line:-1
可调节


795
00:28:54,501 --> 00:28:56,470 line:-1
用手指上下滑动


796
00:28:56,537 --> 00:28:57,538 line:-1
调节数值


797
00:28:58,605 --> 00:29:00,874 line:-1
绿色 217


798
00:29:01,175 --> 00:29:02,009 line:-1
可调节


799
00:29:02,543 --> 00:29:05,078 line:-1
蓝色 100 可调节


800
00:29:06,547 --> 00:29:07,681 line:-1
滑动 100


801
00:29:08,115 --> 00:29:11,552 line:-1
140…250…255


802
00:29:15,088 --> 00:29:16,056 line:-1
最后我们来使用


803
00:29:16,123 --> 00:29:17,824 line:-1
旁白拨盘切换


804
00:29:17,891 --> 00:29:19,459 line:-1
标题和颜色


805
00:29:19,526 --> 00:29:20,460 line:-1
通过自定义动作


806
00:29:20,527 --> 00:29:21,361 line:-1
之前的


807
00:29:22,095 --> 00:29:23,030 line:-1
调节数值


808
00:29:23,263 --> 00:29:26,233 line:-1
标题 文字


809
00:29:26,300 --> 00:29:28,235 line:-1
标题 背景


810
00:29:28,502 --> 00:29:29,336 line:-1
标题


811
00:29:30,037 --> 00:29:33,440 line:-1
对比度13.0比1


812
00:29:33,740 --> 00:29:34,575 line:-1
标题


813
00:29:35,409 --> 00:29:36,243 line:-1
动作


814
00:29:37,077 --> 00:29:38,078 line:-1
颜色转换


815
00:29:48,755 --> 00:29:50,290 line:-1
只要动动手指


816
00:29:50,357 --> 00:29:51,525 line:-1
就能大幅提升


817
00:29:51,592 --> 00:29:52,726 line:-1
app辅助功能的


818
00:29:52,793 --> 00:29:53,627 line:-1
体验


819
00:29:53,861 --> 00:29:55,095 line:-1
这都是API的基础


820
00:29:55,162 --> 00:29:56,363 line:-1
下面我要讲


821
00:29:56,430 --> 00:29:57,364 line:-1
一些更为


822
00:29:57,431 --> 00:29:58,265 line:-1
抽象的


823
00:29:58,799 --> 00:29:59,666 line:-1
辅助功能树


824
00:30:01,201 --> 00:30:03,103 line:-2
你看过了
辅助功能元素的


825
00:30:03,170 --> 00:30:04,071 line:-1
创建过程


826
00:30:04,571 --> 00:30:06,573 line:-2
接下来我们
进一步讨论


827
00:30:06,640 --> 00:30:08,275 line:-1
元素的树结构


828
00:30:08,342 --> 00:30:09,309 line:-1
以及你如何使用


829
00:30:09,376 --> 00:30:11,478 line:-1
树结构 创造更好的


830
00:30:11,545 --> 00:30:12,379 line:-1
体验


831
00:30:13,146 --> 00:30:14,615 line:-2
首先是如何
创建树


832
00:30:17,918 --> 00:30:19,119 line:-1
先看视图树


833
00:30:19,319 --> 00:30:20,420 line:-1
直接由代码创建


834
00:30:21,455 --> 00:30:23,023 line:-1
左边是SwiftUI代码


835
00:30:23,090 --> 00:30:23,957 line:-1
表格视图


836
00:30:24,925 --> 00:30:26,860 line:-1
一个标签 一个空层


837
00:30:26,927 --> 00:30:27,761 line:-1
两个按钮


838
00:30:28,362 --> 00:30:29,730 line:-1
横向排列在一个


839
00:30:29,796 --> 00:30:30,631 line:-1
平叠层


840
00:30:31,632 --> 00:30:32,933 line:-1
它直接翻译成


841
00:30:33,000 --> 00:30:33,834 line:-1
右边的视图树


842
00:30:33,901 --> 00:30:35,702 line:-1
平叠层是父节点


843
00:30:35,769 --> 00:30:37,571 line:-1
而标签


844
00:30:37,638 --> 00:30:39,673 line:-1
空层 按钮


845
00:30:39,740 --> 00:30:40,574 line:-1
是子节点


846
00:30:41,808 --> 00:30:44,278 line:-2
因为自带
辅助 树结构


847
00:30:44,344 --> 00:30:45,779 line:-1
会创建三个辅助功能


848
00:30:45,846 --> 00:30:46,680 line:-1
元素


849
00:30:46,747 --> 00:30:48,282 line:-1
一个来自文本 两个来自


850
00:30:48,348 --> 00:30:49,183 line:-1
按钮


851
00:30:51,051 --> 00:30:51,885 line:-1
它们会成为


852
00:30:51,952 --> 00:30:53,053 line:-1
子元素 构成平台的


853
00:30:53,120 --> 00:30:54,621 line:-1
主视图 并传递给


854
00:30:54,688 --> 00:30:55,656 line:-1
辅助功能


855
00:30:55,722 --> 00:30:56,557 line:-1
产品


856
00:30:57,524 --> 00:30:59,993 line:-1
这个子节点树也可能属于


857
00:31:00,060 --> 00:31:01,662 line:-1
更大的辅助功能树


858
00:31:01,728 --> 00:31:03,597 line:-1
通过UiKit或AppKit连接


859
00:31:03,664 --> 00:31:04,498 line:-1
元素


860
00:31:04,831 --> 00:31:07,034 line:-1
SwiftUI树甚至可以是


861
00:31:07,100 --> 00:31:08,268 line:-1
其他平台的父节点


862
00:31:08,335 --> 00:31:10,103 line:-1
元素搭桥用UI或


863
00:31:10,170 --> 00:31:11,405 line:-1
NSViewRepresentable


864
00:31:12,039 --> 00:31:14,441 line:-1
如果你注意到


865
00:31:14,508 --> 00:31:15,909 line:-1
树的阶层


866
00:31:15,976 --> 00:31:17,044 line:-1
你也许会想到


867
00:31:17,110 --> 00:31:18,512 line:-1
它很快就会变得复杂


868
00:31:19,313 --> 00:31:20,480 line:-1
我来告诉你如何创建


869
00:31:20,547 --> 00:31:21,515 line:-1
树的阶层 从而


870
00:31:21,582 --> 00:31:23,116 line:-1
改善引导体验


871
00:31:24,151 --> 00:31:26,286 line:-2
依旧是
这个例子


872
00:31:28,322 --> 00:31:31,091 line:-1
表格本身有三个


873
00:31:31,158 --> 00:31:32,292 line:-1
辅助功能元素


874
00:31:32,893 --> 00:31:33,994 line:-1
旁白会


875
00:31:34,061 --> 00:31:35,829 line:-1
按序切换 它会表现很好


876
00:31:35,896 --> 00:31:36,797 line:-1
如果只有一个格子


877
00:31:36,864 --> 00:31:39,099 line:-1
但实际情况是


878
00:31:39,166 --> 00:31:40,501 line:-1
你的app会有


879
00:31:40,567 --> 00:31:41,401 line:-1
几百个


880
00:31:42,102 --> 00:31:43,136 line:-1
你看这个树


881
00:31:43,203 --> 00:31:44,304 line:-1
有一堆元素


882
00:31:44,838 --> 00:31:46,273 line:-1
但没有什么帮助


883
00:31:46,340 --> 00:31:47,241 line:-1
都是重复的


884
00:31:47,307 --> 00:31:48,509 line:-1
关注和


885
00:31:48,575 --> 00:31:49,409 line:-1
分享按钮


886
00:31:50,010 --> 00:31:50,878 line:-1
对于关注按钮


887
00:31:50,944 --> 00:31:52,479 line:-1
你怎么知道是


888
00:31:52,546 --> 00:31:54,882 line:-1
第五 还是第六个人


889
00:31:55,315 --> 00:31:56,283 line:-1
我们只能寻找


890
00:31:56,350 --> 00:31:57,184 line:-1
其他提示


891
00:31:57,918 --> 00:31:59,086 line:-2
其实可以
更简单


892
00:31:59,720 --> 00:32:02,890 line:-1
我们创建一个


893
00:32:02,956 --> 00:32:04,324 line:-1
辅助功能元素


894
00:32:04,391 --> 00:32:05,392 line:-1
级别高于视图


895
00:32:05,459 --> 00:32:06,293 line:-1
树


896
00:32:07,327 --> 00:32:08,562 line:-1
找到一个视图


897
00:32:08,629 --> 00:32:09,763 line:-1
作为父节点


898
00:32:09,830 --> 00:32:11,698 line:-1
然后在这里创建


899
00:32:11,765 --> 00:32:12,599 line:-1
新元素


900
00:32:13,734 --> 00:32:15,435 line:-2
这里使用
HStack


901
00:32:19,606 --> 00:32:20,674 line:-1
使用辅助功能


902
00:32:20,741 --> 00:32:22,342 line:-1
元素函数在HStack


903
00:32:22,543 --> 00:32:23,443 line:-1
创建新元素


904
00:32:24,444 --> 00:32:26,480 line:-1
.combine会整合


905
00:32:26,547 --> 00:32:28,115 line:-1
子节点的辅助功能


906
00:32:28,182 --> 00:32:29,483 line:-1
放入一个元素


907
00:32:30,584 --> 00:32:32,753 line:-1
这里 文本视图会


908
00:32:32,819 --> 00:32:35,255 line:-2
提供元素标签
两个按钮会


909
00:32:35,322 --> 00:32:37,691 line:-2
自动转换成
自定义动作


910
00:32:41,195 --> 00:32:42,629 line:-1
旁白现在只有


911
00:32:42,696 --> 00:32:44,164 line:-1
一个元素


912
00:32:44,231 --> 00:32:46,600 line:-1
会读出人名和


913
00:32:46,667 --> 00:32:49,102 line:-1
可用的动作


914
00:32:56,109 --> 00:32:56,944 line:-1
通过这些修改


915
00:32:57,010 --> 00:32:58,378 line:-1
我们减少了大量的


916
00:32:58,445 --> 00:32:59,413 line:-1
树元素


917
00:33:00,147 --> 00:33:01,315 line:-1
你可以逐个切换


918
00:33:01,381 --> 00:33:02,449 line:-1
随你意愿


919
00:33:03,884 --> 00:33:05,285 line:-1
使用按钮


920
00:33:05,485 --> 00:33:07,120 line:-1
通过自定义动作


921
00:33:07,921 --> 00:33:09,590 line:-1
整合相关的UI


922
00:33:09,656 --> 00:33:11,558 line:-1
是简单又好用的方法


923
00:33:11,625 --> 00:33:13,627 line:-1
完善app的导航


924
00:33:16,029 --> 00:33:17,097 line:-1
另外一个重要的


925
00:33:17,164 --> 00:33:18,832 line:-1
引导和辅助组件是


926
00:33:18,899 --> 00:33:19,733 line:-1
排序


927
00:33:20,767 --> 00:33:21,802 line:-1
某些情况下


928
00:33:21,869 --> 00:33:22,736 line:-1
你会发现默认


929
00:33:22,803 --> 00:33:23,804 line:-1
排序不能达到


930
00:33:23,871 --> 00:33:24,972 line:-1
你预期的体验


931
00:33:26,073 --> 00:33:28,442 line:-2
你也许注意到
之前的视频中


932
00:33:28,509 --> 00:33:30,010 line:-1
颜色重置按钮实际上是


933
00:33:30,077 --> 00:33:31,111 line:-1
横向排序的第二个


934
00:33:31,178 --> 00:33:32,012 line:-1
元素


935
00:33:32,946 --> 00:33:34,348 line:-1
这两个元素的排列为


936
00:33:34,414 --> 00:33:36,183 line:-1
ZStack 元素的排列


937
00:33:36,250 --> 00:33:37,618 line:-1
默认为从后向前


938
00:33:38,919 --> 00:33:40,120 line:-1
视觉上 按钮


939
00:33:40,187 --> 00:33:41,622 line:-1
出现在对比度


940
00:33:41,688 --> 00:33:42,523 line:-1
上方


941
00:33:42,689 --> 00:33:45,192 line:-1
那么我们就要


942
00:33:45,259 --> 00:33:46,560 line:-1
转换位置


943
00:33:47,661 --> 00:33:48,996 line:-1
自定义排序使用


944
00:33:49,062 --> 00:33:49,897 line:-1
sortPriority


945
00:33:53,400 --> 00:33:54,735 line:-1
所有元素都默认


946
00:33:54,801 --> 00:33:55,736 line:-1
sortPriority为0


947
00:33:56,436 --> 00:33:58,105 line:-1
容器里的元素


948
00:33:58,172 --> 00:33:59,439 line:-1
从低到高排列


949
00:33:59,506 --> 00:34:00,340 line:-1
优先级


950
00:34:01,208 --> 00:34:02,509 line:-1
sortPriority的设置


951
00:34:02,809 --> 00:34:03,911 line:-1
可调用辅助功能


952
00:34:03,977 --> 00:34:05,913 line:-1
修改器函数并设置


953
00:34:05,979 --> 00:34:06,980 line:-1
sortPriority参数


954
00:34:08,982 --> 00:34:12,252 line:-2
给按钮的
sortPriority为1


955
00:34:12,319 --> 00:34:14,087 line:-1
由于对比度的优先级为0


956
00:34:14,154 --> 00:34:15,856 line:-1
扫描时 按钮排


957
00:34:15,922 --> 00:34:18,125 line:-1
第一 对比度排


958
00:34:18,192 --> 00:34:19,025 line:-1
第二


959
00:34:23,330 --> 00:34:26,166 line:-1
辅助功能API可以


960
00:34:26,233 --> 00:34:27,266 line:-1
让你的app更好


961
00:34:27,333 --> 00:34:28,168 line:-1
理解


962
00:34:29,203 --> 00:34:30,571 line:-1
它允许增加上下文


963
00:34:30,637 --> 00:34:32,505 line:-1
通过加标签 值和线索


964
00:34:32,840 --> 00:34:33,674 line:-1
用辅助功能


965
00:34:33,739 --> 00:34:34,608 line:-1
函数


966
00:34:34,675 --> 00:34:38,110 line:-1
辅助功能动作函数


967
00:34:38,178 --> 00:34:40,013 line:-1
可以添加动作


968
00:34:40,080 --> 00:34:41,715 line:-2
让你的app更有
交互性


969
00:34:42,081 --> 00:34:45,552 line:-1
最后你可以用


970
00:34:45,619 --> 00:34:47,020 line:-1
辅助功能元素函数


971
00:34:47,321 --> 00:34:48,455 line:-1
整合元素


972
00:34:48,722 --> 00:34:49,690 line:-1
完善导航


973
00:34:50,357 --> 00:34:55,094 line:-1
通过自带辅助功能和


974
00:34:55,161 --> 00:34:56,330 line:-1
简单地提升


975
00:34:56,396 --> 00:34:59,766 line:-1
辅助API SwiftUI让


976
00:34:59,833 --> 00:35:00,968 line:-1
app更普惠


977
00:35:01,235 --> 00:35:02,469 line:-1
更快 更简便


978
00:35:03,604 --> 00:35:04,471 line:-1
请Michael回到台上


979
00:35:14,348 --> 00:35:16,583 line:-1
好的 最后我们


980
00:35:16,650 --> 00:35:17,851 line:-1
总结一下


981
00:35:18,752 --> 00:35:20,020 line:-1
还有最后


982
00:35:20,087 --> 00:35:20,921 line:-1
一点


983
00:35:21,188 --> 00:35:22,422 line:-1
如果你将所有这些


984
00:35:22,489 --> 00:35:23,957 line:-1
放入辅助功能


985
00:35:24,024 --> 00:35:25,559 line:-1
你怎么知道app


986
00:35:25,626 --> 00:35:26,860 line:-1
一定能成功？


987
00:35:27,794 --> 00:35:29,296 line:-1
这里有两条建议


988
00:35:29,363 --> 00:35:30,197 line:-1
供你参考


989
00:35:30,998 --> 00:35:32,666 line:-1
首先 没有可代替的工具


990
00:35:32,733 --> 00:35:34,334 line:-1
使用app


991
00:35:34,401 --> 00:35:35,536 line:-1
也就是要尝试


992
00:35:35,602 --> 00:35:37,371 line:-1
真正的辅助功能


993
00:35:37,437 --> 00:35:39,039 line:-1
比如旁白 全键盘


994
00:35:39,106 --> 00:35:40,474 line:-1
访问和Voice Control


995
00:35:41,241 --> 00:35:42,843 line:-1
例如 如果你使用


996
00:35:42,910 --> 00:35:44,511 line:-1
旁白在你的app


997
00:35:44,578 --> 00:35:45,879 line:-1
你不能改善


998
00:35:45,946 --> 00:35:47,214 line:-1
声音方面


999
00:35:47,381 --> 00:35:49,216 line:-1
但你需要


1000
00:35:49,283 --> 00:35:51,084 line:-1
观察屏幕


1001
00:35:51,151 --> 00:35:52,419 line:-1
做些完善


1002
00:35:52,853 --> 00:35:54,021 line:-1
如果你的app使用


1003
00:35:54,087 --> 00:35:55,155 line:-1
Voice Control


1004
00:35:55,222 --> 00:35:56,890 line:-2
你就不能改变
声音


1005
00:35:56,957 --> 00:35:58,292 line:-1
如果你的app使用


1006
00:35:58,358 --> 00:35:59,593 line:-1
全键盘访问


1007
00:35:59,660 --> 00:36:00,894 line:-1
你就不能改变


1008
00:36:00,961 --> 00:36:02,829 line:-1
键盘 你还有


1009
00:36:02,896 --> 00:36:05,666 line:-1
其他可做的


1010
00:36:05,933 --> 00:36:07,334 line:-1
第二


1011
00:36:07,401 --> 00:36:08,802 line:-1
辅助功能检查器


1012
00:36:09,536 --> 00:36:10,737 line:-1
这个产品由


1013
00:36:10,804 --> 00:36:12,239 line:-1
Xcode完成 帮助你


1014
00:36:12,306 --> 00:36:14,074 line:-1
深入了解app的


1015
00:36:14,141 --> 00:36:14,975 line:-1
辅助性


1016
00:36:15,142 --> 00:36:17,277 line:-1
这个辅助功能检查器


1017
00:36:17,344 --> 00:36:19,046 line:-1
不能代替app测试


1018
00:36:19,112 --> 00:36:20,314 line:-1
实际的辅助功能


1019
00:36:20,380 --> 00:36:22,216 line:-1
但可以作为


1020
00:36:22,282 --> 00:36:24,117 line:-1
强大的工具 去了解


1021
00:36:24,184 --> 00:36:26,453 line:-1
辅助功能树以及解决


1022
00:36:26,520 --> 00:36:27,354 line:-1
问题


1023
00:36:28,255 --> 00:36:29,122 line:-1
推荐一些很棒的


1024
00:36:29,189 --> 00:36:31,458 line:-2
关于检查器的讲座
如图


1025
00:36:33,660 --> 00:36:35,495 line:-1
那么 总结几点


1026
00:36:35,562 --> 00:36:36,430 line:-1
今天的内容


1027
00:36:37,898 --> 00:36:39,633 line:-1
我们十分努力


1028
00:36:39,800 --> 00:36:42,035 line:-2
在Apple 为了打造
SwiftUI


1029
00:36:42,102 --> 00:36:44,004 line:-1
让你的app面向更多客户


1030
00:36:44,071 --> 00:36:45,305 line:-1
从根本上


1031
00:36:46,473 --> 00:36:48,342 line:-1
在设计SwiftUI时


1032
00:36:48,408 --> 00:36:50,010 line:-1
时刻谨记辅助功能


1033
00:36:50,077 --> 00:36:50,911 line:-1
从头至尾


1034
00:36:51,411 --> 00:36:53,981 line:-1
今天讲到了什么是


1035
00:36:54,047 --> 00:36:55,415 line:-1
优秀的辅助功能


1036
00:36:55,482 --> 00:36:56,416 line:-1
界面


1037
00:36:56,483 --> 00:36:57,417 line:-1
虽然讲的很深


1038
00:36:57,484 --> 00:36:58,519 line:-1
但重点是


1039
00:36:58,752 --> 00:37:00,754 line:-1
易于理解 可以交互


1040
00:37:01,188 --> 00:37:02,055 line:-1
便于引导


1041
00:37:04,958 --> 00:37:07,294 line:-1
除了基本内容


1042
00:37:07,361 --> 00:37:09,429 line:-1
SwiftUI有强大的


1043
00:37:09,496 --> 00:37:11,265 line:-1
辅助功能API


1044
00:37:11,331 --> 00:37:12,165 line:-1
可用


1045
00:37:12,900 --> 00:37:15,169 line:-1
这个API现在已经


1046
00:37:15,235 --> 00:37:17,171 line:-2
统一用于所有
平台


1047
00:37:17,237 --> 00:37:18,639 line:-1
因此你只需学习


1048
00:37:18,705 --> 00:37:19,540 line:-1
一次


1049
00:37:26,046 --> 00:37:28,282 line:-2
两份有用的资料
给你


1050
00:37:28,348 --> 00:37:29,716 line:-1
首先我们会公开


1051
00:37:29,783 --> 00:37:31,051 line:-1
本场的样本代码


1052
00:37:31,118 --> 00:37:32,519 line:-1
点击屏幕上方


1053
00:37:32,586 --> 00:37:33,420 line:-1
就可找到


1054
00:37:33,754 --> 00:37:35,255 line:-1
第二 本场演讲过后


1055
00:37:35,322 --> 00:37:36,723 line:-1
我们会举办


1056
00:37:36,790 --> 00:37:38,325 line:-1
辅助功能实验室


1057
00:37:38,725 --> 00:37:40,794 line:-1
来加入我们


1058
00:37:40,861 --> 00:37:41,828 line:-1
聊聊SwiftUI


1059
00:37:41,895 --> 00:37:42,729 line:-1
和辅助功能


1060
00:37:43,197 --> 00:37:45,098 line:-2
我们期待
见到你们


1061
00:37:46,600 --> 00:37:48,635 line:-1
我们十分激动看到


1062
00:37:48,702 --> 00:37:50,103 line:-1
辅助app的新时代


1063
00:37:50,170 --> 00:37:51,939 line:-1
由你用SwiftUI创造


1064
00:37:52,506 --> 00:37:53,407 line:-1
感谢观看

