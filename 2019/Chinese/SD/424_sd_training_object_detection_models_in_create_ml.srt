1
00:00:00,506 --> 00:00:05,500
[音乐]


2
00:00:09,516 --> 00:00:16,096
[掌声]


3
00:00:16,596 --> 00:00:17,216
>> 上午好


4
00:00:18,406 --> 00:00:22,146
我是 Alex Brown
是 Core ML 团队的一名工程师


5
00:00:23,206 --> 00:00:24,736
今天 我们要


6
00:00:24,736 --> 00:00:27,366
展示用于物体检测的 Create ML


7
00:00:27,786 --> 00:00:30,726
在机器学习的新功能


8
00:00:30,726 --> 00:00:32,235
这一会议中 我们向你们


9
00:00:32,235 --> 00:00:35,003
介绍了全新的 Create ML App


10
00:00:36,076 --> 00:00:37,206
这是一种非常


11
00:00:37,206 --> 00:00:39,296
亲善好用的工具 可以帮助你


12
00:00:39,296 --> 00:00:40,786
在 App 中添加自定义


13
00:00:41,286 --> 00:00:42,466
机器学习模型


14
00:00:43,496 --> 00:00:45,906
本会议中 我们会


15
00:00:45,906 --> 00:00:47,756
更深入地介绍两个


16
00:00:47,756 --> 00:00:49,086
专门的模板


17
00:00:49,886 --> 00:00:51,796
分别是针对图像的


18
00:00:51,796 --> 00:00:54,456
物体检测 和声音分类


19
00:00:55,056 --> 00:01:00,046
我们先来看物体检测


20
00:01:02,506 --> 00:01:05,506
物体检测可以让你的


21
00:01:05,506 --> 00:01:07,316
App 识别


22
00:01:07,316 --> 00:01:09,076
设备相机拍摄的


23
00:01:09,076 --> 00:01:10,856
真实物体 并根据


24
00:01:10,856 --> 00:01:13,226
它们是否出现


25
00:01:13,806 --> 00:01:16,246
在何位置 有何关系作出反应


26
00:01:17,116 --> 00:01:19,406
你可以在网上


27
00:01:19,406 --> 00:01:21,026
下载能够分辨


28
00:01:21,026 --> 00:01:22,176
物体所属大类的


29
00:01:22,176 --> 00:01:23,756
物体检测器


30
00:01:25,386 --> 00:01:27,086
但如果使用你自己的数据


31
00:01:27,086 --> 00:01:29,046
训练自定机器学习模型


32
00:01:29,636 --> 00:01:31,166
你就可以让你的 App


33
00:01:31,166 --> 00:01:32,506
分辨不同物体间的细微差别


34
00:01:33,046 --> 00:01:35,306
例如动物 手势


35
00:01:35,306 --> 00:01:38,816
路标 游戏符号等等


36
00:01:39,396 --> 00:01:43,056
如果你曾经使用过


37
00:01:43,316 --> 00:01:45,086
Apple 的机器学习


38
00:01:45,086 --> 00:01:47,936
你对图像分类就应该比较熟悉了


39
00:01:49,456 --> 00:01:51,896
你可以使用图像分类


40
00:01:51,896 --> 00:01:53,636
建立模型 为一幅图像


41
00:01:53,636 --> 00:01:56,146
提供简短描述


42
00:01:57,656 --> 00:01:59,626
我们可以将这幅图像描述为


43
00:02:00,166 --> 00:02:02,976
户外或公园 或者


44
00:02:02,976 --> 00:02:05,476
对特定 App 而言 描述为“一条狗”


45
00:02:08,056 --> 00:02:10,346
但要是我们想要获取


46
00:02:10,346 --> 00:02:11,936
场景中两个或以上的物体呢？


47
00:02:12,306 --> 00:02:16,286
这种情况下 物体检测


48
00:02:16,466 --> 00:02:18,086
就能派上用场


49
00:02:18,586 --> 00:02:20,616
它可以检测出照片里


50
00:02:20,826 --> 00:02:22,596
两个或以上的物体


51
00:02:22,596 --> 00:02:25,456
并提供位置 大小等信息


52
00:02:25,456 --> 00:02:26,726
还能给每个物体添加标签


53
00:02:27,646 --> 00:02:29,966
这样一来 你的 App 就可以


54
00:02:29,966 --> 00:02:31,806
运用设备用摄像头


55
00:02:32,096 --> 00:02:34,436
做更复杂的事 但为此


56
00:02:34,436 --> 00:02:36,136
我们要详细了解


57
00:02:36,136 --> 00:02:37,776
如何用图像


58
00:02:37,776 --> 00:02:39,676
训练你的模型


59
00:02:41,756 --> 00:02:45,296
要训练物体检测器


60
00:02:45,296 --> 00:02:47,796
你需要在图像上


61
00:02:47,796 --> 00:02:49,326
标记出希望


62
00:02:49,326 --> 00:02:50,836
模型检测的区域


63
00:02:51,606 --> 00:02:53,786
标记物体用的


64
00:02:53,786 --> 00:02:56,266
选框 起始点位于


65
00:02:56,266 --> 00:02:57,576
希望标记物体的中心


66
00:02:57,576 --> 00:03:00,116
并且有其大小


67
00:03:00,206 --> 00:03:03,066
高度和宽度


68
00:03:03,156 --> 00:03:05,376
单位均为像素


69
00:03:05,376 --> 00:03:07,306
定位取图像左上角为原点


70
00:03:08,136 --> 00:03:12,436
定位点是希望标记的物体中心


71
00:03:12,886 --> 00:03:14,806
你将所有的


72
00:03:14,806 --> 00:03:17,736
标注 标签 位置和大小


73
00:03:17,736 --> 00:03:20,356
打包在一个 JSON 文件中


74
00:03:20,356 --> 00:03:21,226
格式如下


75
00:03:21,946 --> 00:03:26,986
你可以从网页


76
00:03:26,986 --> 00:03:29,176
下载工具帮助实现 但要


77
00:03:29,466 --> 00:03:31,016
确保这些工具的坐标系统


78
00:03:31,016 --> 00:03:33,206
与 Create ML


79
00:03:34,506 --> 00:03:35,646
App 的相一致


80
00:03:35,966 --> 00:03:37,216
完成标注


81
00:03:37,256 --> 00:03:40,256
图像后 将文件


82
00:03:40,256 --> 00:03:41,716
拖拽到被标注图像


83
00:03:41,776 --> 00:03:44,686
所在的文件夹 就好了


84
00:03:45,896 --> 00:03:50,176
你的训练数据就准备就绪了


85
00:03:50,336 --> 00:03:52,576
现在我们知道如何


86
00:03:52,576 --> 00:03:54,436
展示用于物体检测的训练数据


87
00:03:55,176 --> 00:03:56,656
我们来看一个实例


88
00:03:58,266 --> 00:03:59,736
我的同事 Scott 有一个


89
00:03:59,736 --> 00:04:01,876
不错的想法 制作


90
00:04:01,876 --> 00:04:03,786
一款面向儿童的


91
00:04:03,786 --> 00:04:06,676
数学游戏 并使用真正的骰子


92
00:04:07,066 --> 00:04:08,376
生成问题


93
00:04:10,116 --> 00:04:11,346
你们可以在 228 号


94
00:04:11,346 --> 00:04:13,546
会议中了解更多 会议名为


95
00:04:14,046 --> 00:04:16,616
使用 Core ML 和 ARKit


96
00:04:16,616 --> 00:04:18,685
创建超棒的 App


97
00:04:19,236 --> 00:04:21,106
Scott 找我帮忙


98
00:04:21,106 --> 00:04:23,436
给他的游戏构建一个模型


99
00:04:23,436 --> 00:04:25,576
我提议用 Apple 的 Create ML App 


100
00:04:25,576 --> 00:04:27,716
来训练一个


101
00:04:27,716 --> 00:04:28,546
物体检测器


102
00:04:29,136 --> 00:04:34,036
Scott 早就把训练数据发给我了


103
00:04:35,346 --> 00:04:36,706
他找了一堆图像


104
00:04:36,736 --> 00:04:38,816
是角度不同 顶部点数不同的


105
00:04:38,816 --> 00:04:39,776
骰子的图像


106
00:04:39,776 --> 00:04:41,976
他标注了这些图像


107
00:04:42,406 --> 00:04:44,636
在顶面画了选框


108
00:04:44,636 --> 00:04:47,056
并且添加了标签


109
00:04:47,056 --> 00:04:51,816
标注了每个骰子上面的点数大小


110
00:04:52,476 --> 00:04:54,336
现在 数据就准备就绪了


111
00:04:54,906 --> 00:04:56,266
我们来看看 如何


112
00:04:56,266 --> 00:04:58,566
使用 Create ML App 来构建模型


113
00:05:07,056 --> 00:05:10,796
首先 我们来检查数据


114
00:05:12,326 --> 00:05:13,646
可以看到 我们把所有


115
00:05:13,646 --> 00:05:18,766
图像放在一个文件夹里 每张图像


116
00:05:18,856 --> 00:05:22,236
包含多个骰子


117
00:05:23,286 --> 00:05:24,416
我们把所有


118
00:05:24,416 --> 00:05:26,486
标注都放在一个 JSON 文件里


119
00:05:28,276 --> 00:05:31,286
现在 我来打开 Create ML App


120
00:05:31,836 --> 00:05:33,786
我可以从 Xcode 的


121
00:05:33,786 --> 00:05:36,286
菜单打开 也可以使用聚焦


122
00:05:40,696 --> 00:05:42,106
Create ML App


123
00:05:42,106 --> 00:05:44,226
打开后 就可以选择


124
00:05:44,226 --> 00:05:45,976
打开之前创建的文档


125
00:05:46,586 --> 00:05:50,666
我们来创建一个新项目


126
00:05:50,756 --> 00:05:52,376
首先 可以看到模板


127
00:05:52,376 --> 00:05:54,076
选择器 可以


128
00:05:54,076 --> 00:05:55,586
从一系列机器学习


129
00:05:55,586 --> 00:05:57,056
模型中选择


130
00:05:57,646 --> 00:05:59,756
这个案例中 我们选图像


131
00:06:00,006 --> 00:06:01,596
物体检测器


132
00:06:04,476 --> 00:06:06,156
我来给它命名 这样


133
00:06:06,156 --> 00:06:08,116
之后就能把它区分出来


134
00:06:08,116 --> 00:06:09,246
再添加一些细节


135
00:06:15,666 --> 00:06:17,976
现在 可以看到主窗口


136
00:06:17,976 --> 00:06:20,956
训练视图位于右侧


137
00:06:20,956 --> 00:06:22,706
它已经选择了一个


138
00:06:22,706 --> 00:06:25,196
训练标签页 准备接收我们的训练数据


139
00:06:25,926 --> 00:06:27,816
我也可以将它直接


140
00:06:27,816 --> 00:06:30,606
拖入训练数据区


141
00:06:31,166 --> 00:06:32,676
在训练数据之前


142
00:06:33,266 --> 00:06:34,686
App 便会检查


143
00:06:34,686 --> 00:06:36,416
数据 确保其


144
00:06:36,416 --> 00:06:38,566
格式正确 包含图像


145
00:06:38,656 --> 00:06:40,236
而非声音等其他类型的文件


146
00:06:40,506 --> 00:06:41,886
且饱含一个 JSON 文件


147
00:06:41,886 --> 00:06:43,626
能正确描述图像文件


148
00:06:43,926 --> 00:06:46,376
它同时还提供了一些初始数据


149
00:06:46,916 --> 00:06:48,226
可以看到 我们大概有


150
00:06:48,226 --> 00:06:51,526
1,000 幅图像 并且有


151
00:06:51,526 --> 00:06:54,236
六个类 对应


152
00:06:54,236 --> 00:06:57,356
骰子的六个面 非常好


153
00:06:59,576 --> 00:07:01,296
我们还可以在这个界面上做些其他的


154
00:07:01,446 --> 00:07:03,006
例如 我们可以提供


155
00:07:03,006 --> 00:07:04,786
测试数据 从而


156
00:07:04,786 --> 00:07:07,036
比较不同模型的表现


157
00:07:07,686 --> 00:07:09,816
同时 我们也可以设置高级


158
00:07:09,816 --> 00:07:11,276
参数 调整模型


159
00:07:11,276 --> 00:07:12,216
训练的方式


160
00:07:12,716 --> 00:07:13,956
但现在 这些


161
00:07:13,956 --> 00:07:15,266
还不需要担心 我们已经


162
00:07:15,266 --> 00:07:16,296
可以开始训练了


163
00:07:17,466 --> 00:07:19,036
我们按下开始按钮


164
00:07:19,036 --> 00:07:19,856
看看会发生什么


165
00:07:21,616 --> 00:07:22,976
训练开始了


166
00:07:23,826 --> 00:07:25,546
我们直接就会来到


167
00:07:25,546 --> 00:07:28,086
训练标签页 这里可以看到


168
00:07:28,086 --> 00:07:29,706
模型训练的进度


169
00:07:30,006 --> 00:07:32,316
这是展示损失的图表


170
00:07:32,506 --> 00:07:35,136
随着模型不断优化 损失也越来越少


171
00:07:35,486 --> 00:07:36,936
所以这条线最后


172
00:07:37,076 --> 00:07:41,226
应当到达图表底部


173
00:07:42,016 --> 00:07:43,906
物体检测训练所需时间


174
00:07:43,906 --> 00:07:45,896
比图像分类要长得多


175
00:07:46,506 --> 00:07:47,776
我估计这可能要花上


176
00:07:47,776 --> 00:07:49,336
至少一个小时


177
00:07:49,726 --> 00:07:51,466
我们不想这么干等


178
00:07:51,466 --> 00:07:53,976
所以我已经用这组数据训练好了一个模型


179
00:08:03,496 --> 00:08:05,486
好了 现在我可以


180
00:08:05,486 --> 00:08:06,966
跳转到之前看到的


181
00:08:06,966 --> 00:08:07,636
训练标签页


182
00:08:08,706 --> 00:08:10,396
可以看到 损失已经


183
00:08:10,396 --> 00:08:11,996
显著减少了 表明


184
00:08:11,996 --> 00:08:13,106
模型的性能随着


185
00:08:13,106 --> 00:08:14,706
训练时间增加


186
00:08:14,706 --> 00:08:15,466
而不断改善


187
00:08:16,506 --> 00:08:17,636
这个界面上还有其他东西


188
00:08:17,636 --> 00:08:18,416
我认为值得大家


189
00:08:18,416 --> 00:08:19,546
仔细一看


190
00:08:20,416 --> 00:08:23,336
首先是总体性能


191
00:08:23,686 --> 00:08:25,396
92% 这个数字


192
00:08:25,396 --> 00:08:26,606
对于物体检测器来说


193
00:08:26,606 --> 00:08:27,436
相当不错


194
00:08:29,116 --> 00:08:30,746
我们还想确认一下


195
00:08:30,746 --> 00:08:32,456
是否对所有类


196
00:08:32,456 --> 00:08:34,676
性能水平都较为一致


197
00:08:35,746 --> 00:08:38,446
从 1 到 6 的每个类


198
00:08:38,546 --> 00:08:41,015
性能都超过 90% 并且


199
00:08:41,015 --> 00:08:42,056
值都大致相等


200
00:08:42,645 --> 00:08:45,036
这很重要 因为


201
00:08:45,036 --> 00:08:46,096
这表明 模型处理


202
00:08:46,096 --> 00:08:48,076
骰子六个面时 性能一样好


203
00:08:48,806 --> 00:08:50,086
对骰子游戏来说


204
00:08:50,086 --> 00:08:52,586
公平性很重要 这一点也至关重要


205
00:08:53,136 --> 00:08:57,796
所以 数学上来讲


206
00:08:57,946 --> 00:08:59,396
这个模型性能不错


207
00:08:59,396 --> 00:09:01,886
但我们又该如何相信 它适用于


208
00:09:01,886 --> 00:09:03,446
我们的实例呢


209
00:09:04,316 --> 00:09:06,266
我们可以使用输出标签页


210
00:09:07,816 --> 00:09:09,416
Scott 发给我一张测试图像


211
00:09:09,416 --> 00:09:11,106
让我在把模型发回给他之前


212
00:09:11,106 --> 00:09:12,976
先测试一下 我们把这张图拖进来


213
00:09:20,036 --> 00:09:21,256
看起来还不错


214
00:09:21,896 --> 00:09:22,766
可以看到 场景中的


215
00:09:22,766 --> 00:09:24,966
五枚骰子都被识别了


216
00:09:25,196 --> 00:09:27,146
模型正确地在骰子的


217
00:09:27,146 --> 00:09:29,746
顶面画出了方框


218
00:09:29,746 --> 00:09:34,526
依次点击 6 1 5 我们


219
00:09:34,526 --> 00:09:36,386
可以看到每个标签


220
00:09:36,386 --> 00:09:37,546
置信度较高


221
00:09:39,456 --> 00:09:41,086
性能很不错


222
00:09:41,786 --> 00:09:43,726
所以 如果我要编写自己的


223
00:09:44,556 --> 00:09:46,436
App 的话 我就可以直接


224
00:09:46,466 --> 00:09:47,756
将生成的模型拖入


225
00:09:48,136 --> 00:09:49,456
在 Xcode 中使用


226
00:09:50,316 --> 00:09:51,926
我觉得 Scott 可能


227
00:09:51,926 --> 00:09:53,976
也在等着把这个模型用到他的 App 里


228
00:09:55,306 --> 00:09:57,396
但在此之前


229
00:09:57,396 --> 00:09:58,336
我还想再试一件事


230
00:10:00,556 --> 00:10:01,816
在我准备此次


231
00:10:01,846 --> 00:10:03,936
演示 鼓弄骰子 照相机


232
00:10:03,936 --> 00:10:06,146
和电脑的时候


233
00:10:06,146 --> 00:10:07,886
我九岁的儿子过来问


234
00:10:07,886 --> 00:10:09,116
我在干什么


235
00:10:10,276 --> 00:10:11,826
我解释之后


236
00:10:11,826 --> 00:10:13,226
他非常兴奋


237
00:10:13,226 --> 00:10:14,586
并且想出了一个游戏


238
00:10:14,586 --> 00:10:17,056
里面有熊 蝙蝠


239
00:10:17,056 --> 00:10:18,446
和其他动物


240
00:10:18,686 --> 00:10:20,456
它们共同合作 收集螺栓


241
00:10:20,456 --> 00:10:21,226
造一艘太空船


242
00:10:21,476 --> 00:10:23,586
要用不同颜色的骰子


243
00:10:23,586 --> 00:10:24,836
升级不同


244
00:10:24,836 --> 00:10:25,436
种类的怪物


245
00:10:26,946 --> 00:10:28,716
我们拿到了他的骰子


246
00:10:28,716 --> 00:10:30,786
并决定试一下 Scott 的模型


247
00:10:31,236 --> 00:10:34,636
他用的骰子有一点不同


248
00:10:35,206 --> 00:10:36,506
这些是角色扮演类游戏用的骰子


249
00:10:36,896 --> 00:10:40,556
我们来看看模型的性能


250
00:10:40,556 --> 00:10:43,816
到底如何使用 Mac 的连续互通相机


251
00:10:43,816 --> 00:10:46,336
功能 我可以直接从


252
00:10:47,316 --> 00:10:49,036
iPhone 导入照片


253
00:10:49,436 --> 00:10:50,546
这一点很棒


254
00:10:50,596 --> 00:10:52,186
因为这意味着我使用的


255
00:10:52,296 --> 00:10:53,536
屏幕和相机与你的 App


256
00:10:53,536 --> 00:10:54,736
使用的一样


257
00:10:57,176 --> 00:10:59,796
我来拍摄一张照片 选择 使用照片


258
00:11:00,346 --> 00:11:04,716
照片马上就被分析了


259
00:11:04,876 --> 00:11:06,276
我们来看一下


260
00:11:06,376 --> 00:11:07,556
到底发生了什么


261
00:11:08,216 --> 00:11:11,876
模型正确识别了两枚


262
00:11:12,026 --> 00:11:15,376
带点数的六面骰子 并且


263
00:11:15,376 --> 00:11:18,056
附上了正确的标签


264
00:11:18,476 --> 00:11:20,966
模型忽视了照片中


265
00:11:20,966 --> 00:11:23,306
大多数的骰子 除了


266
00:11:23,306 --> 00:11:24,246
那边的几枚


267
00:11:28,156 --> 00:11:29,596
模型识别出的它们的点数


268
00:11:29,596 --> 00:11:30,206
也是错误的


269
00:11:30,436 --> 00:11:31,986
为什么会这样


270
00:11:32,336 --> 00:11:35,726
问题在于预期的不同


271
00:11:36,596 --> 00:11:37,896
Scott 知道 要使用的


272
00:11:37,896 --> 00:11:39,726
都是白色六面骰子


273
00:11:39,806 --> 00:11:41,036
用点数标明数字


274
00:11:41,686 --> 00:11:43,636
我儿子对骰子的理解有点不同


275
00:11:44,006 --> 00:11:44,956
这些骰子都是彩色的


276
00:11:44,956 --> 00:11:46,406
它们不只有六个面


277
00:11:47,266 --> 00:11:49,246
该如何在我们的 App 中


278
00:11:49,246 --> 00:11:50,006
解决这个问题呢


279
00:11:51,006 --> 00:11:52,926
我们可以继续


280
00:11:52,926 --> 00:11:54,206
使用课堂上玩这个游戏


281
00:11:54,206 --> 00:11:56,316
可能会用到的骰子


282
00:11:56,316 --> 00:11:58,806
或者 我们可以用这些骰子


283
00:11:58,806 --> 00:12:00,536
训练这个模型


284
00:12:00,836 --> 00:12:02,766
有两种方法可以实现这一点


285
00:12:03,366 --> 00:12:05,166
我们可以决定


286
00:12:05,166 --> 00:12:06,726
只有六面带点骰子


287
00:12:06,726 --> 00:12:08,556
有效 而排除


288
00:12:08,556 --> 00:12:11,026
其他骰子 这样的话


289
00:12:11,276 --> 00:12:13,096
我们只需要拍摄


290
00:12:13,096 --> 00:12:14,666
包括两种骰子的照片


291
00:12:15,326 --> 00:12:17,286
只标记六面骰子就好


292
00:12:18,246 --> 00:12:20,466
或者 如果我们要编写


293
00:12:20,776 --> 00:12:23,516
先前说到的游戏 我们就要


294
00:12:23,516 --> 00:12:25,096
把其他类型的骰子加入模型


295
00:12:25,096 --> 00:12:26,546
将它们一并标记


296
00:12:27,386 --> 00:12:28,916
可以只标记数字


297
00:12:29,236 --> 00:12:30,946
或者添加额外标记


298
00:12:30,946 --> 00:12:32,076
记录颜色


299
00:12:32,806 --> 00:12:35,576
红 6 黑 4 等等


300
00:12:38,466 --> 00:12:40,626
我们把这个模型发给


301
00:12:40,626 --> 00:12:42,656
Scott 他就可以编写演示 App 了


302
00:12:43,266 --> 00:12:45,556
我可以使用分享按钮


303
00:12:45,556 --> 00:12:47,000
直接用邮件发送模型


304
00:12:54,226 --> 00:12:55,176
这样就行了


305
00:12:57,516 --> 00:13:01,500
[掌声]


306
00:13:07,256 --> 00:13:08,396
>> 我们看到 你可以


307
00:13:08,396 --> 00:13:10,696
使用 Create ML App


308
00:13:10,696 --> 00:13:12,726
基于你收集的训练数据


309
00:13:12,726 --> 00:13:14,336
训练物体检测器


310
00:13:14,746 --> 00:13:16,526
有一些事情 希望


311
00:13:16,526 --> 00:13:18,726
大家在收集训练数据时予以考虑


312
00:13:19,626 --> 00:13:21,496
首先 每个类


313
00:13:21,496 --> 00:13:23,376
带有标注的图片数量


314
00:13:23,376 --> 00:13:25,116
应该均衡


315
00:13:26,416 --> 00:13:29,646
这样 算法就知道每一个类


316
00:13:29,646 --> 00:13:31,276
都同等重要 我们构建的模型


317
00:13:31,276 --> 00:13:32,556
才能对所有类


318
00:13:32,556 --> 00:13:35,746
有均衡的表现


319
00:13:37,456 --> 00:13:40,096
其次 你需要很多图片


320
00:13:40,266 --> 00:13:42,036
我建议 每个类中


321
00:13:42,036 --> 00:13:44,206
你希望模型识别的


322
00:13:44,246 --> 00:13:45,346
带标注的图片至少为


323
00:13:45,346 --> 00:13:47,546
30 张 如果


324
00:13:47,546 --> 00:13:49,256
性能不够好 或者


325
00:13:49,256 --> 00:13:51,086
识别对象特别复杂


326
00:13:51,086 --> 00:13:52,906
就进一步增加数量


327
00:13:53,186 --> 00:13:54,196
比如 对象不同面的


328
00:13:54,196 --> 00:13:56,000
外观不一样


329
00:13:59,376 --> 00:14:00,566
我们之前遇到的


330
00:14:00,566 --> 00:14:02,376
骰子颜色不同的问题怎么解决


331
00:14:02,946 --> 00:14:05,626
图像中的区别不止这一种


332
00:14:06,696 --> 00:14:09,036
我们建议你考虑


333
00:14:09,036 --> 00:14:11,086
你的 App 在现实中是如何运用的


334
00:14:11,776 --> 00:14:13,696
你的用户可能不会有


335
00:14:13,696 --> 00:14:15,656
工作室光照 标准骰子


336
00:14:15,656 --> 00:14:17,126
也没有一张精美的木质书桌


337
00:14:18,176 --> 00:14:20,486
你或许可以找朋友


338
00:14:20,486 --> 00:14:21,956
在不同情境下收集


339
00:14:21,956 --> 00:14:23,896
额外数据 例如


340
00:14:24,226 --> 00:14:26,296
室内灯光 室外自然光


341
00:14:26,296 --> 00:14:28,826
不同的背景 还可以


342
00:14:28,906 --> 00:14:30,406
添加一些你的模型


343
00:14:30,406 --> 00:14:31,956
用不到的物体


344
00:14:32,796 --> 00:14:34,856
这可以帮助模型适应普遍情况


345
00:14:39,046 --> 00:14:40,146
如果你之前用过物体分类器


346
00:14:40,146 --> 00:14:42,326
有一件事情你可能


347
00:14:42,326 --> 00:14:44,376
意想不到 那就是


348
00:14:44,376 --> 00:14:45,156
一个标签足矣


349
00:14:46,316 --> 00:14:48,186
这是因为 既然你将


350
00:14:48,186 --> 00:14:49,686
图片的一部分


351
00:14:49,686 --> 00:14:51,676
解释为狗 也就意味着


352
00:14:51,676 --> 00:14:53,516
其余部分不是 模型也会


353
00:14:53,516 --> 00:14:54,416
照此训练


354
00:14:55,506 --> 00:14:57,506
所以 比方说 你要


355
00:14:57,506 --> 00:14:59,156
编写一款 App 用它识别


356
00:14:59,156 --> 00:15:00,576
你冰箱里泡菜罐的


357
00:15:00,576 --> 00:15:02,366
数量 你就不需要


358
00:15:02,366 --> 00:15:03,816
把其他调味品都标记出来


359
00:15:03,986 --> 00:15:05,476
模型自动就能归纳出


360
00:15:05,476 --> 00:15:06,616
那些不是咸菜罐


361
00:15:08,656 --> 00:15:12,646
模型构建完成后


362
00:15:12,646 --> 00:15:14,616
你如果想把这一


363
00:15:14,616 --> 00:15:15,716
功能加入你的


364
00:15:15,716 --> 00:15:18,326
App 我们建议你


365
00:15:18,326 --> 00:15:19,416
使用 Vision 框架


366
00:15:20,216 --> 00:15:21,926
Vision 框架能够


367
00:15:21,926 --> 00:15:24,016
将实时相机和视频


368
00:15:24,396 --> 00:15:27,000
无缝整合进你的模型工作流


369
00:15:29,346 --> 00:15:30,996
这就是训练物体检测器


370
00:15:30,996 --> 00:15:32,446
需要知道的事项


371
00:15:33,516 --> 00:15:39,960
[掌声]

