1
00:00:06,406 --> 00:00:11,078 line:0
（在iPad上进行桌面级浏览的介绍）


2
00:00:18,085 --> 00:00:19,286 line:-1
大家早上好


3
00:00:19,720 --> 00:00:21,722 line:-1
欢迎参加演讲203


4
00:00:22,289 --> 00:00:25,425 line:-1
在iPad上进行桌面级浏览的介绍


5
00:00:26,126 --> 00:00:30,564 line:-2
我叫Charles Ying
与我一起演讲的还有


6
00:00:30,631 --> 00:00:33,500 line:-2
来自Safari WebKit团队的
Wenson Hsieh和Beth Dakin


7
00:00:35,202 --> 00:00:38,839 line:-2
我们将与大家分享桌面级浏览
对此我们感到万分激动


8
00:00:39,473 --> 00:00:43,710 line:-2
它是iPad上网络平台的一个
重大的新改进


9
00:00:45,145 --> 00:00:46,680 line:-1
正如你在主旨演讲中所听到的那样


10
00:00:46,747 --> 00:00:50,450 line:-2
iPadOS上的Safari
现在是一个桌面级的浏览器了


11
00:00:51,585 --> 00:00:52,686 line:-1
那意味着什么呢？


12
00:00:53,921 --> 00:00:56,256 line:-2
这意味着你可以在Safari中
实现更多功能


13
00:00:56,757 --> 00:00:58,358 line:-1
现在你可以使用Safari


14
00:00:58,425 --> 00:01:01,395 line:-2
实现你希望在网页上
实现的一切伟大的功能


15
00:01:03,096 --> 00:01:04,965 line:-1
Safari是新的下载管理器


16
00:01:05,265 --> 00:01:08,202 line:-1
因此你可以下载和上传文件…


17
00:01:09,102 --> 00:01:13,106 line:-2
同时还可以使用其它标签
甚至是其它app


18
00:01:14,575 --> 00:01:17,611 line:-1
Safari还有新控件 全页缩放


19
00:01:18,412 --> 00:01:21,181 line:-2
当你需要更多工作空间时
隐藏工具栏


20
00:01:21,815 --> 00:01:25,886 line:-2
以及根据不同网站设置不同偏好
为工作流程量身定制Safari


21
00:01:27,454 --> 00:01:30,891 line:-2
并且现在Safari可以使用
桌面浏览器上


22
00:01:31,258 --> 00:01:33,527 line:-1
所能使用的全部的键盘捷径了


23
00:01:33,827 --> 00:01:37,798 line:-2
从而让工作速度更快
并帮助你专注于你所做的工作


24
00:01:39,299 --> 00:01:40,234 line:-1
但一切的关键是…


25
00:01:41,168 --> 00:01:42,736 line:-1
浏览桌面网站


26
00:01:47,975 --> 00:01:50,844 line:-1
我们长期以来一直在做网页浏览器


27
00:01:52,112 --> 00:01:54,348 line:-1
当生产出第一台iPhone时


28
00:01:54,948 --> 00:01:57,985 line:-2
所有网站看起来都很大
那是为了鼠标输入而打造的


29
00:01:59,620 --> 00:02:02,689 line:-2
这些网站在iPhone上看起来
超出了边界…


30
00:02:03,457 --> 00:02:05,359 line:-1
如果不对它们进行修改的话…


31
00:02:05,826 --> 00:02:08,662 line:-1
让它们适应小屏幕以及多点触控操作


32
00:02:09,997 --> 00:02:13,901 line:-2
iPhone应该调整网站
使其适应文本尺寸


33
00:02:13,967 --> 00:02:15,035 line:-1
从而可以让你阅读


34
00:02:16,203 --> 00:02:19,173 line:-1
接着你们有了新的网络API


35
00:02:19,239 --> 00:02:23,343 line:-2
让你们的网站
最大化地利用iPhone的性能


36
00:02:24,578 --> 00:02:27,014 line:-1
而结果非常了不起


37
00:02:29,349 --> 00:02:31,585 line:-1
你们中有一些人用过响应式设计技术


38
00:02:31,652 --> 00:02:35,355 line:-2
从而让网站灵活地适应
任意尺寸的显示屏


39
00:02:35,923 --> 00:02:38,992 line:-2
如今那些网站
在iPad上看起来很不错


40
00:02:41,094 --> 00:02:43,030 line:-1
但也很常见


41
00:02:43,430 --> 00:02:45,732 line:-1
因为网站有两个不同的版本


42
00:02:46,567 --> 00:02:49,403 line:-2
一个是适应大显示屏的
一个是适应小显示屏的


43
00:02:51,538 --> 00:02:53,307 line:-1
iPad使用了移动用户代理


44
00:02:53,607 --> 00:02:55,576 line:-1
意思是它会使用小显示屏版的网站


45
00:02:56,910 --> 00:02:59,379 line:-1
因此在iPadOS中有个新功能


46
00:03:00,180 --> 00:03:03,650 line:-2
对于网站来说
iPad就是一台Mac


47
00:03:05,953 --> 00:03:08,188 line:-1
这并不仅仅是用户代理的变更


48
00:03:08,622 --> 00:03:13,327 line:-2
还是WebKit的一系列
深层次的根本性变更


49
00:03:13,694 --> 00:03:16,029 line:-1
那会打造一种了不起的新体验


50
00:03:16,897 --> 00:03:18,665 line:-1
让我们具体来看一下其中两个变更


51
00:03:20,200 --> 00:03:21,602 line:-1
有些电脑版网站


52
00:03:21,668 --> 00:03:25,138 line:-1
目的是在大屏幕上显示大量信息


53
00:03:26,673 --> 00:03:29,042 line:-1
这些网站在大iPad上是放大的


54
00:03:29,309 --> 00:03:32,112 line:-2
并且你不能看到
与电脑版浏览器同样多的信息


55
00:03:32,913 --> 00:03:35,549 line:-1
WebKit使用了视窗来展示网站


56
00:03:35,616 --> 00:03:37,751 line:-1
对于每种iPad尺寸都一样


57
00:03:38,285 --> 00:03:41,522 line:-2
从iPad Mini
一直到最大的iPad Pro


58
00:03:43,357 --> 00:03:49,396 line:-2
那么在iPadOS中有个新功能
视窗将可以匹配iPad屏幕尺寸


59
00:03:50,531 --> 00:03:53,667 line:-2
现在网站可以在较大的iPad上
使用全部空间


60
00:03:54,601 --> 00:03:58,038 line:-2
对于较小的iPad
我们将调整网站使其适应


61
00:03:58,605 --> 00:04:01,208 line:-1
屏幕上的一切并调整文本大小


62
00:04:01,542 --> 00:04:04,244 line:-2
使阅读变得更舒适
就跟iPhone一样


63
00:04:05,445 --> 00:04:07,714 line:-1
你可以一眼就看到更多网站内容


64
00:04:08,348 --> 00:04:11,785 line:-1
就跟台式电脑一样 用起来更简便了


65
00:04:13,820 --> 00:04:16,757 line:-2
有些电脑版网站
是为鼠标输入而设计的


66
00:04:17,891 --> 00:04:19,226 line:-1
在iOS 13中有个新功能


67
00:04:20,027 --> 00:04:23,764 line:-2
iPad优化了触摸输入
对鼠标输入的适应性


68
00:04:24,231 --> 00:04:28,936 line:-2
因此类似这种使用鼠标悬停的网站
现在立即就可以使用了


69
00:04:31,171 --> 00:04:35,876 line:-2
对于想要完全控制的网页app
现在可以使用指针事件了


70
00:04:37,211 --> 00:04:41,982 line:-1
这只是你可以在网页app中利用的


71
00:04:42,349 --> 00:04:48,055 line:-2
iPadOS中众多新网络API
和功能之中的一点


72
00:04:49,056 --> 00:04:51,792 line:-2
稍后Beth将会
与大家分享更多功能


73
00:04:53,727 --> 00:04:56,630 line:-1
这些都将打造一种你在iPad上


74
00:04:56,964 --> 00:04:58,699 line:-1
所期待拥有的强大的浏览体验


75
00:04:59,233 --> 00:05:03,437 line:-2
那么这就是iPadOS中的
桌面级浏览


76
00:05:05,138 --> 00:05:06,206 line:-1
现在…


77
00:05:09,276 --> 00:05:12,913 line:-1
现在我们想分享app和网站如何


78
00:05:12,980 --> 00:05:15,883 line:-1
最大限度地利用这些新功能


79
00:05:16,683 --> 00:05:18,085 line:-1
对于app开发人员


80
00:05:18,151 --> 00:05:21,655 line:-2
我们将分享如何在app中
使用桌面级浏览


81
00:05:22,589 --> 00:05:23,957 line:-1
对于网页开发人员


82
00:05:24,024 --> 00:05:27,561 line:-2
我们将分享如何让你的网站
在iPad上更好地工作


83
00:05:28,929 --> 00:05:30,430 line:-1
让我们从app开始讲


84
00:05:33,934 --> 00:05:36,770 line:-1
app使用网页浏览有四种常见方式


85
00:05:37,671 --> 00:05:40,807 line:-2
根据链接浏览网页内容
在app内浏览


86
00:05:41,675 --> 00:05:42,676 line:-1
网页浏览器


87
00:05:42,976 --> 00:05:45,312 line:-1
在这里浏览是app的主要重点


88
00:05:46,079 --> 00:05:50,150 line:-2
混合型app 在这里网络技术
是app的用户界面的一部分


89
00:05:50,984 --> 00:05:54,087 line:-2
并通过第三方服务
使用OAuth对用户进行验证


90
00:05:55,322 --> 00:05:56,857 line:-1
首先 链接引导


91
00:05:58,959 --> 00:06:01,695 line:-2
打开链接并停留在
app内的最佳方式


92
00:06:02,062 --> 00:06:03,697 line:-1
是使用Safari视图控制器


93
00:06:04,565 --> 00:06:07,534 line:-2
跟Safari一样
Safari视图控制器功能很棒


94
00:06:07,835 --> 00:06:10,137 line:-1
包括自动填充和阅读器


95
00:06:10,971 --> 00:06:13,941 line:-2
因此我很高兴地宣布
若你正使用Safari视图控制器


96
00:06:14,441 --> 00:06:16,610 line:-1
那么你将免费获得桌面级浏览体验


97
00:06:17,477 --> 00:06:18,779 line:-1
你不需要做任何事


98
00:06:20,147 --> 00:06:22,015 line:-2
Safari和
Safari视图控制器


99
00:06:22,082 --> 00:06:23,750 line:-1
将自动选择一种浏览模式


100
00:06:24,117 --> 00:06:26,587 line:-1
根据你的情况提供一种最佳体验


101
00:06:27,688 --> 00:06:28,755 line:-1
让我来解释一下


102
00:06:30,123 --> 00:06:33,627 line:-1
iPad是浏览因特网的完美设备


103
00:06:34,161 --> 00:06:36,063 line:-1
就像把网页握在手心里的感觉


104
00:06:36,697 --> 00:06:40,434 line:-2
根据你正在做的事情
可以用多种不同方式使用iPad


105
00:06:42,503 --> 00:06:46,406 line:-2
比如有些电脑版网站
在iPad Mini上看起来很小


106
00:06:47,641 --> 00:06:50,711 line:-2
但在移动浏览体验中
拥有更加舒适的阅读体验


107
00:06:52,412 --> 00:06:55,482 line:-1
当你在较窄的分屏浏览


108
00:06:55,749 --> 00:06:57,985 line:-1
或侧拉中浏览电脑版网站时也一样


109
00:06:59,753 --> 00:07:04,758 line:-2
在这些窄窗口的情况中
iPad Mini移动浏览较好


110
00:07:06,260 --> 00:07:08,929 line:-2
Safari和
Safari视图控制器将自动选择


111
00:07:08,996 --> 00:07:11,231 line:-1
一种浏览模式 为你提供最佳体验


112
00:07:14,768 --> 00:07:17,137 line:-1
Safari视图控制器将为你处理


113
00:07:17,204 --> 00:07:18,505 line:-2
在你的app内打开链接
所需要处理的一切事物


114
00:07:19,439 --> 00:07:20,974 line:-2
如果你的app是一个网页浏览器
会怎么样呢？


115
00:07:21,708 --> 00:07:22,709 line:-1
你需要做这些


116
00:07:23,577 --> 00:07:28,849 line:-2
首先通过iOS 13 SDK
创建app转换成桌面级浏览


117
00:07:29,683 --> 00:07:32,486 line:-1
然后看看如何设置用户代理


118
00:07:33,720 --> 00:07:35,789 line:-1
如果使用自定义用户代理属性


119
00:07:36,156 --> 00:07:39,960 line:-2
我们推荐使
用WKWebView配置


120
00:07:40,360 --> 00:07:42,462 line:-1
applicationNameForUserAgent属性


121
00:07:43,363 --> 00:07:44,998 line:-1
当你提供app名称时


122
00:07:45,265 --> 00:07:48,569 line:-2
WebKit将为你填充
用户代理的其余信息


123
00:07:51,405 --> 00:07:55,742 line:-2
WKWebView也是一个新
WKWebpagePreferences API


124
00:07:56,143 --> 00:07:58,412 line:-1
用于设置优选内容浏览模式


125
00:07:59,680 --> 00:08:02,115 line:-1
共有三种模式：推荐模式


126
00:08:02,616 --> 00:08:05,986 line:-2
与Safari的功能一样、
移动模式以及电脑模式


127
00:08:06,887 --> 00:08:10,657 line:-2
在绝大多数情况中都可以使用
Safari推荐模式


128
00:08:12,659 --> 00:08:17,097 line:-2
你的网页浏览器也希望让用户
在移动和电脑模式中切换


129
00:08:17,164 --> 00:08:20,501 line:-1
或根据不同网站设置不同偏好


130
00:08:22,402 --> 00:08:26,740 line:-2
对于这些情况 WebKit有个新
WKNavigationDelegate API


131
00:08:27,774 --> 00:08:31,245 line:-1
在导航时指定一种优选内容模式


132
00:08:35,349 --> 00:08:38,485 line:-2
Wenson稍后会做一个演示
可以让你们了解这些新API


133
00:08:40,320 --> 00:08:41,621 line:-1
除了网页浏览器


134
00:08:41,989 --> 00:08:45,592 line:-2
还可以使用网络技术
创建app的部分内容


135
00:08:45,659 --> 00:08:46,727 line:-1
或用户界面


136
00:08:48,128 --> 00:08:50,197 line:-2
如果你的app以这种方式
使用WKWebView


137
00:08:50,864 --> 00:08:54,334 line:-2
通过iOS 13 SDK
创建app 从而开启桌面级浏览


138
00:08:55,435 --> 00:08:58,105 line:-2
然后测试app
对WKWebView的使用


139
00:08:59,439 --> 00:09:00,674 line:-1
在绝大多数情况中 你已经完成了


140
00:09:01,642 --> 00:09:04,311 line:-2
但还有一些罕见情况
你需要退出视窗尺寸


141
00:09:04,578 --> 00:09:06,847 line:-1
你可以把优选内容模式设置为移动版


142
00:09:08,448 --> 00:09:10,417 line:-1
总的来说非常简单


143
00:09:10,951 --> 00:09:12,920 line:-2
WKWebView
会替你做绝大部分工作


144
00:09:18,091 --> 00:09:19,126 line:-1
最后…


145
00:09:19,793 --> 00:09:23,230 line:-1
哎呦 最后 网页浏览


146
00:09:23,497 --> 00:09:25,499 line:-2
通过第三方服务使用
OAuth验证用户


147
00:09:26,400 --> 00:09:28,936 line:-2
如果你正在这样做
ASWebAuthenticationSession


148
00:09:29,303 --> 00:09:30,771 line:-1
是一种最佳的验证方式


149
00:09:31,972 --> 00:09:35,042 line:-2
在iPadOS中有个新功能
ASWebAuthenticationSession


150
00:09:35,309 --> 00:09:37,344 line:-1
在iPad上呈现一个格式表


151
00:09:37,678 --> 00:09:39,446 line:-1
显示验证界面


152
00:09:39,513 --> 00:09:41,481 line:-1
同时仍会停留在app的情境中


153
00:09:42,349 --> 00:09:43,684 line:-1
考虑到这个新呈现


154
00:09:44,351 --> 00:09:47,721 line:-2
ASWebAuthenticationSession
使用移动内容模式加载网站


155
00:09:48,222 --> 00:09:49,556 line:-1
与Safari视图控制器一样


156
00:09:49,857 --> 00:09:52,426 line:-2
如果你使用这个API
你不需要做任何工作


157
00:09:54,094 --> 00:09:58,465 line:-2
总的来说 Safari视图控制器
和ASWebAuthenticationSession


158
00:09:58,532 --> 00:09:59,933 line:-1
将替你做大部分繁冗的工作


159
00:10:01,168 --> 00:10:04,438 line:-2
并且如果使用WKWebView
你将获得你所需要的全部工具


160
00:10:05,706 --> 00:10:07,708 line:-1
现在我想邀请Wenson上台来


161
00:10:07,774 --> 00:10:09,843 line:0
给大家做一个演示


162
00:10:10,110 --> 00:10:11,144 line:0
Wenson


163
00:10:20,787 --> 00:10:21,955 line:-1
谢谢Charles


164
00:10:23,056 --> 00:10:25,492 line:-2
那么我的工作是开发网页浏览器
当我不忙时


165
00:10:26,126 --> 00:10:28,328 line:-1
我有时喜欢转移注意力


166
00:10:29,029 --> 00:10:30,564 line:-1
写更多的网页浏览器


167
00:10:31,298 --> 00:10:34,368 line:-2
那么今天我要介绍
Shiny Browser


168
00:10:36,303 --> 00:10:38,805 line:-2
它是我写的一个
基于WKWebView的浏览器


169
00:10:39,072 --> 00:10:40,841 line:-1
它在Google Docs上


170
00:10:41,975 --> 00:10:44,545 line:-1
那么有时我需要


171
00:10:44,611 --> 00:10:45,746 line:-2
通过Google Docs
与朋友们合作


172
00:10:46,380 --> 00:10:49,082 line:-1
为此我希望能使用我的浏览器


173
00:10:49,783 --> 00:10:52,886 line:-2
但正如你在这里所看到的
它只是告诉我要下载app


174
00:10:53,720 --> 00:10:57,157 line:-1
我打赌如果我请求这个网站的桌面版


175
00:10:57,558 --> 00:10:58,992 line:-1
它会为我提供全部功能


176
00:10:59,526 --> 00:11:01,828 line:-2
因为我刚刚从
Charles那儿了解到


177
00:11:02,296 --> 00:11:06,233 line:-2
iOS 13中的
WKWebView


178
00:11:06,300 --> 00:11:08,602 line:-2
在我的iPad Pro上
应该默认请求电脑版


179
00:11:08,936 --> 00:11:12,840 line:-2
因此我要根据iOS 13 SDK
重新编译我的浏览器


180
00:11:13,473 --> 00:11:15,342 line:-1
那应该为我提供电脑版网站


181
00:11:15,809 --> 00:11:17,711 line:-1
那么我要切换到Xcode


182
00:11:18,478 --> 00:11:20,581 line:-2
我只需要点击运行
Command-R


183
00:11:20,647 --> 00:11:24,818 line:-2
那会编译我的app
然后我们将会看到电脑版网站


184
00:11:26,987 --> 00:11:28,222 line:-1
好的 很好


185
00:11:28,288 --> 00:11:30,557 line:-1
很遗憾 我们仍然是移动版


186
00:11:31,291 --> 00:11:33,260 line:-2
让我看看我们是否可以
一起尝试调试一下


187
00:11:33,660 --> 00:11:35,362 line:-1
现在让我们退一步


188
00:11:35,596 --> 00:11:37,931 line:-2
Google Docs
认为我是个移动浏览器


189
00:11:38,298 --> 00:11:42,035 line:-2
很可能是使用了用户代理字符串
做出了那个决策


190
00:11:43,303 --> 00:11:46,340 line:-2
我要做的就是使用网页检测器
连接网页浏览


191
00:11:46,740 --> 00:11:48,675 line:-1
并打印出用户代理字符串


192
00:11:49,576 --> 00:11:51,745 line:-1
也许那会暗示我哪里出错了


193
00:11:52,679 --> 00:11:54,248 line:-1
那么现在我要…


194
00:11:55,282 --> 00:11:57,951 line:-1
启动Safari 进入开发菜单…


195
00:11:58,452 --> 00:11:59,753 line:-2
并在这里嵌入
Shiny Browser


196
00:12:01,555 --> 00:12:03,590 line:0
我要切换到控制台标签


197
00:12:04,157 --> 00:12:07,961 line:0
我只需键入navigator.userAgent
并按回车即可


198
00:12:09,229 --> 00:12:10,898 line:0
让我们具体看看这个用户代理


199
00:12:12,099 --> 00:12:14,468 line:0
在这里我想指出一些很有意思的事


200
00:12:15,102 --> 00:12:17,804 line:0
首先iPad这个词出现在了
用户代理字符串中


201
00:12:18,071 --> 00:12:20,140 line:0
那么很明显它不是电脑版


202
00:12:20,941 --> 00:12:24,244 line:0
但更重要的是
这个是Version/1.0 ShinyBrowser/1.0


203
00:12:24,311 --> 00:12:25,379 line:0
似乎有点不可思议


204
00:12:25,779 --> 00:12:27,014 line:0
它是从哪儿来的？


205
00:12:28,148 --> 00:12:29,917 line:0
嗯 我自己也想知道


206
00:12:29,983 --> 00:12:33,720 line:0
因此我要在
复制并粘贴到Xcode的搜索字段


207
00:12:34,121 --> 00:12:36,456 line:-2
因此我要使用Command-F
来发现和粘贴


208
00:12:38,458 --> 00:12:40,127 line:-1
好的 事实证明


209
00:12:40,527 --> 00:12:43,430 line:-1
有代码覆盖了整个用户代理字符串


210
00:12:43,764 --> 00:12:46,667 line:-2
使用了WKWebView的
自定义用户代理属性


211
00:12:47,968 --> 00:12:50,604 line:-2
我肯定是在某个点上从因特网中
复制并粘贴了这个信息


212
00:12:50,671 --> 00:12:52,172 line:-1
然后就忘记了


213
00:12:52,906 --> 00:12:54,808 line:-1
也许在当时是一个合理的方案


214
00:12:55,309 --> 00:12:59,346 line:-2
但我刚从Charles那儿了解到
一个可替换的方案


215
00:12:59,913 --> 00:13:02,082 line:-2
我还可以在
WKWebView配置上


216
00:13:02,149 --> 00:13:04,952 line:-1
使用app名称作为用户代理属性


217
00:13:05,352 --> 00:13:08,121 line:-1
那么让我来修改一下


218
00:13:08,922 --> 00:13:11,859 line:-2
我要做的第一件事是
移除这个自定义用户代理代码


219
00:13:12,526 --> 00:13:14,494 line:-1
然后向上来到创建网页浏览的地方


220
00:13:15,495 --> 00:13:16,930 line:-1
那么在这里我要…


221
00:13:18,832 --> 00:13:21,201 line:-1
首先创建WKWebView配置


222
00:13:21,735 --> 00:13:23,837 line:-1
然后为用户代理设置app名称…


223
00:13:24,304 --> 00:13:26,740 line:-2
无论什么都可以
Version/1.0 ShinyBrowser/1.0


224
00:13:27,241 --> 00:13:30,444 line:-2
最后我要使用这个配置
创建我的网页浏览


225
00:13:31,011 --> 00:13:32,279 line:-1
这是一个很小的调整


226
00:13:33,080 --> 00:13:36,049 line:-2
我要重新编译我的app
并查看我这次得到了什么


227
00:13:39,453 --> 00:13:42,289 line:-2
好的 如你所见 我们现有
完整版的Google Docs


228
00:13:42,356 --> 00:13:45,459 line:-1
并且我终于可以与朋友们合作了


229
00:13:46,059 --> 00:13:47,127 line:-1
非常简单


230
00:13:47,427 --> 00:13:48,962 line:-1
但现在让我们更进一步


231
00:13:49,763 --> 00:13:52,432 line:-2
有一段时间我的用户们
曾请求的一个功能是


232
00:13:52,833 --> 00:13:55,302 line:-1
能在电脑版


233
00:13:55,369 --> 00:13:56,970 line:-1
和移动版之前切换网页


234
00:13:57,738 --> 00:13:59,806 line:-1
通过iOS 13中的新API


235
00:14:00,207 --> 00:14:03,177 line:-2
现在实施起来很简单了
那么让我来告诉你该如何做


236
00:14:04,077 --> 00:14:07,214 line:-1
首先请注意右上角这个按钮


237
00:14:07,614 --> 00:14:10,951 line:-2
包含一些附加选项
比如添加到收藏夹和分享


238
00:14:11,685 --> 00:14:14,488 line:-1
我要做的就是添加一个第三选项


239
00:14:14,888 --> 00:14:17,491 line:-1
允许用户变更内容模式


240
00:14:18,091 --> 00:14:20,360 line:-1
要么就是请求移动版网站


241
00:14:20,627 --> 00:14:22,296 line:-1
要么就是请求电脑版网站


242
00:14:23,630 --> 00:14:27,100 line:-1
好的 让我们进入Xcode并实施


243
00:14:28,268 --> 00:14:29,303 line:-1
我要在这里…


244
00:14:30,037 --> 00:14:34,308 line:-2
添加这个帮助功能 它会呈现一个
UIAlertActions列表


245
00:14:34,975 --> 00:14:38,111 line:-2
目前 正如你所看到的
我已拥有添加到收藏夹和分享功能


246
00:14:38,779 --> 00:14:40,547 line:-1
我要做的就是在这里添加第三个操作


247
00:14:40,814 --> 00:14:43,550 line:-2
但在此之前
我要做一个新的帮助功能


248
00:14:44,818 --> 00:14:46,753 line:-2
它会帮助我创建
UIAlertAction


249
00:14:47,154 --> 00:14:48,789 line:-1
当然了 我只会在这里使用它


250
00:14:50,524 --> 00:14:52,359 line:-1
好的 那将会让我获得我的操作


251
00:14:52,793 --> 00:14:54,294 line:-1
现在我想让你们关注一下


252
00:14:54,528 --> 00:14:56,997 line:-1
这个currentContentMode实体变量


253
00:14:57,497 --> 00:14:58,765 line:-1
我要在这里做什么？


254
00:14:58,832 --> 00:15:01,735 line:-2
嗯 我要检查当前内容模式
是否等于电脑版


255
00:15:02,236 --> 00:15:03,837 line:-1
并且如果它等于电脑版


256
00:15:03,904 --> 00:15:07,941 line:-2
我希望字符串是“请求移动版网站”
反过来也一样


257
00:15:09,543 --> 00:15:12,779 line:-1
好的 那应该解决了 但问题是


258
00:15:12,846 --> 00:15:15,182 line:-2
“我们如何持续追踪
currentContentMode？”


259
00:15:15,249 --> 00:15:16,650 line:-1
我们如何了解它是什么模式？


260
00:15:17,050 --> 00:15:19,419 line:-1
嗯 我要向下滚动到这里


261
00:15:19,486 --> 00:15:22,389 line:-2
我在这里实施了我的
WKNavigation委托


262
00:15:22,823 --> 00:15:25,058 line:-1
叫做didCommit导航方法


263
00:15:25,659 --> 00:15:29,730 line:-2
我要在这里做的就是
使用iOS 13中的一个新API


264
00:15:30,464 --> 00:15:32,699 line:-2
那么在iOS 13中
WKNavigation


265
00:15:33,000 --> 00:15:35,502 line:-2
拥有一个叫做
effectiveContentMode的新属性


266
00:15:36,069 --> 00:15:38,672 line:-2
永远只有两个选项
移动版或电脑版


267
00:15:39,039 --> 00:15:40,507 line:-1
这对于我的用例来说非常完美


268
00:15:41,308 --> 00:15:43,310 line:-2
我能做的就是设置
currentContentMode


269
00:15:43,577 --> 00:15:46,813 line:-2
使其等于导航的有效内容模式
当我提交导航时


270
00:15:47,281 --> 00:15:50,517 line:-2
那应该会帮助我持续追踪
当前正在加载的内容


271
00:15:51,518 --> 00:15:53,420 line:-1
那么现在我应该显示了正确的字符串


272
00:15:54,588 --> 00:15:57,024 line:-2
但我希望你们关注一下
这个操作处理器


273
00:15:58,158 --> 00:15:59,226 line:-1
我们仍然需要一种方式来表述


274
00:15:59,493 --> 00:16:02,763 line:-2
“让我们针对指定主机名称
优先加载移动版或电脑版内容”


275
00:16:03,497 --> 00:16:06,633 line:-1
为此我们把主机名称词典


276
00:16:06,900 --> 00:16:09,670 line:-1
保存到内容模式中


277
00:16:10,170 --> 00:16:13,440 line:-2
要么是移动版 要么是电脑版
而无论用户正在触碰什么


278
00:16:14,808 --> 00:16:16,977 line:-1
我现在要实施操作可处理器


279
00:16:18,045 --> 00:16:20,814 line:-1
我要做的只是获取主机名称


280
00:16:21,481 --> 00:16:24,184 line:-2
并把它设置到移动版
或电脑版的词典中


281
00:16:24,885 --> 00:16:26,553 line:-1
然后我要告诉网页浏览器重新加载


282
00:16:27,421 --> 00:16:31,491 line:-2
好的 这就是
contentModeToRequestForHost词典


283
00:16:31,892 --> 00:16:33,694 line:-1
当然 我们还要在其它地方使用它


284
00:16:34,127 --> 00:16:36,930 line:-1
因此我要向下滚动回到我的导航委托


285
00:16:37,731 --> 00:16:39,266 line:-1
我要添加一个新方法


286
00:16:40,300 --> 00:16:43,670 line:-2
我要实施
为navigationAction确定决策


287
00:16:44,404 --> 00:16:47,574 line:-1
这与你可能熟悉的版本非常相似


288
00:16:48,041 --> 00:16:52,279 line:-2
除了在iOS 13中这个版本
包含网页优选作为参数


289
00:16:52,646 --> 00:16:53,847 line:-1
就是这个优选


290
00:16:54,248 --> 00:16:56,083 line:-1
那么对于这些优选我能做的就是


291
00:16:56,416 --> 00:16:59,086 line:-1
把优选内容模式设置为


292
00:16:59,152 --> 00:17:01,221 line:-1
我从词典中所查询到的内容模式


293
00:17:01,555 --> 00:17:02,623 line:-1
仅仅作为刷新工具


294
00:17:03,056 --> 00:17:05,025 line:-2
这个contentModeToRequestForHost
词典


295
00:17:05,392 --> 00:17:08,362 line:-1
与我刚刚在操作处理器中


296
00:17:09,396 --> 00:17:10,364 line:-1
所填充的那个一样


297
00:17:11,231 --> 00:17:13,834 line:-1
好的 最后但并不是最不重要的


298
00:17:13,901 --> 00:17:16,603 line:-2
我们要记得调用有这些新优选选项的
decisionHandler


299
00:17:16,670 --> 00:17:19,406 line:-1
然后就完成了


300
00:17:19,473 --> 00:17:21,308 line:-1
那么我要重新编译我的app


301
00:17:21,875 --> 00:17:23,810 line:-1
让我们看看我们的功能怎么样


302
00:17:25,679 --> 00:17:27,214 line:-1
这次我也要进行切换


303
00:17:27,481 --> 00:17:30,450 line:-2
这次我不进Google Docs
让我们进入一个图库


304
00:17:31,785 --> 00:17:34,354 line:-1
这是Shiny Pics的电脑版


305
00:17:35,255 --> 00:17:38,358 line:-1
我要做的是使用附加菜单


306
00:17:38,926 --> 00:17:40,527 line:-1
请求移动版网站


307
00:17:42,696 --> 00:17:44,998 line:-1
移动版网站看起来是这样的


308
00:17:45,399 --> 00:17:46,867 line:-1
Shiny Pics的移动版


309
00:17:47,668 --> 00:17:50,871 line:-2
我的意思是我可以指出
它是网站的移动版


310
00:17:50,938 --> 00:17:53,874 line:-2
因为它看起来真的很像是针对手机
进行了优化的页面


311
00:17:54,341 --> 00:17:56,343 line:-2
而并没有针对iPad Pro
做这么多优化


312
00:17:56,743 --> 00:17:58,078 line:-1
我认为在iPad Pro上


313
00:17:58,145 --> 00:18:00,581 line:-2
我实际上倾向于使用
Shiny Pics的电脑版


314
00:18:01,048 --> 00:18:03,450 line:-2
因此我只需要轻触
请求电脑版网站即可


315
00:18:03,851 --> 00:18:06,520 line:-2
然后我就会返回到
Shiny Pics的电脑版


316
00:18:07,187 --> 00:18:09,122 line:-1
好的 总的来说


317
00:18:09,189 --> 00:18:11,758 line:-2
我首先确保我的浏览器可以加载
电脑版内容


318
00:18:12,292 --> 00:18:13,894 line:-1
然后我使用了新API


319
00:18:14,127 --> 00:18:17,431 line:-1
来实施请求移动版或电脑版网站功能


320
00:18:18,065 --> 00:18:20,734 line:-1
但目前我们仅向


321
00:18:21,034 --> 00:18:22,703 line:-1
app开发人员展示了一些新工具


322
00:18:23,470 --> 00:18:26,507 line:-2
当然 对于网页开发人员来说
也有新功能


323
00:18:27,007 --> 00:18:30,644 line:-1
为此我要邀请Beth上台来


324
00:18:36,049 --> 00:18:37,317 line:-1
谢谢Wenson


325
00:18:37,985 --> 00:18:39,019 line:-1
非常棒


326
00:18:40,320 --> 00:18:43,790 line:-2
那么这些对于网页开发人员来说
意味着什么？


327
00:18:44,358 --> 00:18:48,562 line:-2
如果你有一个响应式网站
看起来很可能一样


328
00:18:48,629 --> 00:18:51,098 line:-1
但我们的确有一些新工具可以用于


329
00:18:51,265 --> 00:18:53,800 line:-1
维护并改善你的响应式网站


330
00:18:54,868 --> 00:18:59,173 line:-2
我还要分享一些关于
iPad上网页开发的最佳范例


331
00:18:59,239 --> 00:19:01,708 line:-1
因此无论你的网站是当前响应式网站


332
00:19:01,775 --> 00:19:04,912 line:-1
或是针对台式电脑设计的大屏幕网站


333
00:19:04,978 --> 00:19:07,881 line:-2
你都可以使它在iPad上
拥有非常棒的体验


334
00:19:09,516 --> 00:19:11,885 line:-1
我要讨论六个新功能


335
00:19:12,352 --> 00:19:14,321 line:-1
其中有些是纯开发功能


336
00:19:14,388 --> 00:19:15,522 line:-1
比如指针事件


337
00:19:15,589 --> 00:19:17,824 line:-1
而有些更像是新终端用户功能


338
00:19:17,891 --> 00:19:21,094 line:-1
但拥有开发暗示 比如加快滚动


339
00:19:22,229 --> 00:19:23,764 line:-1
让我们从指针事件开始讲


340
00:19:24,898 --> 00:19:27,868 line:-2
在iPad上加载电脑版内容的
其中一个大问题


341
00:19:27,935 --> 00:19:31,638 line:-1
就是调解鼠标和触摸输入


342
00:19:32,840 --> 00:19:36,176 line:-2
有时候网站是写定的
因此小屏幕版本


343
00:19:36,243 --> 00:19:37,878 line:-1
只使用触摸事件


344
00:19:37,945 --> 00:19:40,581 line:-1
而大屏幕版本只使用鼠标事件


345
00:19:41,114 --> 00:19:44,017 line:-1
我们的目标是在iPad上


346
00:19:44,084 --> 00:19:46,353 line:-1
尽可能地保持网站仅使用鼠标事件


347
00:19:46,420 --> 00:19:48,355 line:-1
当然即使没有鼠标


348
00:19:48,889 --> 00:19:50,190 line:-1
那么当用户轻触时


349
00:19:50,624 --> 00:19:52,726 line:-2
WebKit将发送
按下鼠标、松开鼠标


350
00:19:52,793 --> 00:19:55,195 line:-1
和点击事件 就跟以往一样


351
00:19:55,796 --> 00:19:58,165 line:-1
那时也会发送鼠标悬停事件


352
00:19:58,232 --> 00:20:00,000 line:-1
稍后我会具体讲一下


353
00:20:01,368 --> 00:20:04,471 line:-2
然而鼠标移动实际上
对于iPad来说毫无意义


354
00:20:04,538 --> 00:20:07,508 line:-2
最接近的类似情况是
在屏幕上移动你的手指


355
00:20:07,574 --> 00:20:09,076 line:-1
但这是你的滚动方式


356
00:20:09,376 --> 00:20:13,113 line:-2
因此我们的确尝试了
在发送触摸移动的同时


357
00:20:13,180 --> 00:20:14,348 line:-1
发送鼠标移动事件


358
00:20:14,414 --> 00:20:17,217 line:-1
但实际上导致了更多的问题


359
00:20:17,484 --> 00:20:18,952 line:-1
因此我们决定不这样做


360
00:20:19,019 --> 00:20:20,420 line:-1
它和滚动相冲突


361
00:20:21,121 --> 00:20:23,657 line:-1
如果你需要诸如鼠标移动这样的事件


362
00:20:23,724 --> 00:20:26,260 line:-2
那么我们有一个很棒的方案
就是指针事件


363
00:20:27,528 --> 00:20:32,432 line:-2
我们在iOS 13和macOS Catalina中的
WebKit中添加了对指针事件的支持


364
00:20:32,866 --> 00:20:35,502 line:-1
它是一个网页标准


365
00:20:35,569 --> 00:20:38,138 line:-2
提供用户输入和你的网站之间的
一个抽象层


366
00:20:38,205 --> 00:20:41,575 line:-2
因此可以用同一个API
处理鼠标输入、


367
00:20:41,875 --> 00:20:43,443 line:-1
触摸输入或手写输入


368
00:20:45,179 --> 00:20:46,680 line:-1
指针事件的使用很简单


369
00:20:47,080 --> 00:20:49,116 line:-2
如果你的现有代码
支持电脑版的鼠标事件


370
00:20:49,183 --> 00:20:50,951 line:-1
就像这样


371
00:20:51,418 --> 00:20:53,820 line:-1
让代码支持指针事件很相似


372
00:20:54,621 --> 00:20:55,989 line:-1
只有事件名称不一样


373
00:20:56,356 --> 00:20:59,893 line:-2
但让我们把情境扩展一下
让我演示一下我具体是如何使用它的


374
00:21:00,794 --> 00:21:02,563 line:-1
我实际上使用特征检测


375
00:21:02,629 --> 00:21:04,631 line:-1
来决定是否支持指针事件


376
00:21:05,065 --> 00:21:08,669 line:-2
我将保留鼠标事件监测器
以便适应老年客户们


377
00:21:08,735 --> 00:21:10,637 line:-1
只有当指针事件不可用时


378
00:21:11,772 --> 00:21:14,775 line:-2
PointerEvent对象
实际上继承自鼠标事件


379
00:21:14,842 --> 00:21:16,710 line:-2
因此我基本不需要修改关于
updateInteraction函数的任何东西


380
00:21:16,777 --> 00:21:19,546 line:-1
直接就能用


381
00:21:19,880 --> 00:21:23,383 line:-2
除非我想利用
PointerEvent上的附加参数


382
00:21:23,450 --> 00:21:26,954 line:-1
指定鼠标或手写输入 那非常庞大


383
00:21:27,020 --> 00:21:29,656 line:-1
采用指针事件就是如此简单


384
00:21:31,825 --> 00:21:34,294 line:-2
指针事件
可以与鼠标事件和触摸事件并存


385
00:21:34,661 --> 00:21:36,897 line:-1
但请注意当混合事件输入时


386
00:21:36,964 --> 00:21:39,333 line:-1
将映像到同一个用户操作 比如这个


387
00:21:39,967 --> 00:21:41,001 line:-1
没有else子句


388
00:21:41,068 --> 00:21:42,936 line:-1
因此会注册全部两个事件


389
00:21:43,203 --> 00:21:46,707 line:-2
并且我的函数将被调用两次
每次指针移动时都会被调用


390
00:21:46,773 --> 00:21:48,375 line:-1
那可能会让情况变得一团糟


391
00:21:50,010 --> 00:21:52,913 line:-1
同时你不需要注册全部三种事件类型


392
00:21:52,980 --> 00:21:56,183 line:-2
如果你想在既支持鼠标
又支持触摸的设备上


393
00:21:56,250 --> 00:21:57,718 line:-1
区分鼠标和触摸交互


394
00:21:58,118 --> 00:22:00,287 line:-1
因为指针事件允许你了解其中的不同


395
00:22:01,922 --> 00:22:05,325 line:-2
如果你想取消默认网页浏览器行为
比如滚动


396
00:22:05,692 --> 00:22:07,694 line:-2
那么在Mac上你将使用
preventDefault


397
00:22:07,761 --> 00:22:09,496 line:-1
就像你针对鼠标事件所做的一样


398
00:22:11,031 --> 00:22:14,735 line:-2
在iOS上preventDefault
并不会锁定全部浏览器行为


399
00:22:14,801 --> 00:22:18,071 line:-2
因此你应该也会用到
触摸操作CSS属性


400
00:22:18,438 --> 00:22:20,507 line:-1
触摸操作实际上非常棒


401
00:22:20,874 --> 00:22:22,609 line:-1
它比写JavaScript要简单


402
00:22:22,676 --> 00:22:26,213 line:-2
它可以让你做出
比preventDefault更多的细致决策


403
00:22:26,647 --> 00:22:30,417 line:-2
现在我要用它阻止
所有值为none的浏览器行为


404
00:22:30,484 --> 00:22:33,320 line:-1
但我可以用它来 比如说 阻止滚动


405
00:22:33,387 --> 00:22:34,621 line:-1
但仍允许缩放


406
00:22:35,522 --> 00:22:38,992 line:-2
触摸操作也可以实现
更有效的用户交互


407
00:22:39,059 --> 00:22:40,460 line:-1
因为它是陈述性的


408
00:22:40,527 --> 00:22:43,630 line:-2
因此在你的网站上
使用触摸操作和指针事件


409
00:22:43,697 --> 00:22:45,699 line:-1
可能会改善你网站的性能


410
00:22:47,601 --> 00:22:51,872 line:-2
那么我们有兼容性鼠标事件
来保持电脑版能正常运行


411
00:22:52,206 --> 00:22:55,642 line:-2
但这对于iOS来说只是权宜之计
方案是指针事件


412
00:22:56,109 --> 00:22:57,311 line:-1
它们的使用非常简单


413
00:22:57,377 --> 00:23:00,547 line:-2
它们可以让你实现你当前通过鼠标
或触摸事件所能实现的一切功能


414
00:23:00,981 --> 00:23:03,884 line:-1
并且它们会确保快速地响应用户交互


415
00:23:04,551 --> 00:23:06,753 line:-2
这对于我们所面临的
调解鼠标和触摸输入


416
00:23:06,820 --> 00:23:09,690 line:-1
相关的所有问题都是一个很棒的方案


417
00:23:11,325 --> 00:23:12,392 line:-1
正如我所提到的那样


418
00:23:12,459 --> 00:23:15,395 line:-2
WebKit也会为了兼容性而发送
鼠标悬停事件


419
00:23:16,029 --> 00:23:17,731 line:-1
悬停对于触摸屏幕来说很棘手


420
00:23:17,798 --> 00:23:20,033 line:-1
因为硬件根本就不支持它


421
00:23:20,601 --> 00:23:24,304 line:-2
我们在iOS 13中修改了
鼠标悬停的检测方式


422
00:23:24,371 --> 00:23:29,276 line:-2
保证依赖于它的电脑版网站
能正常运行


423
00:23:30,978 --> 00:23:33,013 line:-1
如果你在网页上轻触一个元素


424
00:23:33,080 --> 00:23:35,616 line:-1
悬停的响应将实施悬停


425
00:23:36,016 --> 00:23:38,986 line:-1
并且如果网页中发生了有意义的变更


426
00:23:39,052 --> 00:23:41,388 line:-1
那么作为悬停的结果将会停在那里


427
00:23:42,689 --> 00:23:45,192 line:-2
用户可以第二次轻触
如果他们想要点击的话


428
00:23:47,995 --> 00:23:49,196 line:-1
在iOS 13中


429
00:23:49,263 --> 00:23:52,933 line:-2
WebKit会检测出
更多有意义的变更


430
00:23:53,233 --> 00:23:56,436 line:-1
这对于许多依赖于悬停作为网页


431
00:23:56,503 --> 00:23:59,873 line:-2
必不可少的要素的许多电脑版网站
来说至关重要


432
00:24:00,174 --> 00:24:02,309 line:-2
就像这个网页
它在菜单中使用了悬停


433
00:24:04,278 --> 00:24:06,246 line:-1
我们发现它用起来很好


434
00:24:06,513 --> 00:24:08,081 line:-1
但它从根本上来说是一种启发


435
00:24:08,148 --> 00:24:11,084 line:-1
浏览器引擎尝试诠释设计意图


436
00:24:11,151 --> 00:24:12,953 line:-1
因此它并不总是那么完美


437
00:24:13,854 --> 00:24:15,989 line:-1
我们要记住一些最佳范例


438
00:24:16,056 --> 00:24:17,191 line:-1
当你使用悬停时


439
00:24:18,926 --> 00:24:21,361 line:-1
首先你应该总是提供另一种方式


440
00:24:21,428 --> 00:24:25,199 line:-2
来获取有意义的内容 只是为了防止
WebKit漏掉某些东西


441
00:24:25,599 --> 00:24:27,768 line:-1
这对于可接入性来说也很重要


442
00:24:27,835 --> 00:24:29,970 line:-2
Wenson稍后会在演示中
具体介绍


443
00:24:31,672 --> 00:24:34,842 line:-1
你还应该避免强迫用户轻触两次


444
00:24:34,908 --> 00:24:36,510 line:-1
在绝大多数常见的交互中


445
00:24:37,377 --> 00:24:41,215 line:-2
请记住如果WebKit检测到
悬停时发生了有意义的变更


446
00:24:41,281 --> 00:24:43,650 line:-1
那意味着用户必须轻触第二次


447
00:24:43,717 --> 00:24:45,085 line:-1
如果他们实际上想要点击的话


448
00:24:45,419 --> 00:24:47,921 line:-2
因此如果你网页上有一个元素
你认为


449
00:24:47,988 --> 00:24:51,124 line:-1
用户可能会更频繁地实施点击


450
00:24:51,191 --> 00:24:54,695 line:-1
而不是浏览悬停内容或与之交互


451
00:24:54,962 --> 00:24:58,732 line:-2
那么考虑做一些修改来避免
两次轻触的减速障碍


452
00:24:58,799 --> 00:25:01,301 line:-2
这个障碍是你在可点击的元素上
使用悬停所遇到的


453
00:25:02,970 --> 00:25:05,506 line:-1
谈到效率 让悬停保持速度


454
00:25:05,772 --> 00:25:08,141 line:-2
如果你在针对悬停的响应中
开启了计时器


455
00:25:08,408 --> 00:25:10,711 line:-2
WebKit将等待
这些计时器被触发


456
00:25:10,777 --> 00:25:14,581 line:-2
如果在网页上添加
有意义的内容延迟的话


457
00:25:15,215 --> 00:25:16,750 line:-1
最糟糕的情况是


458
00:25:17,317 --> 00:25:19,086 line:-1
有东西启动了计时器


459
00:25:19,353 --> 00:25:21,255 line:-1
但是并没有发生任何有意义的变更


460
00:25:21,321 --> 00:25:23,257 line:-1
那么WebKit将自动实施点击


461
00:25:23,524 --> 00:25:24,391 line:-1
但同时


462
00:25:24,458 --> 00:25:26,927 line:-1
比平时的等待时间长大约几百毫秒


463
00:25:26,994 --> 00:25:28,695 line:-1
并且用户会觉得轻触非常慢


464
00:25:31,465 --> 00:25:33,433 line:-2
我们相信我们在iOS上
针对鼠标悬停检测


465
00:25:33,500 --> 00:25:34,935 line:-1
已经比以前做得好多了


466
00:25:35,235 --> 00:25:38,705 line:-2
但我们仍建议你使用它
只是为了逐渐增强


467
00:25:38,772 --> 00:25:41,575 line:-2
并确保你的网站正常运行
即便没有悬停


468
00:25:44,378 --> 00:25:45,012 line:-1
iOS上的WebKit


469
00:25:45,078 --> 00:25:48,048 line:-1
以前总是让主框架硬件加速滚动


470
00:25:48,415 --> 00:25:49,683 line:-1
但我要很高兴地宣布


471
00:25:49,950 --> 00:25:52,853 line:-2
WebKit现在已经在任何地方
都能实现硬件加速滚动了


472
00:25:53,220 --> 00:25:56,156 line:-1
意思是子框架及滚动区域


473
00:25:56,423 --> 00:26:00,727 line:-2
现在也可以像黄油一样
流畅地快速滚动了 就像主框架一样


474
00:26:07,334 --> 00:26:09,536 line:-1
就是那样 甚至是子框架也可以


475
00:26:09,603 --> 00:26:13,040 line:-2
在iOS的老版本中
WebKit会强迫子框架


476
00:26:13,106 --> 00:26:15,142 line:-1
尺寸是内容的完全尺寸


477
00:26:15,209 --> 00:26:17,277 line:-1
因此它们实际上不需要单独滚动


478
00:26:17,544 --> 00:26:21,348 line:-2
而且结果可能比你在代码中
所定义的尺寸更大


479
00:26:21,782 --> 00:26:23,083 line:-1
现在在iPad上


480
00:26:23,150 --> 00:26:26,887 line:-2
你可以指定框架的尺寸
并且它们也可以进行滚动


481
00:26:26,954 --> 00:26:29,122 line:-1
就像电脑浏览器上那样


482
00:26:30,791 --> 00:26:33,527 line:-1
这是如此常见的一个功能


483
00:26:33,594 --> 00:26:36,630 line:-1
有两种很流行的实现方式


484
00:26:36,897 --> 00:26:39,366 line:-1
WebKit默认不支持它


485
00:26:40,033 --> 00:26:44,404 line:-2
首先我们添加一个CSS property
-webkit-overflow-scrolling: touch


486
00:26:44,705 --> 00:26:48,275 line:-2
开发人员们可以选择
当需要快速滚动时


487
00:26:49,076 --> 00:26:53,413 line:-2
我们永远不会把它设为默认
因为它会创建一个CSS堆栈情境


488
00:26:53,881 --> 00:26:57,084 line:-1
那会影响你网页上从前到后的元素层


489
00:26:57,985 --> 00:27:01,755 line:-2
第二 有些人创建或使用
JavaScript库


490
00:27:01,822 --> 00:27:04,825 line:-1
那会使用触摸事件来模拟快速滚动


491
00:27:05,526 --> 00:27:07,728 line:-1
现在不需要那些技巧了


492
00:27:07,794 --> 00:27:11,498 line:-2
事实上WebKit流程滚动触摸
在iPad上是无操作的


493
00:27:13,901 --> 00:27:16,737 line:-1
因此你应该测试硬件加速滚动


494
00:27:16,803 --> 00:27:18,839 line:-1
如何在各个方面影响你的内容


495
00:27:18,906 --> 00:27:20,674 line:-2
并且如果你以前使用了
缺乏这个功能的技术


496
00:27:20,741 --> 00:27:24,511 line:-1
你可能再也不需要它了


497
00:27:26,713 --> 00:27:29,349 line:-1
接下来我想谈谈新的自动化视窗


498
00:27:29,416 --> 00:27:31,518 line:-1
以及文本尺寸调整行为


499
00:27:32,819 --> 00:27:34,955 line:-1
我们开发了新的自动化行为


500
00:27:35,022 --> 00:27:38,125 line:-2
因为网页应该在iPad上
呈现清晰易读的文本


501
00:27:38,192 --> 00:27:39,092 line:-1
（网页应该呈现清晰易读的文本）


502
00:27:39,159 --> 00:27:42,663 line:-2
具体地说
不是专门针对iPad创建的网站


503
00:27:42,829 --> 00:27:44,765 line:-1
应该在iPad上正常显示


504
00:27:45,065 --> 00:27:47,201 line:-1
意思就是它们不应该水平滚动


505
00:27:47,267 --> 00:27:49,203 line:-1
除非它们就是那样设计的


506
00:27:50,204 --> 00:27:52,973 line:-2
并且对于绝大多数人来说
全部文本都应该清晰易读


507
00:27:53,040 --> 00:27:55,142 line:-1
而不需要额外缩放


508
00:27:56,877 --> 00:27:59,413 line:-1
我们需要自动化行为来实现这些目标


509
00:27:59,713 --> 00:28:01,081 line:-1
因为有些电脑版网站


510
00:28:01,148 --> 00:28:03,851 line:-2
有固定的宽度
而那个宽度比iPad宽


511
00:28:05,552 --> 00:28:08,722 line:-2
我们发现很多网站宽度非常大
比如这个


512
00:28:08,789 --> 00:28:12,993 line:-2
同时视窗元标签中
响应性的声明也不正确


513
00:28:13,060 --> 00:28:14,528 line:-1
这很遗憾


514
00:28:14,928 --> 00:28:17,297 line:-2
让我返回去并解释一下
我要表达的意思


515
00:28:18,599 --> 00:28:20,801 line:-1
最初创建视窗元标签是为了


516
00:28:20,868 --> 00:28:24,271 line:-1
处理为电脑版网站创建的内容


517
00:28:24,338 --> 00:28:27,374 line:-1
在小屏幕上显示时所导致的问题


518
00:28:27,441 --> 00:28:29,142 line:-1
那么它可以很完美地处理 不是吗？


519
00:28:29,710 --> 00:28:31,912 line:-1
嗯 这个特殊的视窗值


520
00:28:31,979 --> 00:28:34,114 line:-1
意味着对浏览器引擎的一个承诺


521
00:28:34,181 --> 00:28:36,483 line:-1
承诺网站的设计是响应式的


522
00:28:36,550 --> 00:28:40,687 line:-2
意思是它将随着窗口尺寸的变更
进行自适应重排


523
00:28:41,388 --> 00:28:43,190 line:-1
在iOS之前的版本中


524
00:28:43,257 --> 00:28:45,959 line:-1
我们一般会从表面上获取这个承诺


525
00:28:46,026 --> 00:28:48,896 line:-2
并且我们不会应用
任何自动化视窗调整


526
00:28:49,162 --> 00:28:51,999 line:-1
在宽度的元标签等于设备宽度


527
00:28:52,065 --> 00:28:53,600 line:-1
并且初始缩放比等于1的网站上


528
00:28:54,835 --> 00:28:58,572 line:-2
但那会导致在iPad上浏览
许多电脑版网站的体验很不好


529
00:28:59,173 --> 00:29:01,141 line:-2
这个网站应该可以自适应
但它却没有


530
00:29:01,775 --> 00:29:03,911 line:-1
因此在iPadOS上有个新功能…


531
00:29:05,412 --> 00:29:09,216 line:-2
WebKit将忽略元标签
如果它承诺是响应式的


532
00:29:09,283 --> 00:29:12,519 line:-2
但那实际上会设置一个
比设备宽的宽度


533
00:29:13,287 --> 00:29:16,223 line:-2
我们发现那会打造一个
更好的整体体验


534
00:29:17,491 --> 00:29:20,227 line:-1
如果你的网站设计是水平滚动


535
00:29:20,294 --> 00:29:22,462 line:-1
并且它的缩放比例不对


536
00:29:22,529 --> 00:29:23,797 line:-1
你可以很轻松地解决它了


537
00:29:24,731 --> 00:29:27,434 line:-2
你只需要在你的视窗元标签中
添加另一个值


538
00:29:27,634 --> 00:29:29,069 line:-1
shrink-to-fit=no


539
00:29:29,436 --> 00:29:30,971 line:-1
这不是一个新值


540
00:29:31,038 --> 00:29:32,806 line:-1
我们在iOS 9中添加了这个值


541
00:29:32,873 --> 00:29:36,610 line:-2
因为我们在网站的分屏显示
或侧拉显示时遇到了同样的问题


542
00:29:37,144 --> 00:29:40,614 line:-2
shrink-to-fit=no
将阻止网站在分屏或侧拉时自动缩小


543
00:29:41,148 --> 00:29:45,385 line:-1
也防止较宽的电脑版网站自动缩小


544
00:29:47,154 --> 00:29:50,057 line:-2
你可能已经注意到了
即使这个网站上的框


545
00:29:50,424 --> 00:29:51,892 line:-1
缩小了以适应视窗


546
00:29:52,459 --> 00:29:54,728 line:-1
标题中的文本实际上却变大了


547
00:29:54,795 --> 00:29:58,065 line:-1
那是因为我们将自动调整网页上


548
00:29:58,298 --> 00:30:00,534 line:-2
由于采用了这种方式
而被缩小的文本尺寸


549
00:30:00,801 --> 00:30:02,769 line:-1
以便保证文本清晰易读


550
00:30:04,505 --> 00:30:08,208 line:-2
如果你想在网站上控制
视窗和文本尺寸


551
00:30:08,275 --> 00:30:11,778 line:-1
最佳方案就是采用响应式设计


552
00:30:11,845 --> 00:30:15,883 line:-2
并确保你的内容能自适应
任意窗口尺寸


553
00:30:16,483 --> 00:30:18,418 line:-1
响应式设计是一个热门话题


554
00:30:18,485 --> 00:30:20,621 line:-1
因此我不想在这里介绍


555
00:30:20,954 --> 00:30:22,756 line:-1
因为网上有很多很棒的介绍


556
00:30:24,591 --> 00:30:28,328 line:-2
总结一下 WebKit
有新视窗和文本尺寸调整行为


557
00:30:28,595 --> 00:30:31,198 line:-1
那会使网页适应清晰易读的文本


558
00:30:31,732 --> 00:30:33,867 line:-1
你要控制这个的最佳方式是


559
00:30:33,934 --> 00:30:35,602 line:-1
采用响应式设计


560
00:30:35,969 --> 00:30:38,672 line:-1
并且如果你有一个水平滚动的网站


561
00:30:38,939 --> 00:30:41,708 line:-2
那么你可以通过视窗元标签
来实现正常显示


562
00:30:44,311 --> 00:30:47,080 line:-1
接下来我想谈谈可视化视窗API


563
00:30:48,115 --> 00:30:50,551 line:-1
为此我首先要讲一下


564
00:30:50,617 --> 00:30:52,753 line:-1
可视化视窗和布局视窗的不同点


565
00:30:53,453 --> 00:30:57,424 line:-2
我们刚刚谈到了
自动化视窗尺寸调整行为


566
00:30:57,491 --> 00:30:58,959 line:-1
以及视窗元标签


567
00:30:59,026 --> 00:31:01,428 line:-1
那些是用于定义布局视窗


568
00:31:01,495 --> 00:31:03,163 line:-1
以及屏幕和窗口尺寸


569
00:31:04,631 --> 00:31:05,966 line:-1
用户输入或调整分屏显示时


570
00:31:06,033 --> 00:31:08,435 line:-1
会改变窗口尺寸


571
00:31:08,869 --> 00:31:11,872 line:-1
响应式网站将对那个变更做出反应


572
00:31:12,172 --> 00:31:13,307 line:-1
使用媒体查询


573
00:31:13,574 --> 00:31:16,243 line:-2
或也许是通过重调尺寸事件
和JavaScript


574
00:31:17,010 --> 00:31:18,946 line:-1
获取媒体查询的最大和最小值


575
00:31:19,012 --> 00:31:21,481 line:-1
无论何时布局视图发生变更时


576
00:31:21,782 --> 00:31:23,817 line:-1
并且同时会启动重调尺寸事件


577
00:31:24,384 --> 00:31:26,086 line:-1
那么如果用户旋转了设备


578
00:31:26,720 --> 00:31:28,288 line:-1
布局视窗再次发生了变更


579
00:31:28,355 --> 00:31:30,958 line:-2
并且你的内容会通过
以下技术中的一种对其做出反应


580
00:31:32,326 --> 00:31:33,594 line:-1
然后是键盘


581
00:31:34,161 --> 00:31:38,065 line:-2
键盘为我们呈现了一个覆盖层
它并没有改变布局视窗


582
00:31:38,332 --> 00:31:40,934 line:-2
并且媒体查询和重调尺寸事件
也不会做出反应


583
00:31:42,302 --> 00:31:44,671 line:-1
因此如果用户轻触了这里的名字字段


584
00:31:45,772 --> 00:31:46,907 line:-1
就会显示键盘


585
00:31:46,974 --> 00:31:49,943 line:-1
很显然那影响了屏幕上的可见内容


586
00:31:50,344 --> 00:31:52,579 line:-1
这是由可视化视窗所定义的


587
00:31:53,380 --> 00:31:56,149 line:-1
这里的布局视窗是常规的窗口尺寸


588
00:31:56,850 --> 00:32:01,421 line:-2
并且可视化视窗是当前可见
并且未隐藏的部分


589
00:32:02,222 --> 00:32:04,591 line:-2
我们很早之前
就听到开发人员们说希望


590
00:32:04,925 --> 00:32:06,760 line:-1
对可视化视窗中的变更做出反应


591
00:32:07,194 --> 00:32:09,229 line:-1
在这个示例网页上 比如说


592
00:32:09,296 --> 00:32:11,098 line:-1
捐款按钮现在是隐藏的


593
00:32:11,164 --> 00:32:13,967 line:-2
并且网站应该更可用
如果它总是停留在屏幕上的话


594
00:32:14,968 --> 00:32:17,905 line:-2
在iOS 13中
我们终于解决了这个问题


595
00:32:17,971 --> 00:32:21,041 line:-2
通过一个W3C标准
可视化视窗API


596
00:32:23,043 --> 00:32:26,413 line:-2
你可以用这个API监控
可视化视窗的冲调尺寸事件


597
00:32:26,780 --> 00:32:29,950 line:-2
当键盘出现在屏幕上或隐藏起来时
将触发这个事件


598
00:32:30,017 --> 00:32:31,752 line:-1
并且Safari中也能触发它


599
00:32:32,085 --> 00:32:34,588 line:-1
当滚动过程中智能搜索字段隐藏时


600
00:32:36,857 --> 00:32:38,759 line:-1
现在我可以使捐款按钮保持可见


601
00:32:41,261 --> 00:32:44,865 line:-2
我们认为可视化视窗API
是一个很棒的工具


602
00:32:44,932 --> 00:32:46,366 line:-1
可以充分利用iPad的大屏幕


603
00:32:48,869 --> 00:32:50,337 line:-1
让我们谈谈流媒体


604
00:32:50,838 --> 00:32:53,740 line:-2
在网页浏览器上提供
优质流媒体内容的用户们


605
00:32:53,807 --> 00:32:56,476 line:-1
很可能已经知道


606
00:32:56,844 --> 00:33:01,548 line:-2
最佳方式是HTTP Live Streaming
或简称为HLS


607
00:33:03,517 --> 00:33:06,587 line:-2
HLS在iPhone、iPad
和Mac上可用


608
00:33:06,920 --> 00:33:09,156 line:-1
它是一个疑难问题的简便方案


609
00:33:09,223 --> 00:33:11,158 line:-1
因为它替你分担了全部繁冗的工作


610
00:33:11,658 --> 00:33:12,926 line:-1
它可以和CDN一起使用


611
00:33:13,293 --> 00:33:15,562 line:-2
并且你会免费获得一些东西
比如AirPlay整合


612
00:33:16,797 --> 00:33:19,933 line:-2
然而有些电脑版内容使用了
Media Source Extensions


613
00:33:20,000 --> 00:33:21,301 line:-1
或简称为MSE


614
00:33:22,169 --> 00:33:24,905 line:-1
MSE是一个可以让视频供应商


615
00:33:25,239 --> 00:33:28,475 line:-2
精确控制所提供给用户的
数据的API


616
00:33:28,842 --> 00:33:32,412 line:-1
比如你可以手动提升或降低视频品质


617
00:33:32,479 --> 00:33:34,047 line:-1
从而响应带宽变更


618
00:33:34,815 --> 00:33:37,317 line:-1
如果你当前有内容使用了MSE


619
00:33:37,384 --> 00:33:38,619 line:-1
我有一个好消息给你


620
00:33:39,353 --> 00:33:43,891 line:-2
iPadOS中MSE在iPad上
的电脑版网站上首次可用


621
00:33:44,892 --> 00:33:49,229 line:-2
如果你当前的引擎
针对电脑版网站使用了MSE


622
00:33:49,296 --> 00:33:50,497 line:-1
它在iPad上也没问题


623
00:33:50,864 --> 00:33:54,234 line:-2
并且如果你使用实施了MSE引擎的
JavaScript库


624
00:33:54,501 --> 00:33:55,502 line:-1
那也没问题


625
00:33:57,437 --> 00:34:01,375 line:-1
因为有了HLS和MSE两个选项


626
00:34:01,441 --> 00:34:03,177 line:-2
流媒体在iPad的Safari中
变得比以前更强大了


627
00:34:05,379 --> 00:34:08,916 line:-2
这些新功能应该可以帮助你
让你的网站在iPad上自由释放


628
00:34:09,315 --> 00:34:11,851 line:-1
我刚才谈到了一些最佳范例


629
00:34:12,152 --> 00:34:13,520 line:-1
但我还有更多范例要分享


630
00:34:15,322 --> 00:34:16,924 line:-1
最佳范例可以帮助我们具体了解


631
00:34:17,257 --> 00:34:19,193 line:-1
它们引导了这个平台的转变


632
00:34:19,259 --> 00:34:20,594 line:-1
但它们也把我们带到了未来


633
00:34:20,661 --> 00:34:23,063 line:-1
随着平台的成长和发展


634
00:34:25,331 --> 00:34:26,833 line:-1
首先并且也是最重要的


635
00:34:26,900 --> 00:34:29,837 line:-1
我们坚信你应该创建一个响应式网站


636
00:34:30,103 --> 00:34:33,106 line:-2
而不是创建类似的
电脑版和移动版网站


637
00:34:34,107 --> 00:34:36,009 line:-1
我知道说起来容易做起来难


638
00:34:36,076 --> 00:34:39,813 line:-2
但我们真的相信
通过这套响应式设计技巧


639
00:34:39,880 --> 00:34:41,348 line:-1
可以打造出一个完整的网站


640
00:34:41,949 --> 00:34:45,485 line:-2
并且你应该使用特征检测
而不是用户代理字符串


641
00:34:46,553 --> 00:34:49,755 line:-1
以前有些开发人员希望了解用户代理


642
00:34:49,822 --> 00:34:51,824 line:-1
以便明确识别iPad


643
00:34:52,192 --> 00:34:56,295 line:-2
但我们在iPad上的新
电脑版用户代理将阻止你这样做


644
00:34:56,929 --> 00:35:00,501 line:-2
我想说服你们不需要再了解
你的内容是否是在iPad上


645
00:35:00,567 --> 00:35:02,336 line:-1
你只需要使用特征检测就可以了


646
00:35:03,804 --> 00:35:05,939 line:-1
原因是iPad是个变色龙


647
00:35:06,473 --> 00:35:09,810 line:-2
通过Charles介绍的
全部新内容模式API


648
00:35:10,077 --> 00:35:13,614 line:-2
你的网站可以在电脑版模式
或移动版模式的app中显示


649
00:35:14,548 --> 00:35:16,416 line:-1
你的网页内容可以在分屏中显示


650
00:35:16,683 --> 00:35:19,286 line:-1
无论是移动端还是电脑端


651
00:35:19,720 --> 00:35:22,656 line:-2
因此特别了解你的内容
是否是在iPad上显示


652
00:35:23,023 --> 00:35:24,424 line:-1
就没有那么重要了


653
00:35:25,592 --> 00:35:28,462 line:-2
并且对于用户代理的困惑
并没有终结在iPad这儿


654
00:35:28,529 --> 00:35:29,596 line:-1
一切皆有可能


655
00:35:29,663 --> 00:35:32,132 line:-2
我们现在Mac上运行着
UIKit app


656
00:35:34,535 --> 00:35:35,836 line:-1
其实如果你返回去…


657
00:35:36,270 --> 00:35:38,572 line:-2
我们在Apple Watch上、在iPhone上、
在iPad上都有网页内容


658
00:35:38,872 --> 00:35:42,476 line:-1
并且我们已经覆盖了


659
00:35:42,543 --> 00:35:44,778 line:-1
各种不同的内容模式和配置


660
00:35:45,078 --> 00:35:47,381 line:-2
Mac上的网页内容
和UIKit app


661
00:35:47,748 --> 00:35:49,983 line:-1
Mac上AppKit上的网页内容


662
00:35:50,551 --> 00:35:52,586 line:-1
针对每一种配置


663
00:35:52,653 --> 00:35:55,589 line:-1
并处理它是大屏幕网站或小屏幕网站


664
00:35:55,956 --> 00:35:57,891 line:-1
将会更加局限


665
00:35:58,225 --> 00:36:01,695 line:-1
比使用特征检测了解


666
00:36:01,762 --> 00:36:04,198 line:-2
哪一种配置可用更脆弱、
更没有前瞻性


667
00:36:05,732 --> 00:36:08,702 line:-2
我们将站在这里
并告诉你们响应式设计


668
00:36:08,769 --> 00:36:11,572 line:-2
是一个最佳范例
无论火热的新产品是什么


669
00:36:11,939 --> 00:36:13,440 line:-1
一年又一年 年复一年


670
00:36:13,507 --> 00:36:16,043 line:-2
直到最后我们不再需要这样做
因为它已经成为了规范


671
00:36:17,044 --> 00:36:20,480 line:-2
服务端提交的内容并不知道
是谁发出了请求


672
00:36:20,747 --> 00:36:25,719 line:-2
但会在每一台设备上
完美地适应响应式设计


673
00:36:26,753 --> 00:36:29,823 line:-1
并且这个设备的显示区域也没有缩小


674
00:36:32,793 --> 00:36:34,595 line:-1
我们知道这需要做很多工作


675
00:36:34,962 --> 00:36:36,363 line:-1
但我们也知道你值得这样做


676
00:36:39,099 --> 00:36:41,668 line:-2
当我们提到iPad
拥有桌面级浏览时


677
00:36:41,735 --> 00:36:43,937 line:-1
我们的意思是现代化的桌面级浏览


678
00:36:44,004 --> 00:36:45,572 line:-1
那意味着没有插件


679
00:36:45,906 --> 00:36:47,641 line:-1
iOS上从来都没有出现过插件


680
00:36:47,708 --> 00:36:49,476 line:-1
并且我们现在也不打算添加插件了


681
00:36:50,110 --> 00:36:53,013 line:-2
即使在Mac上
如果你想尽办法安装Flash


682
00:36:53,313 --> 00:36:54,581 line:-1
它默认仍是关闭


683
00:36:54,915 --> 00:36:58,519 line:-1
并且我们将于2020年停止支持它


684
00:36:59,720 --> 00:37:03,590 line:-1
因此如果你还没有把老旧视频或游戏


685
00:37:03,657 --> 00:37:06,560 line:-1
或饭店菜单迁移到标准网页技术


686
00:37:06,960 --> 00:37:09,463 line:-1
现在是时候跟Flash说再见了


687
00:37:11,365 --> 00:37:13,467 line:-2
iPad上的
Safari是桌面级的


688
00:37:13,867 --> 00:37:15,769 line:-1
但iPad仍然是一个移动设备


689
00:37:15,836 --> 00:37:18,572 line:-1
那意味着我们期待能在路上使用它


690
00:37:18,639 --> 00:37:19,973 line:-1
通常是在公共区域


691
00:37:20,641 --> 00:37:24,311 line:-2
因此WebKit将阻止
自动播放音频


692
00:37:24,945 --> 00:37:26,747 line:-1
我们发现有些电脑版网站


693
00:37:27,014 --> 00:37:29,449 line:-1
会假设将发生自动播放


694
00:37:29,716 --> 00:37:31,251 line:-1
但最好是不要这样假设


695
00:37:31,919 --> 00:37:35,055 line:-1
标准的媒体API允许你了解


696
00:37:35,122 --> 00:37:36,690 line:-1
实际上发生了什么


697
00:37:36,757 --> 00:37:38,592 line:-1
因为播放功能有一个承诺


698
00:37:39,159 --> 00:37:41,995 line:-2
你应该捕捉到那个承诺
万一播放被拒绝的话


699
00:37:42,663 --> 00:37:45,232 line:-1
但你还应该在设计网站时考虑到


700
00:37:45,299 --> 00:37:47,367 line:-1
以便让所有设备上的所有用户


701
00:37:47,634 --> 00:37:49,970 line:-1
都能自己决定什么时候播放音频


702
00:37:51,772 --> 00:37:54,208 line:-1
接下来跳出鼠标和键盘之外


703
00:37:54,274 --> 00:37:56,109 line:-1
当设计用户交互流程时


704
00:37:56,610 --> 00:37:58,812 line:-1
特别是要考虑使用指针事件


705
00:37:59,179 --> 00:38:03,283 line:-2
并避免使用鼠标悬停
除非是装饰性辅助发生了变更


706
00:38:05,152 --> 00:38:07,454 line:-1
最后使用内嵌API


707
00:38:07,955 --> 00:38:11,091 line:-2
这是一个很宽泛的话题
但我有一个具体的例子


708
00:38:11,491 --> 00:38:13,260 line:-1
我们发现许多电脑版网站


709
00:38:13,727 --> 00:38:17,564 line:-2
都使用鼠标事件
以便自定义文本选择


710
00:38:17,631 --> 00:38:18,999 line:-1
或文本输入


711
00:38:19,366 --> 00:38:20,901 line:-1
但有一个更好的工具可以实现


712
00:38:21,168 --> 00:38:23,270 line:-1
选择变更事件和输入事件


713
00:38:23,337 --> 00:38:25,272 line:-1
正是为了这个目的而设计的


714
00:38:25,806 --> 00:38:28,542 line:-1
你总是在每个平台上获得更好的行为


715
00:38:28,809 --> 00:38:30,744 line:-1
如果你使用了内嵌API


716
00:38:30,811 --> 00:38:34,481 line:-2
而不是用基础的交互事件
进行逆向编译


717
00:38:36,750 --> 00:38:37,384 line:-1
那么就是这么多了


718
00:38:38,218 --> 00:38:40,587 line:-1
为了帮助你们消化全部这些信息


719
00:38:40,654 --> 00:38:42,756 line:-1
我要邀请Wenson返回舞台


720
00:38:43,023 --> 00:38:46,860 line:-2
他可以给大家在操作中
演示一些新功能和最佳范例


721
00:38:48,161 --> 00:38:49,129 line:-1
Wenson


722
00:38:57,804 --> 00:38:59,239 line:-1
好的 谢谢Beth


723
00:39:00,941 --> 00:39:02,609 line:-1
那么你永远也不会猜到


724
00:39:02,676 --> 00:39:05,712 line:-1
但当我不工作时 在我的空闲时间


725
00:39:06,046 --> 00:39:07,414 line:-1
也没那么空闲


726
00:39:07,881 --> 00:39:09,917 line:-1
我还喜欢做一些网页app


727
00:39:10,918 --> 00:39:13,153 line:-2
今天我要跟大家分享一个
我最近一直在做的app


728
00:39:13,787 --> 00:39:15,322 line:-1
叫做Shiny Sketch


729
00:39:17,758 --> 00:39:20,694 line:-1
目前我只在电脑浏览器上进行了测试


730
00:39:21,094 --> 00:39:23,864 line:-2
那么看看它在我的iPad上怎么样
是不是很有意思


731
00:39:24,598 --> 00:39:27,301 line:-2
但首先让我在Mac上
给你们快速展示一下


732
00:39:27,801 --> 00:39:31,772 line:-2
在这个过程中 我会指出一些
可能需要调整的潜在区域


733
00:39:32,105 --> 00:39:35,008 line:-1
从而使它在iPad上看起来更棒


734
00:39:35,976 --> 00:39:38,045 line:-2
好的
这就是它在macOS上的样子


735
00:39:38,745 --> 00:39:42,249 line:-1
首先这个网站有一个固定的四栏布局


736
00:39:42,883 --> 00:39:45,219 line:-1
意思是如果我把窗口变小


737
00:39:45,552 --> 00:39:48,422 line:-1
我就会获得水平滚动 是吧？


738
00:39:48,488 --> 00:39:49,857 line:-1
那么这是需要记住的一点


739
00:39:50,958 --> 00:39:54,661 line:-1
接下来是为了获取退出或删除控件


740
00:39:55,062 --> 00:39:56,630 line:-1
我必须在每个会话上进行悬停


741
00:39:57,531 --> 00:39:59,233 line:-1
当然了 退出和删除控件


742
00:39:59,299 --> 00:40:02,069 line:-1
对于我的网页app来说至关重要


743
00:40:03,370 --> 00:40:05,772 line:-1
最后我要进入并尝试


744
00:40:06,273 --> 00:40:07,374 line:-1
在其中一个绘画上涂鸦


745
00:40:09,042 --> 00:40:11,778 line:-1
那么我可以使用我的触控板来绘画


746
00:40:12,279 --> 00:40:15,282 line:-1
但我当前的代码使用了…来实施


747
00:40:15,349 --> 00:40:16,917 line:-1
仅获取鼠标事件


748
00:40:17,484 --> 00:40:21,355 line:-2
我很可能需要针对iPad
调整它的兼容性


749
00:40:22,356 --> 00:40:23,423 line:-1
好的 这是在Mac上


750
00:40:24,358 --> 00:40:25,526 line:-1
那么在iPad上看起来怎么样呢？


751
00:40:26,326 --> 00:40:27,160 line:-1
让我来展示一下


752
00:40:28,362 --> 00:40:30,531 line:-2
我恰好在Safari中
打开了同一个页面


753
00:40:32,232 --> 00:40:34,801 line:-2
并且我注意到的第一件事就是
四栏布局


754
00:40:35,135 --> 00:40:36,537 line:-1
在横向模式中看起来很棒


755
00:40:37,471 --> 00:40:41,775 line:-2
然而一旦我旋转到竖向模式
让我们看看会发生什么


756
00:40:43,911 --> 00:40:46,013 line:-1
那么我仍然是四栏布局


757
00:40:48,582 --> 00:40:51,852 line:-2
我打赌如果网站时响应式的
我就可以避免这种缩放


758
00:40:52,886 --> 00:40:55,088 line:-1
我现在要做的就是返回到Mac上


759
00:40:55,722 --> 00:40:57,024 line:-1
并查看我是否可以解决这个问题


760
00:40:57,891 --> 00:41:02,129 line:-1
是什么触发了我浏览器中的水平滚动


761
00:41:03,497 --> 00:41:04,698 line:-1
好的 那么先说重要的


762
00:41:05,165 --> 00:41:07,901 line:-2
我要重新调整窗口
从而我可以得到水平滚动


763
00:41:08,635 --> 00:41:09,570 line:-1
就像这样


764
00:41:10,437 --> 00:41:12,206 line:-1
然后我要进入开发菜单


765
00:41:14,608 --> 00:41:17,110 line:-1
那么我要向下进入起始元素选择


766
00:41:18,512 --> 00:41:20,447 line:-1
那可以让我了解每个元素有多大


767
00:41:21,014 --> 00:41:23,217 line:-1
举个例子 在这里


768
00:41:23,283 --> 00:41:25,452 line:-1
这个编辑按钮是72乘48像素


769
00:41:27,221 --> 00:41:28,889 line:-1
好的 那么我要从页面顶部开始


770
00:41:28,956 --> 00:41:30,657 line:-1
并尝试找到一个很宽的元素


771
00:41:32,125 --> 00:41:35,028 line:-1
Shiny Sketch页面条幅


772
00:41:35,128 --> 00:41:37,798 line:-1
或标题是大概760像素


773
00:41:38,665 --> 00:41:41,802 line:-2
如果我使用这个标尺来查看
窗口宽度自身


774
00:41:42,936 --> 00:41:44,571 line:-1
它也得是760像素


775
00:41:44,872 --> 00:41:46,306 line:-1
那么这看起来比例很不错


776
00:41:47,608 --> 00:41:48,675 line:-1
我要向下移动游标


777
00:41:49,977 --> 00:41:52,546 line:-1
并且…你可能已经猜到了


778
00:41:52,880 --> 00:41:55,749 line:0
图库部分是1300像素 超级大


779
00:41:56,316 --> 00:41:59,152 line:0
因此我很确信就是它触发了水平滚动


780
00:41:59,219 --> 00:42:00,120 line:0
在我的网页app中


781
00:42:00,854 --> 00:42:02,956 line:-2
但我想了解更多信息
因此我只需要点击


782
00:42:03,323 --> 00:42:04,658 line:-1
那会打开网络检测器


783
00:42:05,259 --> 00:42:07,294 line:-1
我可以了解关于图库的更多信息


784
00:42:08,328 --> 00:42:09,329 line:-1
那么在样式侧边栏中


785
00:42:09,396 --> 00:42:12,733 line:-1
却是有一个硬编码的1300像素


786
00:42:13,534 --> 00:42:14,501 line:-1
这里为什么有这个？


787
00:42:14,968 --> 00:42:15,903 line:-1
嗯 当我添加这个时


788
00:42:16,336 --> 00:42:19,573 line:-1
我认为我在尝试让网站在很大、


789
00:42:19,640 --> 00:42:21,074 line:-1
很宽的显示屏上看起来不错


790
00:42:21,775 --> 00:42:24,011 line:-1
我认为不会有人


791
00:42:24,511 --> 00:42:27,080 line:-2
在小于1300像素宽度的显示屏上
加载我的网页


792
00:42:28,482 --> 00:42:30,584 line:-1
也许当时我的假设很合理


793
00:42:30,951 --> 00:42:32,686 line:-1
但现在我认为我可以做得更好


794
00:42:33,554 --> 00:42:35,489 line:-1
因此我现在要做的就是…


795
00:42:35,989 --> 00:42:37,324 line:-1
转换并尝试修复它


796
00:42:38,058 --> 00:42:39,593 line:-1
我要让我的网站变成响应式网站


797
00:42:40,427 --> 00:42:44,231 line:-2
顺便说一下
整个网页app只有三个文件


798
00:42:44,598 --> 00:42:47,501 line:-2
一个HTML文件、一个CSS文件
和一个JavaScript文件


799
00:42:47,868 --> 00:42:49,369 line:-1
我要从HTML文件开始


800
00:42:50,204 --> 00:42:51,972 line:-1
我要添加一个元视窗标签


801
00:42:53,674 --> 00:42:55,742 line:-1
那么有两个重点


802
00:42:55,809 --> 00:42:58,679 line:-2
width=device-width
和initial-scale=1.0


803
00:42:59,379 --> 00:43:01,348 line:-1
这就告诉浏览器


804
00:43:01,415 --> 00:43:02,349 line:-1
页面可以响应任意设备宽度


805
00:43:03,283 --> 00:43:05,652 line:-2
因此这很重要
但现在让我们实际上把它变成


806
00:43:06,019 --> 00:43:07,087 line:-1
可以响应任意设备宽度


807
00:43:07,421 --> 00:43:09,389 line:-1
因此让我们打开CSS文件


808
00:43:09,823 --> 00:43:12,326 line:-2
请记住我们之前看到的那个
1300像素规则


809
00:43:12,826 --> 00:43:13,927 line:-1
我要搜索一下


810
00:43:15,162 --> 00:43:17,731 line:-2
开始吧
width: 1300px


811
00:43:17,798 --> 00:43:19,700 line:-1
它的确在图库上


812
00:43:20,467 --> 00:43:23,036 line:-1
我要做的就是把它修改成最大宽度


813
00:43:23,871 --> 00:43:26,874 line:-1
那意味着如果窗口小于1300像素


814
00:43:27,407 --> 00:43:29,776 line:-1
图库中的绘画就应该重新排列


815
00:43:30,210 --> 00:43:31,178 line:-1
它们可以进行重排


816
00:43:31,245 --> 00:43:34,181 line:-2
因为我很方便地把它们设置为
display: inline-block


817
00:43:35,048 --> 00:43:36,416 line:-1
好的 那么…


818
00:43:37,818 --> 00:43:39,253 line:-1
那是一些小修改


819
00:43:39,586 --> 00:43:41,054 line:-1
让我们看看它现在怎么样了


820
00:43:43,857 --> 00:43:46,360 line:-2
好的 它在竖向模式中
变成了三栏布局


821
00:43:46,760 --> 00:43:48,495 line:-1
但如果我旋转到横向模式


822
00:43:49,997 --> 00:43:51,431 line:-1
它变成了四栏


823
00:43:51,498 --> 00:43:53,567 line:-1
这是因为横向模式足够宽


824
00:43:53,634 --> 00:43:54,735 line:-1
能适应四栏布局


825
00:43:55,969 --> 00:43:58,705 line:-2
无论怎样 再也不用按比例缩放了
很棒


826
00:43:59,673 --> 00:44:02,109 line:-1
好的 那么接下来让我们谈谈绘画


827
00:44:02,809 --> 00:44:05,145 line:-2
正如Beth所提到的那样
在iPad上没有鼠标移动


828
00:44:05,612 --> 00:44:07,648 line:-1
但幸运的是我可以采用指针事件


829
00:44:07,915 --> 00:44:10,450 line:-1
以及触摸操作CSS属性来实现


830
00:44:11,485 --> 00:44:12,953 line:-1
那么让我们返回到CSS文件


831
00:44:15,122 --> 00:44:17,291 line:-2
在这里我要添加
Touch-action None


832
00:44:18,325 --> 00:44:20,627 line:-2
或更具体一些 我要把它添加到
.drawable-canvas


833
00:44:20,827 --> 00:44:22,262 line:-1
正如它的名字所暗示的那样


834
00:44:22,529 --> 00:44:25,432 line:-1
它是我在绘画时拖动手指的元素


835
00:44:26,200 --> 00:44:30,237 line:-1
当然 重点是当我拖动手指时


836
00:44:30,304 --> 00:44:31,238 line:-1
它不会滚动


837
00:44:32,072 --> 00:44:33,574 line:-2
这就是为什么
触摸操作非常重要的原因


838
00:44:34,508 --> 00:44:37,177 line:-2
好的 接下来我要打开
JavaScript文件


839
00:44:37,878 --> 00:44:40,881 line:-1
我要查找mousemove


840
00:44:43,016 --> 00:44:45,118 line:-1
好的 那么这就是我目前用于


841
00:44:45,419 --> 00:44:48,589 line:-2
监测鼠标事件的代码
因此我可以在Mac上绘画


842
00:44:49,756 --> 00:44:51,158 line:-1
我要稍微调整一下


843
00:44:52,726 --> 00:44:54,228 line:-1
那么取而代之 我要…


844
00:44:55,996 --> 00:44:57,564 line:-1
检查是否支持指针事件


845
00:44:58,332 --> 00:45:01,568 line:-2
如果支持
我要注册指针事件监测器取而代之


846
00:45:02,569 --> 00:45:05,272 line:-2
否则我就要退回到
我目前正在使用的鼠标事件


847
00:45:06,406 --> 00:45:10,143 line:-1
好的 让我们实际看一下这些变更


848
00:45:13,380 --> 00:45:16,216 line:-2
让我们给我们的狗狗朋友Sona
画一顶帽子


849
00:45:22,689 --> 00:45:23,891 line:-1
嗯 画得并不好


850
00:45:24,157 --> 00:45:26,860 line:-2
但正如你所看到的那样
我现在很明显已经能绘画了


851
00:45:28,395 --> 00:45:31,098 line:-1
好的 那么最后一个小细节


852
00:45:32,466 --> 00:45:35,369 line:-2
正如Beth所提到的那样
iPad兼容鼠标悬停


853
00:45:36,069 --> 00:45:37,504 line:-1
但我并没有立刻就知道


854
00:45:37,771 --> 00:45:40,674 line:-1
编辑或删除或绘画的方法是


855
00:45:41,408 --> 00:45:44,912 line:-2
首先轻触每一幅绘画
以便显示控件


856
00:45:46,146 --> 00:45:47,814 line:-1
然后轻触那些控件


857
00:45:48,582 --> 00:45:50,784 line:-2
这意味着在iPad上
我的app中的任何有意义的交互


858
00:45:51,151 --> 00:45:54,021 line:-1
都需要两次轻触


859
00:45:55,956 --> 00:45:58,759 line:-2
让我们把它变成
一次轻触即可编辑和删除


860
00:45:59,526 --> 00:46:02,296 line:-2
我要做的是添加一个
总是可见的删除按钮


861
00:46:02,596 --> 00:46:06,133 line:-2
并使轻触绘画即可立即进入
编辑模式


862
00:46:07,234 --> 00:46:08,168 line:-1
那么让我们来做一下


863
00:46:09,303 --> 00:46:11,438 line:-1
首先我要打开HTML文件


864
00:46:12,172 --> 00:46:13,574 line:-1
我要添加一些标记


865
00:46:14,942 --> 00:46:16,877 line:-2
它是一个很简单的按钮
我要把它添加在这里


866
00:46:17,244 --> 00:46:19,680 line:-2
但请注意我在这里放了一个
类静态控件


867
00:46:20,514 --> 00:46:22,282 line:-1
很快它就会变得很重要了


868
00:46:22,349 --> 00:46:24,084 line:-1
因为我要打开CSS文件了…


869
00:46:25,686 --> 00:46:27,221 line:-1
我会在那里添加一个媒体查询


870
00:46:30,157 --> 00:46:31,225 line:-1
因此我在这里要


871
00:46:31,291 --> 00:46:33,927 line:-1
通过这个媒体查询查看是否支持悬停


872
00:46:34,294 --> 00:46:35,395 line:-1
并且如果支持


873
00:46:35,462 --> 00:46:37,130 line:-1
我们就不再需要那个静态控件了


874
00:46:37,197 --> 00:46:38,866 line:-2
就是我刚刚添加的那个
静态的删除按钮


875
00:46:39,399 --> 00:46:42,236 line:-2
因此我可以给它设置
display: none


876
00:46:42,603 --> 00:46:43,537 line:-1
然后应该会隐藏它


877
00:46:44,838 --> 00:46:47,407 line:-2
最后我们需在JavaScript
文件中做一个小修改


878
00:46:48,675 --> 00:46:50,444 line:-2
那么现在我要查找
mouseenter


879
00:46:51,745 --> 00:46:54,982 line:-2
并且这是我用于显示或隐藏
悬停控件的代码


880
00:46:55,415 --> 00:46:57,684 line:-2
当用户的鼠标
进入或离开每一幅绘画时


881
00:46:58,485 --> 00:47:00,654 line:-2
如果不支持悬停
我们就不需要这样做


882
00:47:01,355 --> 00:47:03,490 line:-2
那么我要做的就是
在这里添加一些逻辑


883
00:47:04,224 --> 00:47:07,194 line:-2
可以使用我在CSS文件中
所使用的同一个媒体查询


884
00:47:07,261 --> 00:47:08,428 line:-1
来查看是否存在悬停


885
00:47:08,896 --> 00:47:10,731 line:-1
并且如果不支持悬停


886
00:47:11,231 --> 00:47:13,667 line:-2
我就得针对
drawingitself


887
00:47:13,934 --> 00:47:14,935 line:-1
采用点击事件监测器来取而代之


888
00:47:15,335 --> 00:47:17,938 line:-1
并允许它立即开启绘画模式


889
00:47:18,939 --> 00:47:20,040 line:-1
然后这个提前返回


890
00:47:20,807 --> 00:47:23,210 line:-2
确保我不会添加
我不需要的事件监测器…


891
00:47:24,278 --> 00:47:25,779 line:-1
如果不支持悬停的话


892
00:47:26,947 --> 00:47:28,682 line:-1
好的 我们做了许多变更


893
00:47:29,216 --> 00:47:30,551 line:-1
但现在让我们实际看一下


894
00:47:33,086 --> 00:47:35,322 line:-1
好的 首先我注意到的是删除按钮


895
00:47:35,389 --> 00:47:37,224 line:-1
现在总是可见 并且随时准备被轻触


896
00:47:38,759 --> 00:47:39,793 line:-1
但如果我轻触任意一副绘画


897
00:47:40,861 --> 00:47:42,462 line:-1
我将可以立即编辑它们


898
00:47:44,198 --> 00:47:45,999 line:-2
那么在我的app中
轻触一次就可以实现任何功能


899
00:47:49,002 --> 00:47:50,704 line:-1
好的 那么通过一些简单的步骤


900
00:47:51,004 --> 00:47:53,707 line:-2
我就让我的电脑版网页app
在iPad上用起来很棒


901
00:47:54,208 --> 00:47:57,344 line:-2
并且我认为
你们中的网页开发人员们也一样可以


902
00:47:58,412 --> 00:47:59,913 line:-2
现在我想把舞台
交还给Charles


903
00:48:00,447 --> 00:48:03,217 line:-2
他会总结一下我们今天所讲的内容
我会在实验室等你们


904
00:48:13,427 --> 00:48:15,596 line:-2
谢谢Wenson
你的网页app看起来很棒


905
00:48:18,298 --> 00:48:19,266 line:-1
总结一下…


906
00:48:19,800 --> 00:48:22,169 line:-1
iPad做出了一些重要的新改进


907
00:48:22,603 --> 00:48:26,039 line:-2
让如今的电脑版网站
在iPad上用起来很棒


908
00:48:27,207 --> 00:48:29,877 line:-1
我们希望你们充分利用这些新功能


909
00:48:30,244 --> 00:48:34,147 line:-2
让你的app或网站
在iPad上变得更好


910
00:48:34,915 --> 00:48:36,183 line:-2
就像你曾经为
iPhone所做的那样


911
00:48:40,020 --> 00:48:41,255 line:-1
对于我们的网页开发人员来说


912
00:48:41,321 --> 00:48:43,790 line:-1
考虑创建一个响应式网站


913
00:48:44,224 --> 00:48:46,159 line:-1
通过我们今天所讲到的技术


914
00:48:48,061 --> 00:48:50,998 line:-2
对于app开发人员来说
可以让Safari视图控制器


915
00:48:51,265 --> 00:48:52,966 line:-1
和ASWebAuthenticationSession


916
00:48:53,033 --> 00:48:54,434 line:-1
替你分担繁冗的工作


917
00:48:56,003 --> 00:48:58,505 line:-2
如果使用WKWebView
请测试你的app


918
00:49:00,007 --> 00:49:02,242 line:-2
并且请提出错误并把你们的反馈
发送给我们


919
00:49:02,743 --> 00:49:03,844 line:-1
我们希望听到你们的反馈


920
00:49:05,579 --> 00:49:08,415 line:-1
要获取其它关于验证


921
00:49:08,682 --> 00:49:09,917 line:-1
和网络平台功能的更多信息


922
00:49:10,217 --> 00:49:13,053 line:-1
你应当看一下演讲504


923
00:49:13,387 --> 00:49:18,025 line:-2
验证、Safari和WebKit中的
新功能 时间是周四上午11点


924
00:49:18,992 --> 00:49:23,063 line:-2
还有两场与演讲相关的实验室
时间是今天下午1点


925
00:49:23,497 --> 00:49:25,199 line:-1
和周四中午12点


926
00:49:25,866 --> 00:49:29,102 line:-2
希望大家积极参与并了解
更多相关内容


927
00:49:30,237 --> 00:49:33,106 line:-2
谢谢大家
希望大家度过一个精彩的WWDC

