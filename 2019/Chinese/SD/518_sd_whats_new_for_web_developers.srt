1
00:00:06,640 --> 00:00:11,011 line:0
（为网页开发者设计的新东西）


2
00:00:15,549 --> 00:00:16,717 line:-1
大家早上好


3
00:00:16,884 --> 00:00:17,918 line:-1
我是Devin


4
00:00:17,985 --> 00:00:20,287 line:-1
我非常激动 今天能在这和大家


5
00:00:20,354 --> 00:00:22,656 line:0
聊一下WebKit的新功能


6
00:00:23,123 --> 00:00:24,458 line:0
我今天要讲的有很多


7
00:00:24,525 --> 00:00:25,959 line:-1
我们直接进入主题吧


8
00:00:26,293 --> 00:00:29,897 line:-2
今年 有很多专为网页平台
和网页开发者


9
00:00:29,963 --> 00:00:31,698 line:-1
设计的令人激动的新东西


10
00:00:32,098 --> 00:00:35,269 line:-1
今天我们会了解很多不同的主题内容


11
00:00:35,335 --> 00:00:38,071 line:-1
从网页特殊的API


12
00:00:38,138 --> 00:00:40,841 line:-1
到你能提供更原生的网页内容


13
00:00:40,908 --> 00:00:42,442 line:-1
体验的新方式


14
00:00:43,410 --> 00:00:44,645 line:-1
我们会讨论很多


15
00:00:44,711 --> 00:00:47,581 line:-1
那我们开始吧 从深色模式开始


16
00:00:48,715 --> 00:00:52,386 line:-2
系统的深色模式首次在
macOS Mojave被介绍


17
00:00:52,452 --> 00:00:56,823 line:-1
但今年 iOS 13上也支持了


18
00:00:57,824 --> 00:01:01,795 line:-1
这意味着桌面和移动端


19
00:01:01,862 --> 00:01:03,830 line:-1
现在都可以适配深色模式


20
00:01:04,397 --> 00:01:07,334 line:-1
但不要担心 它并不复杂


21
00:01:07,401 --> 00:01:11,438 line:-2
让你的网页内容适配深色模式
同样很简单


22
00:01:11,839 --> 00:01:12,840 line:-1
我们来看一下


23
00:01:13,807 --> 00:01:18,912 line:-2
首先 添加一个带有深色值的
配色方案CSS属性


24
00:01:18,979 --> 00:01:20,647 line:-1
到任意CSS根规则中


25
00:01:21,014 --> 00:01:24,885 line:-2
它将会告知WebKit
整个网页都会支持深色模式


26
00:01:25,352 --> 00:01:26,720 line:-1
当处于深色模式时


27
00:01:26,787 --> 00:01:29,189 line:-1
默认文字 背景颜色


28
00:01:29,256 --> 00:01:30,824 line:-1
和表单控件


29
00:01:30,891 --> 00:01:34,161 line:-1
都会自动更新适配深色主题


30
00:01:34,661 --> 00:01:37,931 line:-1
但如你所见 自定义样式并不会改变


31
00:01:38,131 --> 00:01:40,200 line:-1
所以 你还要自己来更新它们


32
00:01:40,667 --> 00:01:41,902 line:-1
你可以使用一个你喜欢的


33
00:01:41,969 --> 00:01:45,806 line:-1
暗色方案CSS媒体查询


34
00:01:46,573 --> 00:01:49,643 line:-2
它和其他任何CSS媒体查询
表现行为一致


35
00:01:49,710 --> 00:01:51,378 line:-1
意味着它包含的样式


36
00:01:51,445 --> 00:01:53,914 line:-1
只会在系统的深色模式中


37
00:01:55,182 --> 00:01:58,352 line:-2
你能使用它来改变任何其他
的自定义样式


38
00:01:58,418 --> 00:02:00,420 line:-1
比如CSS图片和其他颜色


39
00:02:00,487 --> 00:02:02,689 line:-1
来在页面中和其他深色主题保持一致


40
00:02:03,023 --> 00:02:05,259 line:-1
但是 对于不在CSS中的图片


41
00:02:05,325 --> 00:02:08,595 line:-1
你可以通过使用HTML的图片元素


42
00:02:09,062 --> 00:02:11,331 line:-1
来使用完全一样的媒体查询


43
00:02:11,398 --> 00:02:15,068 line:-1
当用户启用深色模式时


44
00:02:15,135 --> 00:02:17,638 line:-1
它会让两张图片自动切换


45
00:02:18,172 --> 00:02:19,506 line:-1
就是这么简单


46
00:02:20,674 --> 00:02:22,609 line:-1
显然地 对于其他内容


47
00:02:22,676 --> 00:02:26,079 line:-2
你能一直使用
JavaScript matchMedia API


48
00:02:26,146 --> 00:02:28,549 line:-1
使用同样的媒体查询


49
00:02:28,615 --> 00:02:30,651 line:-1
来处理其他动态内容


50
00:02:31,818 --> 00:02:32,986 line:-1
所有的这些技术


51
00:02:33,053 --> 00:02:36,056 line:-1
都能让你很简单的适配深色模式


52
00:02:36,123 --> 00:02:37,958 line:-1
来支持你网页剩下的内容


53
00:02:38,025 --> 00:02:41,261 line:-2
我们非常期待你的超级酷炫
的深色主题网页


54
00:02:42,362 --> 00:02:44,064 line:-1
了解相关更多信息


55
00:02:44,131 --> 00:02:46,099 line:-2
WebKit博客里
有一篇很棒的博文


56
00:02:46,166 --> 00:02:48,669 line:-2
WWDC app里
也有一个很棒的视频


57
00:02:48,735 --> 00:02:52,105 line:-1
介绍在网页内容中支持深色模式


58
00:02:52,172 --> 00:02:53,307 line:-1
你一定要看看


59
00:02:55,809 --> 00:02:57,211 line:-1
我们非常快速的介绍了


60
00:02:57,277 --> 00:02:59,746 line:-1
如何在网页内容中支持深色模式


61
00:02:59,813 --> 00:03:00,814 line:-1
它非常简单


62
00:03:02,282 --> 00:03:07,154 line:-2
下面我们聊聊你能使用的很简单的
API 叫做Web Share


63
00:03:07,221 --> 00:03:09,690 line:-1
它允许你在网页内容中


64
00:03:09,756 --> 00:03:11,091 line:-1
加入原生的分享表单


65
00:03:12,326 --> 00:03:14,628 line:-2
它符合通用标准规范
能在任何地方使用


66
00:03:14,695 --> 00:03:18,398 line:-2
在Safari或是
app里的WK网页视图


67
00:03:18,966 --> 00:03:21,201 line:-1
特别棒的是 今年的iOS


68
00:03:21,268 --> 00:03:23,804 line:-1
改进了所有的原生分享表单


69
00:03:25,472 --> 00:03:28,375 line:-2
就像调用
navigator.share


70
00:03:28,442 --> 00:03:29,810 line:-1
处理相关的数据那么简单


71
00:03:30,110 --> 00:03:33,881 line:-2
如果一个分享动作完成了
它返回一个许可


72
00:03:33,947 --> 00:03:36,283 line:-1
或一个拒绝 如果分享表单消失了


73
00:03:36,683 --> 00:03:37,718 line:-1
但请留意


74
00:03:37,784 --> 00:03:41,655 line:-2
这个API的调用被
用于回应用户的手势


75
00:03:41,722 --> 00:03:42,623 line:-1
比如一个点击


76
00:03:43,724 --> 00:03:46,827 line:-2
所以 如果不是对应的场景
它会立刻回绝


77
00:03:47,995 --> 00:03:49,730 line:-1
最酷的事情是 你已经看到


78
00:03:49,796 --> 00:03:51,632 line:-1
运作中的网页分享


79
00:03:51,698 --> 00:03:54,334 line:-1
已适配了绝大多数的网页


80
00:03:55,169 --> 00:03:56,970 line:-1
一个很好的例子是Twitter


81
00:03:57,037 --> 00:03:59,740 line:-1
它已经对深色模式做了非常大的支持


82
00:04:00,541 --> 00:04:03,076 line:-1
点击页面上的任意分享图标


83
00:04:03,143 --> 00:04:06,647 line:-2
就会打开原生的分享表单
包括了标题和推文的连接


84
00:04:07,080 --> 00:04:10,250 line:-2
在iOS 12.2或以后的版本
你也可以自己试用一下


85
00:04:12,286 --> 00:04:13,754 line:-1
这就是网页分享API


86
00:04:13,820 --> 00:04:15,155 line:-1
一个在你网页中


87
00:04:15,222 --> 00:04:18,325 line:-1
引入原生功能性非常简单的方式


88
00:04:20,560 --> 00:04:23,764 line:-1
现在 我们来看一下新媒体功能


89
00:04:24,331 --> 00:04:25,666 line:-1
如果你想要在你开发的网站


90
00:04:25,732 --> 00:04:30,370 line:-2
能在用户的设备上
提供最舒适的阅读体验


91
00:04:30,671 --> 00:04:33,774 line:-2
你现在可以使用新的
Media Capabilities API


92
00:04:33,841 --> 00:04:36,543 line:-1
来判定视频的编解码器是否支持


93
00:04:36,610 --> 00:04:38,478 line:-1
又或是视频的编解码器


94
00:04:38,545 --> 00:04:40,948 line:-1
能很快地终止任意帧


95
00:04:41,014 --> 00:04:43,250 line:-1
或者在回放过程中非常高效


96
00:04:44,117 --> 00:04:47,087 line:-1
这能让你做出更明智的决定


97
00:04:47,154 --> 00:04:49,623 line:-1
来展示你想要的内容类型


98
00:04:50,624 --> 00:04:52,326 line:-1
提到视频内容


99
00:04:52,392 --> 00:04:55,028 line:-2
macOS Catalina
和iOS 13


100
00:04:55,095 --> 00:04:58,065 line:-1
也能支持alpha通道的视频了


101
00:04:58,932 --> 00:05:02,870 line:-2
alpha通道视频支持
所有HEVC编码包含透明像素


102
00:05:02,936 --> 00:05:04,705 line:-1
的视频内容


103
00:05:05,005 --> 00:05:07,107 line:-1
一个非常好的用户案例是


104
00:05:07,174 --> 00:05:08,942 line:-1
当用户选择深色模式时


105
00:05:09,009 --> 00:05:11,712 line:-1
它允许你的视频


106
00:05:11,778 --> 00:05:13,580 line:-1
能无缝衔接至周围内容中


107
00:05:14,515 --> 00:05:16,416 line:-1
不像创建两个分开的视频


108
00:05:16,483 --> 00:05:19,186 line:-2
一个用作浅色模式
一个用作深色模式


109
00:05:19,253 --> 00:05:21,955 line:-1
一个有着透明背景的视频


110
00:05:22,022 --> 00:05:23,557 line:-1
适用于两种模式


111
00:05:24,057 --> 00:05:26,493 line:-1
alpha通道视频如今


112
00:05:26,560 --> 00:05:28,195 line:-1
能在任何地方使用


113
00:05:28,262 --> 00:05:31,398 line:-1
它没有特殊的语法和MIME类型


114
00:05:31,465 --> 00:05:32,866 line:-1
它都能运行


115
00:05:33,934 --> 00:05:35,469 line:-1
但在你使用它之前


116
00:05:35,536 --> 00:05:38,205 line:-1
你想知道alpha通道视频


117
00:05:38,272 --> 00:05:40,807 line:-2
是否能在例如旧的
iOS或macOS上运行


118
00:05:40,874 --> 00:05:44,011 line:-2
在使用
Media Capabilities API时


119
00:05:44,077 --> 00:05:46,180 line:-1
你可以在功能对象上


120
00:05:46,246 --> 00:05:48,682 line:-1
添加一个alpha通道关键字


121
00:05:51,251 --> 00:05:53,854 line:-2
如果你想要了解alpha通道视频
的更多内容


122
00:05:53,921 --> 00:05:56,957 line:-2
包括如何在macOS Catalina
创建这些视频


123
00:05:57,024 --> 00:06:01,028 line:-2
你一定要看看使用alpha
创建HEVC视频的视频


124
00:06:03,230 --> 00:06:06,767 line:-1
但如果你是一个开发


125
00:06:06,834 --> 00:06:09,002 line:-1
点对点聊天功能网站的开发者


126
00:06:09,069 --> 00:06:11,405 line:-1
也想支持屏幕截图


127
00:06:11,471 --> 00:06:15,242 line:-2
你现在能使用Safari 13的
getDisplayMedia API


128
00:06:15,943 --> 00:06:18,145 line:-1
调用它获得一个许可


129
00:06:18,212 --> 00:06:21,582 line:-1
然后立刻通知用户启用截图权限


130
00:06:22,282 --> 00:06:24,418 line:-1
如果权限被通过


131
00:06:24,484 --> 00:06:27,154 line:-1
这个许可回返回一个标准的


132
00:06:27,221 --> 00:06:30,224 line:-1
包含了Safari窗口的流媒体


133
00:06:31,124 --> 00:06:32,092 line:-1
返回的流媒体像


134
00:06:32,159 --> 00:06:35,028 line:-1
其他的标准的流媒体表现一样


135
00:06:35,095 --> 00:06:37,297 line:-1
意味着它能与WebRTC一起使用


136
00:06:37,364 --> 00:06:39,366 line:-1
分享你的屏幕给他人


137
00:06:41,735 --> 00:06:43,637 line:-2
这些就是
macOS Catalina的


138
00:06:43,704 --> 00:06:47,808 line:-2
iOS 13和Safari 13
上媒体的一些新功能


139
00:06:49,710 --> 00:06:52,846 line:-1
现在 我们来聊一些新工具


140
00:06:52,913 --> 00:06:56,483 line:-1
它们可以让你的网页内容


141
00:06:56,550 --> 00:06:59,887 line:-1
在所有平台中更灵活的布局


142
00:07:00,821 --> 00:07:02,256 line:-1
作为一个网页开发者


143
00:07:02,322 --> 00:07:03,724 line:-1
我们工作的一部分


144
00:07:03,790 --> 00:07:06,193 line:-1
就是要确保我们要


145
00:07:06,260 --> 00:07:08,262 line:-1
提供一个低耗电


146
00:07:08,328 --> 00:07:10,597 line:-1
或减少不必要的性能损耗的体验


147
00:07:11,665 --> 00:07:15,269 line:-1
为了帮你更好地了解可能发生的事情


148
00:07:15,335 --> 00:07:18,539 line:-2
网页检查器上加入了新的
CPU时间线


149
00:07:18,972 --> 00:07:22,442 line:-1
这个界面包含了可执行信息


150
00:07:22,743 --> 00:07:25,412 line:-1
我们希望你能高效使用它


151
00:07:25,479 --> 00:07:27,948 line:-2
所以 我们在WebKit博客
发布了一篇博文


152
00:07:28,015 --> 00:07:30,083 line:-2
以及在WWDC app里
发布了视频


153
00:07:30,150 --> 00:07:33,387 line:-2
都是关于了解网页检查器的
CPU使用量的说明


154
00:07:33,587 --> 00:07:34,721 line:-1
你一定要看看


155
00:07:34,788 --> 00:07:36,523 line:-1
它会让你的网站产生奇迹


156
00:07:38,325 --> 00:07:40,727 line:-1
iOS引入了WebDriver


157
00:07:41,295 --> 00:07:46,366 line:-2
升级至iOS 13的所有设备
已支持W3C的自动化


158
00:07:46,433 --> 00:07:49,736 line:-1
和回归测试的标准测试形式


159
00:07:50,137 --> 00:07:51,305 line:-1
你可以用WebDriver


160
00:07:51,371 --> 00:07:54,741 line:-2
来为你的网页内容
实现自动化集成测试


161
00:07:54,808 --> 00:07:58,345 line:-1
确保你支持的所有平台


162
00:07:58,412 --> 00:08:00,414 line:-1
不论是桌面端还是移动端


163
00:08:00,480 --> 00:08:02,883 line:-1
都能像你期待的那样运行良好


164
00:08:03,383 --> 00:08:06,920 line:-2
iOS上的WebDriver
和macOS上的非常相似


165
00:08:06,987 --> 00:08:08,856 line:-1
developer.apple.com


166
00:08:08,922 --> 00:08:10,457 line:-1
上有很棒的文档说明


167
00:08:10,524 --> 00:08:13,260 line:-1
我们未来也会有相关的文档说明


168
00:08:15,495 --> 00:08:17,297 line:-1
现在 我们来聊聊


169
00:08:17,364 --> 00:08:20,467 line:-1
如何在网页内容中存储结构化的数据


170
00:08:21,935 --> 00:08:24,371 line:-1
过去 我们主要有两种方法


171
00:08:24,438 --> 00:08:26,173 line:-1
IndexedDB和WebSQL


172
00:08:26,240 --> 00:08:30,377 line:-2
在Safari 13上
WebSQL已经被遗弃了


173
00:08:31,245 --> 00:08:35,782 line:-2
所有的现代网页浏览器
包括Safari 都支持IndexedDB


174
00:08:35,849 --> 00:08:37,049 line:-1
过去几年


175
00:08:37,116 --> 00:08:40,254 line:-1
我们一直在努力让它更加标准化


176
00:08:40,654 --> 00:08:42,089 line:-1
所以 如果你还不确定是否


177
00:08:42,155 --> 00:08:46,026 line:-1
要尽快过渡使用IndexedDB


178
00:08:48,595 --> 00:08:51,431 line:-2
最后 我们来聊一下
Apple Pay


179
00:08:51,498 --> 00:08:54,468 line:-1
在网页上最简单地接受付款的方式


180
00:08:54,701 --> 00:08:56,970 line:-1
我们主要会讲两件事


181
00:08:57,204 --> 00:08:59,907 line:-1
首先 Apple Pay


182
00:08:59,973 --> 00:09:02,843 line:-1
Payment Request API


183
00:09:02,910 --> 00:09:04,778 line:-1
已经完全支持所有的功能


184
00:09:05,479 --> 00:09:09,950 line:-2
它具备Apple Pay JS的
隐私保护 安全


185
00:09:10,017 --> 00:09:11,451 line:-1
以及为你的网页内容带来了一个


186
00:09:11,518 --> 00:09:14,221 line:-1
更为标准的流线型体验


187
00:09:14,521 --> 00:09:17,758 line:-2
我们非常建议你转换使用
Payment Request API


188
00:09:17,824 --> 00:09:20,561 line:-2
它支持Apple Pay JS
的所有功能


189
00:09:20,627 --> 00:09:22,563 line:-1
同时它也在不断被改进


190
00:09:23,096 --> 00:09:27,401 line:-2
想要深入了解如何在Apple Pay使用
Payment Request API


191
00:09:27,467 --> 00:09:30,470 line:-2
今天晚些时候将有相关博文发布
在WebKit博客上


192
00:09:30,537 --> 00:09:32,906 line:-1
会深入分析这些新提升的功能


193
00:09:33,507 --> 00:09:34,875 line:-1
第二


194
00:09:36,076 --> 00:09:40,013 line:-2
在iOS 13 你现能在WKWebView
内部使用Apple Pay


195
00:09:41,014 --> 00:09:41,849 line:-1
是的


196
00:09:46,053 --> 00:09:49,423 line:-2
这意味着你能在更多app上使用
Apple Pay了


197
00:09:49,790 --> 00:09:51,725 line:-1
但你还要注意一些事情


198
00:09:52,059 --> 00:09:55,295 line:-2
当一个用户尝试通过
Apple Pay完成一项购买时


199
00:09:55,596 --> 00:09:58,799 line:-1
他们需要在网页内通讯


200
00:09:58,866 --> 00:10:01,335 line:-1
而不是网页浏览器或app


201
00:10:01,802 --> 00:10:05,939 line:-1
在交易期间 用户和网页之间


202
00:10:06,006 --> 00:10:07,407 line:-1
不应该有其他阻碍


203
00:10:07,474 --> 00:10:08,942 line:-1
甚至在开始前就要


204
00:10:09,343 --> 00:10:11,645 line:-2
所以 这意味着
当你在WKWebView内部


205
00:10:11,712 --> 00:10:14,848 line:-2
使用Apple Pay时
限制更少了


206
00:10:14,915 --> 00:10:18,051 line:-2
当你在WKWebView
插入脚本时也同样如此


207
00:10:18,452 --> 00:10:19,686 line:-1
它是这样工作的


208
00:10:20,587 --> 00:10:21,989 line:-2
如果当前页面的
WKWebView中


209
00:10:22,055 --> 00:10:25,659 line:-1
被插入过脚本


210
00:10:25,726 --> 00:10:27,628 line:-2
我们将不被允许使用
Apple Pay


211
00:10:28,929 --> 00:10:32,299 line:-2
如果当前页面已经通过
Apple Pay付款方法


212
00:10:32,366 --> 00:10:34,268 line:-2
canMakePayments
调用过


213
00:10:34,334 --> 00:10:36,737 line:-1
我们以后将不能插入脚本


214
00:10:36,803 --> 00:10:38,572 line:-1
它们将会被一个错误阻止


215
00:10:39,773 --> 00:10:43,143 line:-2
但是 所有的这些限制只在
当前页面被限制


216
00:10:43,210 --> 00:10:46,513 line:-2
所以 一些高级别的导航
会导致它们重置


217
00:10:47,681 --> 00:10:49,183 line:-1
所以 这是什么意思呢？


218
00:10:50,450 --> 00:10:51,752 line:-1
如果你是一个网页开发者


219
00:10:51,818 --> 00:10:55,289 line:-2
你一定要在尝试展示
Apple Pay按钮前


220
00:10:55,355 --> 00:10:58,258 line:-2
调用
canMakePayments


221
00:10:58,325 --> 00:11:00,694 line:-2
或甚至在使用任何和
Apple Pay有关的内容之前


222
00:11:01,195 --> 00:11:04,431 line:-1
这样 你的用户就不会遇到


223
00:11:04,498 --> 00:11:06,400 line:-1
看见了一个Apple Pay按钮


224
00:11:06,466 --> 00:11:09,469 line:-2
然后点击却无反应
（因为已被禁用）的情况了


225
00:11:10,704 --> 00:11:12,739 line:-1
相反的 如果你是一个app开发者


226
00:11:13,307 --> 00:11:16,743 line:-1
请认真思考是否需要通过 例如


227
00:11:16,810 --> 00:11:19,179 line:-1
WKUserScript API


228
00:11:19,246 --> 00:11:21,982 line:-2
或是调用completionHandler
的evaluateJavaScript来插入脚本


229
00:11:22,382 --> 00:11:26,153 line:-2
我们已经看过过去一些App
插入脚本的示例


230
00:11:26,220 --> 00:11:29,756 line:-2
WebKit API
能做同样的事情


231
00:11:29,823 --> 00:11:31,091 line:-1
那样做没有原因


232
00:11:31,892 --> 00:11:32,960 line:-1
通过加入脚本


233
00:11:33,026 --> 00:11:36,263 line:-1
你会妨碍已经加载的网页内容


234
00:11:36,330 --> 00:11:38,165 line:-1
提供它最好的用户体验


235
00:11:38,232 --> 00:11:40,501 line:-2
（尽可能使用WebKit API
而非Javascript）


236
00:11:40,567 --> 00:11:42,302 line:-2
Apple Pay
有什么新功能呢？


237
00:11:43,770 --> 00:11:47,574 line:-1
这是一个今年为网页开发者


238
00:11:47,641 --> 00:11:49,810 line:-1
提供新功能的快速展示


239
00:11:50,744 --> 00:11:52,679 line:-1
你也会想参加


240
00:11:52,746 --> 00:11:55,749 line:-1
iPad上的桌面类浏览的演讲


241
00:11:55,949 --> 00:11:59,086 line:-2
它将会介绍如何
使用其他网页平台的新功能


242
00:11:59,152 --> 00:12:02,122 line:-1
比如指针事件让你桌面端的网页


243
00:12:02,189 --> 00:12:04,124 line:-1
使用起来像是在家里玩iPad一样


244
00:12:05,392 --> 00:12:07,528 line:-1
我非常希望你能喜欢


245
00:12:07,594 --> 00:12:09,263 line:-1
为网页开发者提供的新功能


246
00:12:09,530 --> 00:12:11,932 line:-1
我们很期待你能


247
00:12:11,999 --> 00:12:13,667 line:-1
使用这些新功能和新工具


248
00:12:13,734 --> 00:12:16,703 line:-1
来设计优质和全新的体验


249
00:12:16,770 --> 00:12:17,905 line:-1
祝你们度过愉快的一天

