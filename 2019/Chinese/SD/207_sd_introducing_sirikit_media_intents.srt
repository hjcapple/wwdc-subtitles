1
00:00:06,406 --> 00:00:09,209 line:0
（关于SiriKit Media Intent的介绍）


2
00:00:18,418 --> 00:00:20,521 line:-1
嗨 我是Danny Mandel


3
00:00:20,587 --> 00:00:23,323 line:-2
欢迎参加关于
SiriKit Media Intent的介绍演讲


4
00:00:24,358 --> 00:00:27,895 line:-2
针对音频用例向SiriKit中
添加了媒体域支持


5
00:00:28,462 --> 00:00:30,697 line:-2
能与大家分享相关信息
我们感到非常激动


6
00:00:33,200 --> 00:00:34,535 line:-1
我们要讲哪些内容呢？


7
00:00:35,302 --> 00:00:39,439 line:-2
我们要做的第一件事就是介绍新的
SiriKit Media Intent


8
00:00:39,907 --> 00:00:41,041 line:-1
及其功能


9
00:00:41,108 --> 00:00:42,309 line:-2
（新SiriKit Media Intent
处理SiriKit Media请求）


10
00:00:42,376 --> 00:00:45,279 line:-1
然后讲在你的app上


11
00:00:45,345 --> 00:00:46,914 line:-2
处理SiriKit Media
请求都需要哪些东西


12
00:00:47,948 --> 00:00:49,016 line:-1
最后


13
00:00:49,082 --> 00:00:51,318 line:-1
讲一些最佳范例


14
00:00:51,952 --> 00:00:54,054 line:-2
你可以按照范例
尽可能地提供最佳用户体验


15
00:00:54,454 --> 00:00:56,590 line:-2
当向app中添加
SiriKit Media支持时


16
00:01:00,060 --> 00:01:03,997 line:-2
今年我们允许你们
以一种全新的方式来控制音频


17
00:01:04,063 --> 00:01:05,532 line:-1
通过SiriKit Media Intent


18
00:01:06,200 --> 00:01:09,503 line:-1
我们认为你们一定会喜欢


19
00:01:09,570 --> 00:01:10,571 line:-1
你通过SiriKit Media Intent


20
00:01:11,438 --> 00:01:12,806 line:-2
创建到app中的
Siri Media功能


21
00:01:13,173 --> 00:01:15,876 line:-1
你们可以实现比如播放音频、


22
00:01:16,577 --> 00:01:19,279 line:-1
更新品味介绍、添加到收藏


23
00:01:19,680 --> 00:01:20,547 line:-1
和搜索


24
00:01:21,215 --> 00:01:24,384 line:-2
这意味着
他们可以使用丰富的自然语言


25
00:01:24,451 --> 00:01:26,119 line:-1
来处理Siri功能


26
00:01:26,987 --> 00:01:29,623 line:-2
可以说比如“在我的app中
播放Khalid”


27
00:01:30,324 --> 00:01:33,360 line:-2
那会立即在你的app中
开始播放Khalid


28
00:01:35,662 --> 00:01:36,597 line:-1
（新SiriKit Media Intent）


29
00:01:36,663 --> 00:01:39,466 line:-2
让我们来看看新的
SiriKit Media Intent


30
00:01:39,533 --> 00:01:40,467 line:-1
及其功能


31
00:01:43,036 --> 00:01:44,805 line:-2
共有四个
SiriKit Media Intent


32
00:01:45,806 --> 00:01:48,141 line:-2
第一个Intent是
INPlayMediaIntent


33
00:01:49,142 --> 00:01:52,079 line:-2
INPlayMediaIntent
允许你通过说比如


34
00:01:52,145 --> 00:01:55,249 line:-2
“在我的app中播放
Outer Peace”播放音频


35
00:01:56,049 --> 00:01:59,753 line:-2
现在你可能记得
我们在iOS 12中发布了


36
00:01:59,820 --> 00:02:01,755 line:-2
Media Playback
的捷径


37
00:02:02,256 --> 00:02:03,290 line:-1
今年


38
00:02:03,357 --> 00:02:06,293 line:-2
我们把SiriKit功能添加到了
INPlayMediaIntent


39
00:02:08,562 --> 00:02:10,830 line:-2
下一个Intent是
INAddMediaIntent


40
00:02:11,832 --> 00:02:13,267 line:-1
INAddMediaIntent


41
00:02:13,333 --> 00:02:16,937 line:-2
允许人们向他们的播放列表
和曲库中添加媒体项


42
00:02:18,405 --> 00:02:19,673 line:-1
举个例子


43
00:02:20,274 --> 00:02:22,809 line:-2
“把这首歌添加到
我的app中的公路之旅播放列表”


44
00:02:25,112 --> 00:02:27,447 line:-2
我们有
INUpdateMediaAffinityIntent


45
00:02:27,814 --> 00:02:30,651 line:-1
允许人们表达对媒体项的亲密关系


46
00:02:31,552 --> 00:02:33,854 line:-2
人们可以通过说类似的
简单的语句表达这种观点


47
00:02:34,254 --> 00:02:35,088 line:-1
“我喜欢这首歌”


48
00:02:37,090 --> 00:02:39,660 line:-2
最后我们有
INSearchForMediaIntent


49
00:02:40,260 --> 00:02:43,063 line:-2
让人们搜索你的app中的
特定媒体项


50
00:02:43,830 --> 00:02:46,834 line:-2
比如“从我的app中
查找Billie Eilis”


51
00:02:50,137 --> 00:02:52,506 line:-2
我们谈谈SiriKit Media中
支持哪些媒体类型


52
00:02:53,473 --> 00:02:56,176 line:-2
SiriKit Media
支持许多不同的音频类型


53
00:02:56,243 --> 00:02:57,411 line:-1
第一个类型就是音乐


54
00:02:58,045 --> 00:02:59,346 line:-1
并且音乐支持…


55
00:02:59,913 --> 00:03:01,215 line:-1
你可以说比如


56
00:03:01,481 --> 00:03:03,483 line:-2
“在我的app中播放歌曲
‘Awesome Song’”


57
00:03:04,751 --> 00:03:05,919 line:-1
除了歌曲


58
00:03:06,186 --> 00:03:07,888 line:-1
我们还支持专辑、歌手、


59
00:03:07,955 --> 00:03:09,857 line:-1
播放列表、流派等等 还有很多


60
00:03:11,391 --> 00:03:14,194 line:-2
那么你可以查看关于
INMediaSearch的文档


61
00:03:14,528 --> 00:03:16,363 line:-2
以获取所支持的
搜索媒体项的完整列表


62
00:03:16,964 --> 00:03:19,466 line:-1
并且我们希望你尽可能多地采用它们


63
00:03:20,000 --> 00:03:22,703 line:-2
从而在你的app中
提供最佳Siri用户体验


64
00:03:23,704 --> 00:03:25,472 line:-1
此外我们还有播放控制


65
00:03:25,906 --> 00:03:28,108 line:-2
比如随机播放、重复播放
和按顺序播放


66
00:03:29,510 --> 00:03:32,613 line:-2
人们可以说比如“请在我的app中
随机播放Khalid”


67
00:03:32,946 --> 00:03:35,849 line:-2
或“在我的app中下一首播放
Outer Peace”


68
00:03:38,919 --> 00:03:40,921 line:-1
所支持的下一个音频类型是播客


69
00:03:41,955 --> 00:03:44,291 line:-2
你可以通过说
“在我的app中播放播客


70
00:03:44,691 --> 00:03:47,027 line:-2
Stuff You Should Know”
开始播放播客


71
00:03:47,961 --> 00:03:48,962 line:-1
此外


72
00:03:49,029 --> 00:03:53,066 line:-2
人们还可以控制
播客的播放顺序和速度


73
00:03:54,001 --> 00:03:55,702 line:-1
人们可以说比如


74
00:03:55,769 --> 00:03:56,803 line:-1
“在我的app播客中播放


75
00:03:56,870 --> 00:03:58,605 line:-2
Stuff You Should Know
的最新一集”


76
00:03:58,939 --> 00:04:02,609 line:-2
或“在我的app播客中双倍速播放最新一集
的Stuff You Should Know”


77
00:04:04,411 --> 00:04:05,612 line:-1
（有声书）


78
00:04:05,679 --> 00:04:07,481 line:-1
接下来我们支持有声书


79
00:04:08,348 --> 00:04:09,917 line:-1
人们可以说比如


80
00:04:10,317 --> 00:04:11,985 line:-2
“在我的app中播放有声书
《Becoming》”


81
00:04:12,719 --> 00:04:13,787 line:-1
跟播客一样


82
00:04:14,154 --> 00:04:16,322 line:-1
以指定速度开始播放


83
00:04:16,390 --> 00:04:17,524 line:-1
当请求播放有声书时


84
00:04:19,660 --> 00:04:20,961 line:-1
最后我们支持收音机


85
00:04:21,862 --> 00:04:25,199 line:-1
收音机支持允许人们


86
00:04:25,499 --> 00:04:26,567 line:-2
在你的收音机播放app中
请求指定电台


87
00:04:27,301 --> 00:04:29,903 line:-2
比如“在我的app中
播放89.1 FM”


88
00:04:32,706 --> 00:04:35,876 line:-2
如果你app的媒体类型不含在
以上媒体类型之内 不要担心


89
00:04:36,343 --> 00:04:39,880 line:-2
你仍可以采用SiriKit Media Intent
及其全部功能


90
00:04:40,914 --> 00:04:42,282 line:-1
人们可以说比如


91
00:04:42,683 --> 00:04:43,984 line:-1
“在我的app中播放搜索条目”


92
00:04:44,384 --> 00:04:46,486 line:-2
你将可以在你的app中
查找搜索媒体项并播放它


93
00:04:47,487 --> 00:04:49,289 line:-1
漏掉的唯一一个功能


94
00:04:49,356 --> 00:04:51,225 line:-1
就是对强烈解析的媒体类型的支持


95
00:04:51,758 --> 00:04:53,360 line:-1
假如你有一个自然声音app


96
00:04:53,894 --> 00:04:56,196 line:-2
然后你说“在我的app中播放
爬行动物的叫声”


97
00:04:56,530 --> 00:04:58,565 line:-2
或“在我的app中播放
哺乳动物的叫声”


98
00:04:59,199 --> 00:05:01,702 line:-2
Siri不知道那是两种
不同类型的动物叫声


99
00:05:02,236 --> 00:05:07,307 line:-2
因此你会获得一个哺乳动物叫声
或爬行动物叫声的字符串


100
00:05:08,008 --> 00:05:09,243 line:-1
你可以查找并播放它


101
00:05:09,309 --> 00:05:11,512 line:-1
因此不像其它类型那样有组织


102
00:05:11,812 --> 00:05:12,913 line:-1
但仍然支持


103
00:05:16,550 --> 00:05:19,019 line:-2
让我们看看如何在SiriKit中
处理这些Intent


104
00:05:19,086 --> 00:05:20,387 line:-1
（Siri请求处理）


105
00:05:21,822 --> 00:05:25,792 line:-2
请求SiriKit Media
要了解的第一件事


106
00:05:26,093 --> 00:05:29,129 line:-2
就是SiriKit Media Intent
跟其它SiriKit域一样


107
00:05:30,197 --> 00:05:33,634 line:-2
因此发生在Intent
app扩展中全部Intent处理


108
00:05:33,967 --> 00:05:36,937 line:-2
都遵守
SiriKit Media Intent处理协议


109
00:05:38,305 --> 00:05:40,007 line:-1
SiriKit请求处理的具体信息


110
00:05:40,073 --> 00:05:42,643 line:-1
在之前的WWDC演讲中已具体讲过


111
00:05:43,243 --> 00:05:46,947 line:-2
我推荐你回顾那些演讲
以及查看在线的开发者文档


112
00:05:47,381 --> 00:05:50,150 line:-2
获取更多关于SiriKit
请求处理的信息


113
00:05:53,187 --> 00:05:55,923 line:-2
现在让我们看看
SiriKit Media域中的


114
00:05:56,390 --> 00:05:57,558 line:-1
典型请求会发生什么？


115
00:05:58,992 --> 00:06:01,228 line:-2
当人们说“在我的app中
播放酷歌”时


116
00:06:01,528 --> 00:06:02,829 line:-1
就开始请求处理


117
00:06:03,597 --> 00:06:05,899 line:-2
并且Siri会识别
这是一个针对app的请求


118
00:06:06,533 --> 00:06:08,068 line:-1
它会启动Intent扩展


119
00:06:08,802 --> 00:06:11,104 line:-2
SiriKit请求处理
需要三个步骤：


120
00:06:11,939 --> 00:06:13,440 line:-2
Resolve、
Confirm和Handle


121
00:06:16,009 --> 00:06:18,145 line:-2
请求处理的第一个步骤是
Resolve


122
00:06:19,112 --> 00:06:20,247 line:-1
在媒体域中


123
00:06:20,314 --> 00:06:24,051 line:-2
Resolve步骤是获取Intent的
INMediaSearch对象


124
00:06:24,718 --> 00:06:26,887 line:-1
并在app的目录中进行搜索


125
00:06:27,888 --> 00:06:31,758 line:-2
Resolve的输出是要播放的
一个或多个具体的媒体项对象


126
00:06:33,060 --> 00:06:35,429 line:-1
否则如果我们没有找到匹配项


127
00:06:36,163 --> 00:06:37,397 line:-1
或发生了另一个报错


128
00:06:37,464 --> 00:06:39,399 line:-2
我们会返回一个
Unsupported结果


129
00:06:39,733 --> 00:06:42,269 line:-2
那会告诉Siri播放
恰当的报错对话


130
00:06:45,272 --> 00:06:47,574 line:-2
请求处理的下一步是
Confirm步骤


131
00:06:48,909 --> 00:06:51,912 line:-2
一般我们不鼓励
在媒体域中使用Confirm步骤


132
00:06:52,813 --> 00:06:54,581 line:-2
通过查看在我们自己的
app中的使用


133
00:06:54,848 --> 00:06:56,550 line:-1
我们发现使用Confirm


134
00:06:57,184 --> 00:07:00,354 line:-2
实际上会降低
人们继续播放媒体的可能性


135
00:07:00,888 --> 00:07:03,357 line:-2
因此我们不推荐
在媒体域中使用Confirm步骤


136
00:07:05,692 --> 00:07:08,395 line:-2
请求处理的最后一个步骤是
Handle


137
00:07:09,229 --> 00:07:10,864 line:-1
对于INPlayMediaIntent


138
00:07:11,598 --> 00:07:12,933 line:-1
这一步非常简单


139
00:07:13,000 --> 00:07:15,002 line:-1
因为我们会返回响应代码


140
00:07:15,302 --> 00:07:18,338 line:-2
“handle an app”
会在后台启动app


141
00:07:21,708 --> 00:07:23,477 line:-1
在app后台启动过程中


142
00:07:23,810 --> 00:07:26,880 line:-2
我们会像通常在app中所做的那样
播放媒体


143
00:07:28,081 --> 00:07:29,383 line:-1
唯一棘手的部分就是测试


144
00:07:30,050 --> 00:07:31,485 line:-1
你要确保全部都会播放


145
00:07:31,552 --> 00:07:33,086 line:-1
因为屏幕上没有任何UI


146
00:07:33,587 --> 00:07:35,322 line:-1
你还要确保


147
00:07:35,389 --> 00:07:36,857 line:-1
针对各种情况都进行了测试


148
00:07:37,157 --> 00:07:38,625 line:-1
比如在CarPlay车载中


149
00:07:39,126 --> 00:07:40,694 line:-1
或当你戴着耳机时


150
00:07:40,761 --> 00:07:42,396 line:-1
那么现在我们了解了


151
00:07:42,696 --> 00:07:44,298 line:-2
关于SiriKit请求处理的
大概信息


152
00:07:44,798 --> 00:07:47,034 line:-2
让我们看一个简化了的
Resolve媒体项方法


153
00:07:48,168 --> 00:07:49,369 line:-1
需要注意的第一件事就是


154
00:07:49,736 --> 00:07:51,438 line:-1
参数稍微有点不一样


155
00:07:52,039 --> 00:07:53,307 line:-1
但Resolve逻辑一样


156
00:07:53,607 --> 00:07:55,876 line:-2
全部四个Media Intent
的逻辑都一样


157
00:07:56,710 --> 00:07:58,946 line:-2
Resolve的工作是
搜索app目录


158
00:07:59,580 --> 00:08:02,049 line:-2
全部四个Intent的
实现方式都一样


159
00:08:04,051 --> 00:08:06,920 line:-2
因此我们要把一个结果初始化为
一个Unsupported的结果


160
00:08:07,521 --> 00:08:10,858 line:-2
那会告诉Siri说出恰当的
报错对话


161
00:08:10,924 --> 00:08:12,793 line:-2
如果我们没有在app目录中
找到任何东西的话


162
00:08:15,462 --> 00:08:18,365 line:-2
INMediaSearch
是一个Intent字段


163
00:08:18,432 --> 00:08:19,833 line:-2
包含关于用户
请求播放什么内容的详细信息


164
00:08:20,701 --> 00:08:24,404 line:-2
INMediaSearch
表示Siri所支持的


165
00:08:24,471 --> 00:08:25,439 line:-1
全部音频相关的查询


166
00:08:26,340 --> 00:08:29,009 line:-2
我们在Resolve步骤中的工作
是从全部可能性中


167
00:08:29,610 --> 00:08:30,711 line:-1
找到单一媒体项并播放


168
00:08:31,612 --> 00:08:32,746 line:-1
在这个例子中


169
00:08:33,013 --> 00:08:37,083 line:-2
我们要做的第一件事就是
从INMediaSearch中读取媒体名称


170
00:08:39,385 --> 00:08:42,623 line:-2
然后要从app目录中
取回媒体项的列表


171
00:08:44,992 --> 00:08:47,861 line:-2
我们要在媒体搜索中
使用媒体名称属性


172
00:08:48,128 --> 00:08:50,664 line:-1
从而与媒体项的名称属性进行对比


173
00:08:51,298 --> 00:08:55,068 line:-1
我们稍后再具体谈这个


174
00:08:55,135 --> 00:08:56,937 line:-1
但在你已发布的app中


175
00:08:57,237 --> 00:08:58,272 line:-1
这并不是你真正想要去做的


176
00:09:00,774 --> 00:09:02,843 line:-1
但如果我们实现了精确的名称匹配


177
00:09:03,410 --> 00:09:04,745 line:-1
我们找到了要播放的媒体项


178
00:09:05,279 --> 00:09:08,782 line:-2
我们会使用那个媒体项的属性
创建一个成功结果


179
00:09:10,450 --> 00:09:13,954 line:-1
然后调用完成处理器并继续处理


180
00:09:16,223 --> 00:09:17,891 line:-1
在这种情况下 正如我们所说过的


181
00:09:18,492 --> 00:09:19,860 line:-1
处理过程非常短


182
00:09:20,394 --> 00:09:23,931 line:-2
因为我们所要做的只是返回
handleInApp成功响应代码


183
00:09:24,565 --> 00:09:27,267 line:-1
这将会开始在后台启动我们的app


184
00:09:28,202 --> 00:09:30,270 line:-1
现在让我们来看看app的后台启动


185
00:09:32,506 --> 00:09:34,775 line:-1
我们在app委托中实施的


186
00:09:35,108 --> 00:09:36,643 line:-1
用于支持后台app启动的方法


187
00:09:36,710 --> 00:09:39,813 line:-2
就是application:handle:
completionHandler:


188
00:09:41,882 --> 00:09:43,884 line:-1
再一次 这是一个过程很短的实施


189
00:09:45,586 --> 00:09:48,422 line:-1
我们要从intent中


190
00:09:48,789 --> 00:09:49,790 line:-1
读取要播放的第一个媒体项


191
00:09:51,024 --> 00:09:53,760 line:-2
然后我们只需要像通常那样
在app中播放它即可


192
00:09:55,796 --> 00:09:58,298 line:-1
最后我们会调用完成处理器


193
00:09:58,565 --> 00:10:00,033 line:-1
返回成功响应代码


194
00:10:02,369 --> 00:10:04,104 line:-1
现在我们已经了解了新Intent


195
00:10:04,171 --> 00:10:05,439 line:-1
以及它们是如何共同起作用的


196
00:10:05,839 --> 00:10:07,341 line:-2
我要把舞台交给
Ryan Klems


197
00:10:07,841 --> 00:10:10,110 line:-2
他将在实际的app中
为我们进行演示


198
00:10:17,718 --> 00:10:18,685 line:-1
谢谢Danny


199
00:10:20,821 --> 00:10:22,422 line:-1
向当前Media app中添加


200
00:10:22,489 --> 00:10:24,258 line:-2
SiriKit Media Intent
处理非常简单


201
00:10:24,658 --> 00:10:26,126 line:-1
这是我们的音乐app


202
00:10:26,393 --> 00:10:28,195 line:-2
要添加Siri支持
我们所要做的就是


203
00:10:28,862 --> 00:10:30,364 line:-1
添加Siri扩展目标


204
00:10:30,430 --> 00:10:32,366 line:-1
添加一些方法 然后


205
00:10:33,100 --> 00:10:35,002 line:-1
我们将立即处理Siri请求


206
00:10:36,236 --> 00:10:37,404 line:-1
要添加Intent的扩展


207
00:10:37,471 --> 00:10:38,872 line:-1
我们所要做的就是打开File


208
00:10:39,373 --> 00:10:40,741 line:-1
New Target…


209
00:10:42,910 --> 00:10:45,646 line:-2
选择Intent Extension
并点击下一步


210
00:10:46,246 --> 00:10:47,314 line:-1
给它命名…


211
00:10:50,684 --> 00:10:51,618 line:-1
然后点击完成


212
00:10:53,720 --> 00:10:56,423 line:-2
Xcode将为我们创建
Intent处理器


213
00:10:57,257 --> 00:11:01,762 line:-2
我们要继续并向app中
添加Siri支持


214
00:11:05,999 --> 00:11:08,802 line:-2
然后打开
Control Extension


215
00:11:09,403 --> 00:11:12,406 line:-1
并且添加我们所支持的Intent


216
00:11:12,472 --> 00:11:16,944 line:-2
在这个例子中 我们将支持
INPlayMediaIntent


217
00:11:18,779 --> 00:11:20,314 line:-1
和INAddMediaIntent


218
00:11:27,054 --> 00:11:28,589 line:-1
我们继续并选择音乐类型


219
00:11:30,657 --> 00:11:33,327 line:-2
在这里有一些
我们想要添加的方法


220
00:11:33,393 --> 00:11:34,828 line:-1
从而确保文件加入编译过程


221
00:11:40,734 --> 00:11:44,972 line:-1
我们要确保打开适当的代码签名


222
00:11:46,773 --> 00:11:48,275 line:-1
现在我们将转向Intent处理器


223
00:11:49,142 --> 00:11:53,013 line:-2
我们所要做的就是添加
对INPlayMediaIntent处理协议的支持


224
00:11:56,750 --> 00:11:59,286 line:-1
然后我们要为Resolve


225
00:12:02,589 --> 00:12:03,757 line:-1
和Handle方法加入一些存根


226
00:12:05,292 --> 00:12:06,460 line:-1
在这个例子中


227
00:12:06,527 --> 00:12:09,429 line:-2
我们只需要从
Resolve媒体项中


228
00:12:10,130 --> 00:12:11,331 line:-2
返回Unsupported
支持的结果即可


229
00:12:11,398 --> 00:12:12,966 line:-1
那将导致Siri说


230
00:12:13,033 --> 00:12:14,434 line:-1
它没有找到搜索项


231
00:12:15,235 --> 00:12:16,803 line:-1
那么我们要继续并尝试运行一下


232
00:12:16,870 --> 00:12:17,938 line:-1
这正是我们想要的结果


233
00:12:28,882 --> 00:12:31,251 line:-2
那么Siri说了
它没有找到搜索项…


234
00:12:32,386 --> 00:12:34,321 line:-1
由于我们从Intent处理器中


235
00:12:35,155 --> 00:12:36,123 line:-1
返回了Unsupported…


236
00:12:37,357 --> 00:12:39,960 line:-1
那么我们现在要做的就是继续并…


237
00:12:40,460 --> 00:12:42,663 line:-1
把这个挂钩到现有的搜索实施上


238
00:12:49,436 --> 00:12:51,338 line:-1
在这种情况下 我们要做的第一件事


239
00:12:51,405 --> 00:12:53,207 line:-1
就是决定用户正在搜索什么


240
00:12:53,273 --> 00:12:57,010 line:-2
在这个简单的例子中
我们要搜索一位歌手


241
00:13:01,315 --> 00:13:02,416 line:-1
在方法中


242
00:13:02,916 --> 00:13:04,251 line:-1
我们继续并Resolve


243
00:13:05,752 --> 00:13:06,720 line:-1
媒体项


244
00:13:24,037 --> 00:13:25,606 line:-1
一旦我们Resolve媒体项


245
00:13:25,672 --> 00:13:27,975 line:-1
然后我们将返回到Handle方法


246
00:13:28,976 --> 00:13:33,013 line:-2
并返回handleInApp方法
响应代码


247
00:13:33,080 --> 00:13:35,349 line:-1
那将导致在后台启动app


248
00:13:35,415 --> 00:13:37,684 line:-1
为此 我们要切换到app委托中


249
00:13:38,619 --> 00:13:41,822 line:-2
添加
Handle Intent方法


250
00:13:42,456 --> 00:13:45,659 line:-2
这将提取我们所传递的
INMediaItem


251
00:13:45,726 --> 00:13:47,227 line:-1
我们在上一个步骤中找到了它


252
00:13:47,728 --> 00:13:48,929 line:-1
并把它传递给播放


253
00:13:49,596 --> 00:13:52,666 line:-2
我们要继续并播放
看看那看起来怎么样


254
00:13:59,439 --> 00:14:01,775 line:-2
那么你可以看到
我们返回了INMediaItem


255
00:14:01,842 --> 00:14:05,612 line:-2
它找到了INMediaItem
并把它传回给app


256
00:14:05,679 --> 00:14:06,747 line:-1
然后开始播放


257
00:14:07,514 --> 00:14:09,883 line:-2
那么现在我们已经完成了
我们为什么不继续


258
00:14:09,950 --> 00:14:11,185 line:-1
并给添加方法添加支持呢？


259
00:14:12,920 --> 00:14:15,289 line:-2
为此 我们只需要对它进行扩展
通过添加…


260
00:14:16,390 --> 00:14:18,258 line:-2
INAddMediaIntent
处理协议


261
00:14:23,764 --> 00:14:26,033 line:-1
然后我们要添加用于查找


262
00:14:26,867 --> 00:14:28,368 line:-1
和处理添加方法的方法


263
00:14:29,303 --> 00:14:31,572 line:-2
你可能在这里注意到
用于添加的Resolve媒体项


264
00:14:31,638 --> 00:14:34,975 line:-2
和用于播放的Resolve方法
看起来非常相似


265
00:14:36,977 --> 00:14:40,480 line:-2
此外 对于添加 我们还有一个
Resolve Media Destination


266
00:14:40,547 --> 00:14:42,115 line:-1
它用于决定用户是否


267
00:14:42,182 --> 00:14:44,084 line:-1
尝试添加到媒体库或添加到播放列表


268
00:14:45,185 --> 00:14:47,054 line:-2
如果是添加到播放列表
你可能想要实现


269
00:14:47,120 --> 00:14:49,823 line:-1
比如“返回未找到的播放列表名称”


270
00:14:50,190 --> 00:14:53,894 line:-2
如果用户指定的播放列表
在他们的媒体库中不存在的话


271
00:14:57,598 --> 00:14:59,733 line:-1
同时 对于添加的不同之处在于


272
00:14:59,800 --> 00:15:03,036 line:-1
没有理由返回到app比如开始播放


273
00:15:03,103 --> 00:15:04,838 line:-2
就像我们在Play Media Intent中
所做的那样


274
00:15:05,372 --> 00:15:07,341 line:-1
在这种情况下 我们要做的就是


275
00:15:07,407 --> 00:15:09,042 line:-1
在扩展中处理一切


276
00:15:09,843 --> 00:15:12,079 line:-1
我们有找到的媒体项


277
00:15:12,145 --> 00:15:15,582 line:-1
我们只需要继续并使用app方法


278
00:15:15,649 --> 00:15:17,451 line:-1
添加到媒体库或播放列表


279
00:15:18,018 --> 00:15:19,820 line:-1
在这种情况下 我们只需要使用


280
00:15:19,887 --> 00:15:21,355 line:-1
媒体播放器工具来添加它即可


281
00:15:22,122 --> 00:15:24,258 line:-2
那么让我们继续并查看
那看起来怎么样


282
00:15:37,304 --> 00:15:39,506 line:-1
因此它与添加到播放列表中的媒体项


283
00:15:39,573 --> 00:15:40,674 line:-1
以及播放列表名称通讯


284
00:15:40,741 --> 00:15:43,343 line:-1
因为那些是在请求中指定的


285
00:15:44,912 --> 00:15:48,182 line:-2
正如你所看到的
向app中添加支持相对简单


286
00:15:48,248 --> 00:15:51,285 line:-2
我们非常想看到你们
在你们的app中会实现什么效果


287
00:15:51,351 --> 00:15:52,386 line:-1
谢谢


288
00:15:53,587 --> 00:15:54,655 line:-1
Danny 舞台交还给你


289
00:15:57,758 --> 00:15:58,892 line:-1
谢谢Ryan


290
00:15:58,959 --> 00:16:00,194 line:-1
那么Ryan给我们演示了什么？


291
00:16:00,827 --> 00:16:04,031 line:-2
首先他演示了如何向app中
添加Intent扩展


292
00:16:04,665 --> 00:16:07,534 line:-2
然后他演示了如何指定
所支持的Intent


293
00:16:07,968 --> 00:16:09,069 line:-1
及所支持的媒体类型


294
00:16:09,770 --> 00:16:12,272 line:-1
最后他演示了如何对


295
00:16:12,606 --> 00:16:14,942 line:-2
INPlayMediaIntent
和INAddMediaIntent


296
00:16:15,309 --> 00:16:16,710 line:-1
实施Resolve和Handle


297
00:16:17,110 --> 00:16:21,315 line:-2
我们可以立即开始使用Siri
播放和添加媒体了


298
00:16:22,015 --> 00:16:22,983 line:-1
（演示总结）


299
00:16:23,050 --> 00:16:23,884 line:-1
（最佳实践）


300
00:16:23,951 --> 00:16:26,553 line:-1
让我们看一些最佳范例


301
00:16:26,854 --> 00:16:28,222 line:-2
你可以在采用SiriKit Media时
进行参考


302
00:16:28,856 --> 00:16:30,190 line:-1
（添加SiriKit支持捷径）


303
00:16:30,691 --> 00:16:33,493 line:-2
如果你已经为媒体播放
实施了捷径


304
00:16:33,560 --> 00:16:34,628 line:-1
我们有个好消息


305
00:16:35,095 --> 00:16:37,731 line:-1
对于后台启动app来说


306
00:16:37,798 --> 00:16:39,099 line:-2
SiriKit Media使用的
是同样的代码和处理方式


307
00:16:40,267 --> 00:16:43,437 line:-2
运行在之前添加的
Intent上的捷径


308
00:16:43,504 --> 00:16:45,105 line:-1
不要求Intent分辨率


309
00:16:46,006 --> 00:16:47,941 line:-2
而SiriKit的确要求有
Resolve步骤


310
00:16:48,542 --> 00:16:50,677 line:-1
因此你需要添加的两个东西是…


311
00:16:51,044 --> 00:16:52,980 line:-2
Resolve方法
和Intent处理器


312
00:16:53,614 --> 00:16:55,616 line:-1
并且你需要在Xcode中更新


313
00:16:55,682 --> 00:16:57,284 line:-2
所支持的媒体类型的
Intent扩展


314
00:16:58,051 --> 00:17:00,220 line:-2
从而Siri就了解你的app
支持哪种内容类型


315
00:17:01,588 --> 00:17:03,790 line:-2
Extensions Handle
方法应该是一样的


316
00:17:03,857 --> 00:17:06,993 line:-1
在两个实施和后台启动app之间


317
00:17:07,828 --> 00:17:10,531 line:-2
app委托的
Handle Intent可相同


318
00:17:10,830 --> 00:17:13,967 line:-1
只要你为媒体项使用了同样的标识符


319
00:17:15,935 --> 00:17:17,404 line:-1
让我们看看那看起来怎么样


320
00:17:17,938 --> 00:17:19,873 line:-1
这是去年的捷径实施


321
00:17:20,440 --> 00:17:22,075 line:-1
你要注意没有Resolve方法


322
00:17:22,142 --> 00:17:23,210 line:-1
但其余都一样


323
00:17:23,777 --> 00:17:25,712 line:-1
为了从捷径打开SiriKit


324
00:17:26,880 --> 00:17:29,449 line:-2
我们只需要添加Resolve方法
然后就可以了


325
00:17:29,516 --> 00:17:30,617 line:-1
（Siri请求处理）


326
00:17:31,718 --> 00:17:35,055 line:-1
现在让我们谈谈如何


327
00:17:35,122 --> 00:17:36,056 line:-2
向Apple Watch
引入SiriKit媒体支持


328
00:17:37,558 --> 00:17:39,660 line:-2
在watchOS上
app在前台启动


329
00:17:40,294 --> 00:17:44,464 line:-1
实现方式是在Intent的扩展中


330
00:17:44,531 --> 00:17:46,567 line:-1
从Handle方法中


331
00:17:46,967 --> 00:17:48,669 line:-2
返回INPlayMediaIntent响应代码
continueInApp


332
00:17:50,204 --> 00:17:52,139 line:-1
这个代码将在前台启动app


333
00:17:52,673 --> 00:17:55,409 line:-2
并在app中把Intent转给
WKExtension委托


334
00:17:58,478 --> 00:17:59,746 line:-1
你要注意app的Handle方法


335
00:17:59,813 --> 00:18:01,548 line:-2
看起来与iOS上的
那个方法非常相似


336
00:18:02,249 --> 00:18:04,084 line:-1
Signature方法有点不一样


337
00:18:04,484 --> 00:18:06,353 line:-2
但你需要从
NSUser Activities


338
00:18:06,420 --> 00:18:09,056 line:-2
Interaction属性中
读取Intent


339
00:18:09,623 --> 00:18:11,091 line:-1
然后跟iOS上一样


340
00:18:11,158 --> 00:18:12,626 line:-1
读取要播放的媒体项


341
00:18:13,260 --> 00:18:14,628 line:-1
并开始在app中播放


342
00:18:16,897 --> 00:18:17,998 line:-1
有一个警告


343
00:18:18,365 --> 00:18:20,167 line:-2
你要在watchOS上的
Resolve方法中


344
00:18:20,601 --> 00:18:22,336 line:-1
使用设备上的缓存


345
00:18:22,870 --> 00:18:24,204 line:-1
仅通过网络


346
00:18:24,271 --> 00:18:25,572 line:-1
如果绝对必要的话


347
00:18:28,342 --> 00:18:30,077 line:-1
因此我们知道当某人说


348
00:18:30,444 --> 00:18:32,246 line:-2
“在我的app中播放
Awesome Song” 时


349
00:18:33,013 --> 00:18:34,681 line:-1
请求处理的第一个步骤


350
00:18:35,015 --> 00:18:36,383 line:-1
是查找要播放的媒体项


351
00:18:37,684 --> 00:18:39,419 line:-1
我们查看了一个以前的实施


352
00:18:39,887 --> 00:18:41,822 line:-1
我们核对了媒体项的名称的值


353
00:18:42,189 --> 00:18:43,924 line:-1
和Intent的媒体名称属性


354
00:18:45,158 --> 00:18:46,727 line:-1
完全匹配


355
00:18:47,494 --> 00:18:50,731 line:-2
那么在那个实施中我们还没有考虑到
哪些极端情况呢？


356
00:18:53,066 --> 00:18:55,469 line:-2
第一个是我们之前的方法
没有做正确的事


357
00:18:55,769 --> 00:18:58,539 line:-1
如果存在错配或标点符号


358
00:18:59,473 --> 00:19:00,607 line:-1
那么在这个例子中


359
00:19:00,674 --> 00:19:02,009 line:-2
“在我的app中
播放‘hello’”


360
00:19:02,276 --> 00:19:05,012 line:-2
我们可以看到一些
字符串精确对比失败的例子


361
00:19:06,413 --> 00:19:09,950 line:-2
准确的歌曲标题是
大写的HELLO加叹号


362
00:19:10,617 --> 00:19:12,686 line:-1
Siri语音引擎不可能


363
00:19:12,753 --> 00:19:14,221 line:-1
给我们提供小写的hello


364
00:19:14,755 --> 00:19:17,424 line:-2
或也许它给我们提供了一个
大写的HELLO但不带叹号


365
00:19:18,025 --> 00:19:20,294 line:-1
因此在Resolve方法中


366
00:19:20,727 --> 00:19:22,796 line:-1
忽略大小写和标点符号非常重要


367
00:19:24,965 --> 00:19:26,099 line:-2
（在Resolve中
写一个有效的搜索方法）


368
00:19:26,166 --> 00:19:28,302 line:-1
类似地 许多音乐实体


369
00:19:28,368 --> 00:19:31,205 line:-1
标题中有人们要么不表达


370
00:19:31,872 --> 00:19:34,775 line:-1
要么以一种不能与媒体项的标题


371
00:19:34,842 --> 00:19:35,909 line:-1
精确匹配的方式表达的内容


372
00:19:36,643 --> 00:19:39,446 line:-1
比如许多专辑发布了精装版


373
00:19:40,113 --> 00:19:42,983 line:-2
当人们请求播放专辑时
人们不会提到这个


374
00:19:44,351 --> 00:19:45,352 line:-1
他们不会说


375
00:19:45,719 --> 00:19:48,088 line:-2
“在我的app中播放专辑
Outer Peace的精装版”


376
00:19:48,488 --> 00:19:50,824 line:-2
而是会说“在我的app中播放专辑
《Outer Peace》”


377
00:19:51,992 --> 00:19:53,493 line:-1
而电影原声是另一个例子


378
00:19:54,528 --> 00:19:56,129 line:-2
人们不会说—
人们会说


379
00:19:56,196 --> 00:19:58,031 line:-2
“在我的app中播放
Rocket Man电影原声”


380
00:19:58,832 --> 00:20:00,968 line:-1
但他们不会说“来自电影的音乐”


381
00:20:02,603 --> 00:20:04,271 line:-1
最后许多嘻哈音乐的标题中


382
00:20:04,605 --> 00:20:06,473 line:-1
都有缩写


383
00:20:07,174 --> 00:20:11,378 line:-1
因此人们要么不说 要么说“特色”


384
00:20:11,445 --> 00:20:13,580 line:-1
因此这里不适用精确匹配


385
00:20:19,820 --> 00:20:22,055 line:-1
并且播客也有一些情况


386
00:20:22,122 --> 00:20:26,126 line:-2
人们所说的内容与实体标题
所包含的内容不匹配


387
00:20:27,194 --> 00:20:30,097 line:-2
有些播客在标题中包含
“播客”这个词


388
00:20:30,831 --> 00:20:32,099 line:-1
因此如果某人说


389
00:20:32,399 --> 00:20:34,701 line:-2
“在我的app播客中播放
Stuff You Should Know”


390
00:20:35,502 --> 00:20:40,674 line:-2
Siri会在播客的媒体项类型中解析
Stuff You Should Know


391
00:20:41,542 --> 00:20:43,777 line:-1
因此这里也不适用精确匹配


392
00:20:45,279 --> 00:20:49,316 line:-1
此外 有些播客既有音频又有视频


393
00:20:49,383 --> 00:20:51,718 line:-2
并且标题中出现了
音频或视频这两个词


394
00:20:52,619 --> 00:20:55,255 line:-2
但SiriKit Media
暗指音频


395
00:20:55,656 --> 00:20:57,157 line:-1
因此人们也不会那样说


396
00:20:59,960 --> 00:21:02,529 line:-2
最后请记住
你正在做的是语音识别器


397
00:21:03,163 --> 00:21:06,533 line:-2
并且语音识别器
可能会有文字格式变化


398
00:21:07,000 --> 00:21:09,269 line:-1
如果有人要求播放歌曲81st


399
00:21:09,570 --> 00:21:13,607 line:-1
你会得到数字81st或文字八十一


400
00:21:15,275 --> 00:21:17,611 line:-2
或如果某人要求播放歌曲
“I Love You Son”


401
00:21:17,678 --> 00:21:19,780 line:-1
你会得到sun或son


402
00:21:22,082 --> 00:21:24,051 line:-1
现在Siri会尽最大努力


403
00:21:24,618 --> 00:21:27,054 line:-1
为你提供它所了解的实体标题


404
00:21:27,754 --> 00:21:32,860 line:-2
但…最好是在Resolve方法中
应用一些弹性搜索


405
00:21:37,030 --> 00:21:38,899 line:-2
当你实施
SiriKit Media支持时


406
00:21:39,266 --> 00:21:42,669 line:-2
你通过从Resolve方法中
返回的INMediaItem对象


407
00:21:42,736 --> 00:21:44,037 line:-1
控制Siri说什么


408
00:21:45,105 --> 00:21:46,206 line:-1
你可以从这里看到


409
00:21:46,607 --> 00:21:50,244 line:-2
用户请求
在Control Audio中


410
00:21:50,577 --> 00:21:51,645 line:-2
播放Special Disaster Team的歌曲
“Maybe Sometime”


411
00:21:52,212 --> 00:21:53,280 line:-1
而Siri说


412
00:21:53,347 --> 00:21:56,116 line:-2
“这是Special Disaster Team的
‘Maybe Sometime’


413
00:21:56,183 --> 00:21:57,317 line:-1
来自Control Audio”


414
00:21:59,152 --> 00:22:01,421 line:-2
在这种情况下 所返回的
INMediaItem


415
00:22:01,855 --> 00:22:03,924 line:-2
有一个标题属性是
“Maybe Sometime”


416
00:22:04,224 --> 00:22:06,326 line:-2
歌手属性是
Special Disaster Team


417
00:22:07,427 --> 00:22:11,598 line:-2
因此一定要在所返回的媒体项中
填充标题、歌手和类型


418
00:22:12,099 --> 00:22:15,869 line:-2
因为这些都会对Siri所说的内容
产生影响


419
00:22:16,870 --> 00:22:17,905 line:-1
有一件事要注意


420
00:22:18,238 --> 00:22:20,507 line:-2
如果你在Resolve方法中
返回一个以上的媒体项


421
00:22:20,974 --> 00:22:22,910 line:-1
Siri会指向列表中的第一项


422
00:22:25,546 --> 00:22:28,582 line:-2
在SiriKit Media中
恰当地处理报错


423
00:22:28,649 --> 00:22:29,750 line:-1
非常重要


424
00:22:30,484 --> 00:22:32,920 line:-2
当你与一个聪明的助手比如Siri
进行交互时


425
00:22:33,520 --> 00:22:35,856 line:-2
当某些事情发生时
不清楚它为什么会发生


426
00:22:36,390 --> 00:22:38,258 line:-1
并且恰当地处理报错


427
00:22:38,625 --> 00:22:40,827 line:-1
会让用户了解发生了什么


428
00:22:40,894 --> 00:22:42,362 line:-1
当出错时


429
00:22:42,429 --> 00:22:43,463 line:-1
（错误）


430
00:22:43,530 --> 00:22:45,265 line:-1
你最经常遇到的情况是


431
00:22:45,666 --> 00:22:47,501 line:-1
从app目录中找不到


432
00:22:47,568 --> 00:22:48,569 line:-1
用户所请求的内容


433
00:22:49,403 --> 00:22:52,940 line:-2
你可以通过从Resolve
媒体项中返回


434
00:22:53,006 --> 00:22:54,341 line:-2
Unsupported Resolution
结果来处理这种情况


435
00:22:55,242 --> 00:22:56,877 line:-1
但还可能发生许多其它错误


436
00:22:57,678 --> 00:23:00,848 line:-2
也许有人请求播放
需要蜂窝数据的内容


437
00:23:01,248 --> 00:23:03,483 line:-1
但却关闭了你app中的蜂窝数据


438
00:23:04,685 --> 00:23:08,021 line:-1
或也许他们要求播放需要订阅的内容


439
00:23:08,322 --> 00:23:09,289 line:-1
但他们却没有订阅


440
00:23:10,724 --> 00:23:13,760 line:-2
INPlayMediaMediaItem
UnsupportedReason中有完整列表


441
00:23:14,494 --> 00:23:16,997 line:-2
并且对全部四个Intent的命名
都大体相似


442
00:23:17,531 --> 00:23:19,766 line:-2
因此要在你支持的
全部Intent中采用它们


443
00:23:20,300 --> 00:23:22,836 line:-1
现在让我们谈谈


444
00:23:22,903 --> 00:23:24,404 line:-1
人们对Siri说的一些不同的内容


445
00:23:24,471 --> 00:23:25,706 line:-1
以及如何


446
00:23:26,206 --> 00:23:28,942 line:-2
在SiriKit Media
实施中处理它们


447
00:23:29,009 --> 00:23:30,143 line:-1
（人们可能会对Siri说的内容）


448
00:23:31,512 --> 00:23:33,947 line:-2
人们最可能对Siri说
的内容之一就是


449
00:23:34,281 --> 00:23:35,282 line:-1
“播放我的app”


450
00:23:35,849 --> 00:23:38,185 line:-1
他们不会告诉你具体要播放什么


451
00:23:39,353 --> 00:23:42,256 line:-2
那是你作为SiriKit Media
开发人员的工作


452
00:23:42,689 --> 00:23:44,925 line:-1
你要选择做正确的事


453
00:23:46,026 --> 00:23:48,929 line:-1
这变得和恢复现有排序一样简单了


454
00:23:49,730 --> 00:23:52,232 line:-1
如果不是有声书或播客app


455
00:23:52,699 --> 00:23:54,735 line:-1
这很可能是最合理的行为


456
00:23:55,969 --> 00:23:58,105 line:-2
但你可以尽可能地
把行为变得更动态化


457
00:23:58,939 --> 00:24:02,009 line:-1
也许你想把他们指向推荐播放列表


458
00:24:02,609 --> 00:24:04,044 line:-1
或一些很火的新热门音乐


459
00:24:04,611 --> 00:24:05,579 line:-1
选择权在你


460
00:24:06,180 --> 00:24:08,248 line:-2
如何知道某人说了
“播放我的app”呢


461
00:24:08,949 --> 00:24:12,619 line:-2
在INMediaSearch
对象中没有指定的搜索条件


462
00:24:13,253 --> 00:24:15,022 line:0
有一件事听起来像是个好主意


463
00:24:15,355 --> 00:24:16,957 line:0
就是询问用户要播放什么内容


464
00:24:17,658 --> 00:24:20,661 line:0
但是与不推荐使用
Confirm的原因相同


465
00:24:21,195 --> 00:24:22,996 line:0
我们不推荐这种方案


466
00:24:23,730 --> 00:24:25,766 line:0
在用户面前弹出对话框


467
00:24:26,233 --> 00:24:29,603 line:0
是他们退出SiriKit Media
体验的最常见的理由


468
00:24:32,706 --> 00:24:35,309 line:0
用户可以使用额外控制
对播放进行初始化


469
00:24:36,143 --> 00:24:38,946 line:0
并且其中所支持的选项有重复播放、
随机播放、恢复播放


470
00:24:39,012 --> 00:24:40,280 line:0
和按顺序播放


471
00:24:41,148 --> 00:24:43,717 line:0
如果你的app支持这些功能


472
00:24:44,251 --> 00:24:46,854 line:0
请一定在
INPlayMediaIntent实施中


473
00:24:47,454 --> 00:24:48,455 line:-1
也支持它们


474
00:24:50,123 --> 00:24:52,759 line:-2
人们还会请求播放
有多个搜索选项的内容


475
00:24:53,727 --> 00:24:56,163 line:-2
最有用的搜索选项之一
是Sort参数


476
00:24:56,964 --> 00:24:58,031 line:-1
你可以说比如


477
00:24:58,098 --> 00:25:00,667 line:-2
“在我的app播客中播放新一集的
Stuff You Should Know”


478
00:25:00,734 --> 00:25:02,436 line:-2
然后你会得到最新的
INMediaSortOrder


479
00:25:03,370 --> 00:25:05,539 line:-1
或你可以按歌手请求最佳专辑


480
00:25:05,606 --> 00:25:07,407 line:-2
你将得到最佳的
INMediaSortOrder


481
00:25:08,141 --> 00:25:10,711 line:-1
或你可以要求app推荐


482
00:25:10,978 --> 00:25:13,013 line:-2
你将得到推荐的
INMediaSortOrder


483
00:25:13,881 --> 00:25:15,983 line:-2
请从INMediaSortOrder中
查看完整列表


484
00:25:18,318 --> 00:25:21,388 line:-2
另一个强大的搜索选项是
Reference属性


485
00:25:21,755 --> 00:25:24,057 line:-2
它包含INMediaReferenceCurrently
播放


486
00:25:25,225 --> 00:25:29,496 line:-2
这对于INAddMediaIntent
或INUpdateMediaIntent非常有用


487
00:25:29,930 --> 00:25:33,000 line:-1
因为人们可以轻松地向媒体库


488
00:25:33,066 --> 00:25:34,635 line:-2
或播放列表中
添加当前播放的媒体项


489
00:25:35,035 --> 00:25:38,238 line:-2
或者他们会告诉app他们喜欢
或讨厌当前所播放的媒体项


490
00:25:39,306 --> 00:25:40,674 line:-1
还有一件事要注意


491
00:25:40,741 --> 00:25:43,410 line:-2
如果你在
MPNowPlayingInfo中心


492
00:25:43,477 --> 00:25:45,112 line:-1
填充了外部内容识别器


493
00:25:45,746 --> 00:25:49,416 line:-2
那个识别器将出现在
INMediaSearch的识别器属性中


494
00:25:49,716 --> 00:25:51,518 line:-1
因此你就能了解具体要找哪个媒体项


495
00:25:55,055 --> 00:25:58,592 line:-2
现在告诉Siri更多关于
客户如何使用你的app的信息


496
00:25:58,859 --> 00:26:02,362 line:-2
会帮助Siri提供极好的
SiriKit Media体验


497
00:26:02,429 --> 00:26:03,430 line:-1
（告诉Siri有关客户的信息）


498
00:26:03,964 --> 00:26:05,098 line:0
（词汇表）


499
00:26:06,667 --> 00:26:08,836 line:0
当你给Siri提供用户词汇表时


500
00:26:09,670 --> 00:26:12,239 line:0
这会帮助Siri了解你的部分目录


501
00:26:12,539 --> 00:26:14,174 line:0
对客户有吸引力


502
00:26:14,908 --> 00:26:15,909 line:0
有一点需要留意 非常重要


503
00:26:15,976 --> 00:26:18,378 line:0
它不是app目录的完整内容


504
00:26:18,745 --> 00:26:21,048 line:0
它只是你的客户


505
00:26:21,114 --> 00:26:22,316 line:0
特别感兴趣的部分内容


506
00:26:23,550 --> 00:26:26,220 line:0
还有一件非常重要的事要注意
词汇表是按顺序排列的


507
00:26:26,687 --> 00:26:29,423 line:0
因此一定要在词汇表的开端


508
00:26:29,756 --> 00:26:30,924 line:0
包含最重要的词


509
00:26:32,259 --> 00:26:34,228 line:0
并根据app所支持的媒体类型


510
00:26:34,628 --> 00:26:36,096 line:0
向Siri发送不同的类型


511
00:26:37,331 --> 00:26:40,968 line:0
音乐app应该使用
播放列表标题和歌手名字


512
00:26:41,802 --> 00:26:45,205 line:0
有声书app应该使用
有声书标题和作者


513
00:26:45,939 --> 00:26:48,642 line:0
而播客app应该使用显示标题


514
00:26:50,244 --> 00:26:54,581 line:0
对于那些适用于全部用户的功能


515
00:26:54,982 --> 00:26:57,751 line:0
请查看SiriKit中的
全球词汇支持


516
00:26:59,386 --> 00:27:00,554 line:-1
（总结）


517
00:27:00,888 --> 00:27:02,022 line:-1
总的来说


518
00:27:02,089 --> 00:27:04,224 line:-2
我们发布了新的
SiriKit Media Intent


519
00:27:04,658 --> 00:27:07,361 line:-2
允许你使用Siri
控制你的音频app


520
00:27:07,995 --> 00:27:09,897 line:-1
你将可以播放、添加、


521
00:27:10,364 --> 00:27:11,632 line:-1
更新品味介绍


522
00:27:11,899 --> 00:27:13,934 line:-1
并使用新Intent搜索媒体项


523
00:27:14,868 --> 00:27:17,738 line:-1
尽可能地提供最佳体验非常重要


524
00:27:18,505 --> 00:27:21,542 line:-1
你可以通过弹性搜索来实现


525
00:27:22,309 --> 00:27:25,212 line:-2
但人们并不会表明
他们具体要播放什么


526
00:27:26,246 --> 00:27:28,182 line:-1
你可以恰当地处理错误


527
00:27:28,815 --> 00:27:31,218 line:-2
从而当发生错误时
用户会了解发生了什么


528
00:27:32,419 --> 00:27:34,087 line:-1
并且你一定要


529
00:27:34,354 --> 00:27:36,623 line:-2
恰当地构建
INMediaItem对象


530
00:27:37,057 --> 00:27:39,726 line:-2
从而使尽可能地
让Siri说出最佳对话


531
00:27:40,794 --> 00:27:43,697 line:-1
最后一定要尽可能地给Siri


532
00:27:43,997 --> 00:27:48,502 line:-1
提供重要的情境信息


533
00:27:49,136 --> 00:27:50,337 line:-2
从而使Siri以客户名义
作出最佳选择


534
00:27:52,973 --> 00:27:56,043 line:0
请参加我们的讨论会
并查看在线文档


535
00:27:56,910 --> 00:27:58,779 line:0
我们认为你们一定会喜欢


536
00:27:58,846 --> 00:28:00,480 line:0
用新SiriKit Media Intent
来创建app


537
00:28:00,781 --> 00:28:02,449 line:0
并且我们已经迫不及待地
想看到你们会创建什么了


538
00:28:02,749 --> 00:28:03,650 line:0
谢谢


539
00:28:03,917 --> 00:28:05,986 line:0
（欲知更多信息 请登录
DEVELOPER.APPLE.COM/WWDC19/207）

