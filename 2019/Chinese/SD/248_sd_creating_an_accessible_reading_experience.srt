1
00:00:05,906 --> 00:00:06,907 line:0
（创建一个良好的辅助阅读体验）


2
00:00:06,974 --> 00:00:07,808 line:0
大家好


3
00:00:07,875 --> 00:00:11,311 line:0
欢迎大家参加
创建一个良好的辅助阅读体验


4
00:00:11,645 --> 00:00:12,846 line:0
我是Darren Minifie


5
00:00:12,913 --> 00:00:15,782 line:0
我是Accessibility
团队的项目工程管理人员


6
00:00:17,384 --> 00:00:21,188 line:-2
一个优秀的app的特质之一是
体验优秀的用户界面


7
00:00:21,555 --> 00:00:24,324 line:-1
它涉及到布局设计和字体


8
00:00:24,391 --> 00:00:26,460 line:-1
特别是那些以长篇阅读


9
00:00:26,527 --> 00:00:29,563 line:-1
为主要功能的app


10
00:00:30,497 --> 00:00:32,299 line:-1
实现一个自定义的文字布局


11
00:00:32,366 --> 00:00:34,535 line:-1
你经常需要使用一些低水平的技术


12
00:00:34,601 --> 00:00:36,537 line:-2
比如Core Text
和TextKit


13
00:00:37,504 --> 00:00:40,340 line:-2
本次演讲 你将会了解
你需要知道的API和技术


14
00:00:40,407 --> 00:00:41,675 line:-1
来为旁白创建一个


15
00:00:41,742 --> 00:00:44,178 line:-1
良好的辅助阅读体验


16
00:00:45,445 --> 00:00:47,080 line:-2
（阅读内容协议
自定义朗诵）


17
00:00:47,147 --> 00:00:50,050 line:-1
首先 我们来聊一下阅读内容协议


18
00:00:50,317 --> 00:00:53,453 line:-2
使用本协议
来让你的文字内容更易获取


19
00:00:53,887 --> 00:00:56,356 line:-1
下面 我们来讲一下自动翻页


20
00:00:56,690 --> 00:00:59,793 line:-2
在你的app中
使用旁白来翻页


21
00:01:00,661 --> 00:01:02,963 line:-2
最后 我们将会讨论
你能使用的API


22
00:01:03,030 --> 00:01:06,066 line:-1
来自定义旁白朗诵你的内容的方式


23
00:01:08,802 --> 00:01:10,971 line:-2
本次演讲
我们将会使用如下app案例


24
00:01:11,038 --> 00:01:12,673 line:-1
来介绍你需要知道的技术


25
00:01:14,174 --> 00:01:16,310 line:-1
这是一个基于页面设计的简单app


26
00:01:16,376 --> 00:01:20,147 line:-2
每个页面都包含一张图片
一个标题 一个副标题


27
00:01:20,214 --> 00:01:21,648 line:-1
和一些详细的文字


28
00:01:23,317 --> 00:01:24,852 line:-1
为了让你的app更易被获取


29
00:01:24,918 --> 00:01:26,887 line:-1
你需要先使用旁白进行试听


30
00:01:28,355 --> 00:01:29,389 line:-1
最方便的方法是


31
00:01:29,456 --> 00:01:32,092 line:-1
在你的辅助捷径中加入旁白


32
00:01:32,359 --> 00:01:34,428 line:-1
先打开设置


33
00:01:35,028 --> 00:01:36,597 line:-1
点击访问


34
00:01:36,997 --> 00:01:39,299 line:-1
向下滚动至访问捷径


35
00:01:39,766 --> 00:01:41,268 line:-1
然后点击旁白


36
00:01:42,035 --> 00:01:43,837 line:-1
现在 根据设备的不同


37
00:01:43,904 --> 00:01:46,473 line:-2
你需要点击主画面按钮
或是侧边按钮三次


38
00:01:46,540 --> 00:01:48,775 line:-1
来快速启用和禁用旁白


39
00:01:50,911 --> 00:01:53,680 line:-2
我们来看一下旁白
是如何在示例app中使用的


40
00:01:54,915 --> 00:01:56,016 line:-1
旁白开启


41
00:01:58,185 --> 00:02:00,153 line:-1
当我用手在屏幕上拖动时


42
00:02:00,220 --> 00:02:01,788 line:-1
旁白有一个音效反馈


43
00:02:01,855 --> 00:02:04,124 line:-1
告诉我这里没有内容


44
00:02:04,525 --> 00:02:08,294 line:-1
要让我们的文本阅读辅助


45
00:02:09,729 --> 00:02:11,532 line:-1
我们要做的第一件事是


46
00:02:11,598 --> 00:02:15,002 line:-2
使用
UIAccessibilityReadingContent协议


47
00:02:15,269 --> 00:02:17,704 line:-1
这个协议包含4个核心的方法


48
00:02:19,306 --> 00:02:21,408 line:-1
AccessibilityLineNumber(forpoint


49
00:02:21,475 --> 00:02:24,645 line:-1
索要返回触摸点的所在行数


50
00:02:25,445 --> 00:02:27,347 line:-1
AccessibilityContent(forLineNumber


51
00:02:27,414 --> 00:02:29,616 line:-1
以及accessibilityFrame(forLineNumber


52
00:02:29,683 --> 00:02:33,520 line:-2
分别索要返回某行的
文字内容和行的高宽


53
00:02:34,454 --> 00:02:36,857 line:-1
最后 accessibilityPageContent


54
00:02:36,924 --> 00:02:39,927 line:-2
向你索要返回
整个页面有用的内容


55
00:02:41,795 --> 00:02:44,965 line:-2
现在我们来看一下
如何在我们的app实现


56
00:02:45,032 --> 00:02:46,166 line:-1
UIAccessibilityReadingContent协议


57
00:02:47,201 --> 00:02:48,402 line:-1
示例app的每个页面


58
00:02:48,468 --> 00:02:51,438 line:-2
都是SessionItemView
的一个实例


59
00:02:52,706 --> 00:02:54,741 line:-1
这个视图有4个子视图


60
00:02:54,808 --> 00:02:56,476 line:-1
一个图像视图


61
00:02:56,543 --> 00:02:57,544 line:-1
一个标题标签


62
00:02:57,611 --> 00:02:58,812 line:-1
一个标识符标签


63
00:02:58,879 --> 00:03:00,214 line:-1
以及一个会话详情视图


64
00:03:02,182 --> 00:03:04,551 line:-1
我们额外声明了一个layout枚举


65
00:03:04,618 --> 00:03:07,454 line:-2
这会帮助我们
实现相应的方法


66
00:03:10,023 --> 00:03:11,258 line:-1
第一件我们要做的事情是


67
00:03:11,325 --> 00:03:13,927 line:-1
通过在页面视图的初始化配置


68
00:03:14,328 --> 00:03:17,331 line:-1
isAccessibilityElement为true


69
00:03:17,397 --> 00:03:19,233 line:-2
将我们的页面视图
设成一个辅助元素


70
00:03:21,969 --> 00:03:25,205 line:-2
接下来 我们开始实现
阅读内容协议


71
00:03:25,706 --> 00:03:28,542 line:-2
第一个函数是
accessibilityLineNumber(forpoint


72
00:03:29,643 --> 00:03:33,647 line:-2
首先 我们使用过去的行数
执行hitTest方法


73
00:03:34,648 --> 00:03:37,751 line:-2
如果最终的视图是
我们已知的子视图之一


74
00:03:37,818 --> 00:03:41,421 line:-1
我们会映射到相应的layout枚举值


75
00:03:41,688 --> 00:03:43,524 line:-1
最后 我们返回rawValue


76
00:03:43,590 --> 00:03:46,460 line:-1
这是旁白能理解的描述


77
00:03:49,129 --> 00:03:52,366 line:-2
接着 实现
AccessibilityContent(forLineNumber方法


78
00:03:52,699 --> 00:03:56,003 line:-1
首先 初始化一个layout枚举实例


79
00:03:56,470 --> 00:03:58,205 line:-1
使用switch函数将值


80
00:03:58,272 --> 00:04:00,641 line:-1
映射到相应的我们已知的子视图


81
00:04:01,008 --> 00:04:03,310 line:-1
最后我们返回accessibilityLabel


82
00:04:03,377 --> 00:04:05,512 line:-1
就是返回子视图的文字


83
00:04:08,348 --> 00:04:11,118 line:-1
accessibilityFrame(forLineNumber


84
00:04:11,185 --> 00:04:12,286 line:-1
方法的实现非常简单


85
00:04:13,253 --> 00:04:16,255 line:-1
首先 使用我们已知的rawValue


86
00:04:16,322 --> 00:04:18,091 line:-1
初始化一个layout枚举实例


87
00:04:18,591 --> 00:04:20,459 line:-1
使用switch函数将值


88
00:04:20,527 --> 00:04:23,063 line:-1
映射到相应的我们已知的子视图


89
00:04:23,564 --> 00:04:25,766 line:-1
最后 我们返回accessibilityFrame


90
00:04:25,832 --> 00:04:28,268 line:-1
它表示了一行的宽和高


91
00:04:30,804 --> 00:04:34,074 line:-2
最后 我们来实现
accessibilityPageContent方法


92
00:04:34,141 --> 00:04:36,610 line:-2
我们从我们已知的子视图
收集文字内容


93
00:04:36,677 --> 00:04:38,645 line:-1
然后已单个字符串的形式返回


94
00:04:41,882 --> 00:04:44,017 line:-1
完成了阅读内容协议


95
00:04:44,084 --> 00:04:46,587 line:-2
我们来看下如何
在app内使用旁白


96
00:04:47,855 --> 00:04:49,289 line:-1
可获取的拖放


97
00:04:49,690 --> 00:04:51,325 line:-1
演讲241


98
00:04:51,959 --> 00:04:53,460 line:-1
拖放是一个强大的API


99
00:04:53,527 --> 00:04:55,696 line:-1
它允许app分享和交互数据


100
00:04:55,963 --> 00:04:58,699 line:-1
这一次 我在屏幕中拖动我的手指


101
00:04:58,765 --> 00:05:02,302 line:-2
旁白朗诵并
高亮了相应的文字内容


102
00:05:04,805 --> 00:05:07,574 line:-1
下面 我们来讲一下自动翻页


103
00:05:08,308 --> 00:05:10,711 line:-2
当旁白的
阅读全部命令被触发了


104
00:05:10,777 --> 00:05:12,980 line:-1
旁白将会从头到尾


105
00:05:13,046 --> 00:05:15,315 line:-1
朗诵所有的文字内容


106
00:05:15,616 --> 00:05:18,585 line:-2
旁白这是就可能需要
在你的app中自动翻页


107
00:05:19,419 --> 00:05:21,455 line:-1
实现自动翻页的方法


108
00:05:21,522 --> 00:05:24,324 line:-2
你需要知道两个
accessibility API


109
00:05:24,658 --> 00:05:28,095 line:-1
首先 你应该在你的页面视图使用


110
00:05:28,161 --> 00:05:29,329 line:-1
causesPageTurn辅助特征方法


111
00:05:30,130 --> 00:05:33,667 line:-2
第二 你应该实现
AccessibilityScroll控制方向的方法


112
00:05:33,734 --> 00:05:37,070 line:-2
旁白就能
在你的app里自动翻页了


113
00:05:37,971 --> 00:05:39,273 line:-1
我们来看一下如何


114
00:05:39,339 --> 00:05:41,675 line:-1
在我们的app实现自动翻页的功能


115
00:05:43,310 --> 00:05:47,080 line:-2
首先 我们需要实现
causesPageTurn辅助特征方法


116
00:05:47,514 --> 00:05:51,385 line:-2
我们在页面视图的初始化函数中
配置辅助特征


117
00:05:53,520 --> 00:05:56,657 line:-2
接下来 我们实现
accessibilityScroll和direction


118
00:05:57,124 --> 00:05:59,359 line:-2
我们根据
direction参数不同


119
00:05:59,426 --> 00:06:00,961 line:-2
对应到switch的
相应事件来处理


120
00:06:01,828 --> 00:06:04,164 line:-2
如果direction的值是
上一个或者左


121
00:06:04,231 --> 00:06:06,834 line:-1
我们让代理返回到前一页


122
00:06:07,234 --> 00:06:08,335 line:-1
如果成功的话


123
00:06:08,402 --> 00:06:11,772 line:-2
我们会向旁白发送一则
pageScrolled消息


124
00:06:13,874 --> 00:06:17,110 line:-2
如果direction的值
是右或下一个


125
00:06:17,177 --> 00:06:19,580 line:-1
我们让代理翻到下一页


126
00:06:19,646 --> 00:06:20,781 line:-1
如果成功的话


127
00:06:20,848 --> 00:06:23,984 line:-2
我们会向旁白发送一则
pageScrolled消息


128
00:06:27,354 --> 00:06:31,225 line:-2
我们来看一下app
是如何实现自动翻页功能的


129
00:06:32,359 --> 00:06:35,162 line:-1
可获取的拖放 演讲241


130
00:06:35,229 --> 00:06:36,763 line:-1
拖拽是一个强大的API


131
00:06:36,830 --> 00:06:38,999 line:-1
它允许app之间分享和交流数据


132
00:06:39,066 --> 00:06:41,401 line:-2
不论你决定如何在app实现
拖拽的动作


133
00:06:41,468 --> 00:06:44,371 line:-1
有一个帮有需要的用户操作的方法


134
00:06:44,438 --> 00:06:47,841 line:-2
学习我们为iOS设计的
易用拖拽功能的更多细节


135
00:06:49,409 --> 00:06:50,744 line:-1
AVSpeechSynthesizer


136
00:06:50,811 --> 00:06:52,012 line:-1
让iOS说话


137
00:06:52,079 --> 00:06:53,747 line:-1
演讲236


138
00:06:55,082 --> 00:06:57,551 line:-1
我们最后一个主题是自定义演讲


139
00:06:57,851 --> 00:07:01,421 line:-2
你可能需要控制app内
旁白朗诵内容的方式


140
00:07:01,788 --> 00:07:04,124 line:-1
你需要使用2个阅读内容协议


141
00:07:04,191 --> 00:07:06,026 line:-1
的替代方法来实现


142
00:07:06,360 --> 00:07:09,196 line:-2
这些方法会返回
NSAttributedStrings


143
00:07:09,263 --> 00:07:10,764 line:-1
而不是简单的字符


144
00:07:11,398 --> 00:07:14,168 line:-1
通过支持合适的辅助属性


145
00:07:14,234 --> 00:07:15,836 line:-1
你能对旁白朗读你的内容


146
00:07:15,903 --> 00:07:18,238 line:-1
的方式进行各种细节控制


147
00:07:19,873 --> 00:07:22,843 line:-1
比如 你可能需要用另一种语言


148
00:07:22,910 --> 00:07:24,444 line:-1
来朗诵某个段落


149
00:07:24,778 --> 00:07:28,482 line:-2
这时 你就需要使用
accessibilitySpeechLanguage属性


150
00:07:28,549 --> 00:07:31,051 line:-1
和相应语言的识别


151
00:07:31,718 --> 00:07:34,221 line:-1
这时 旁白会使用最适合


152
00:07:34,288 --> 00:07:35,656 line:-1
的语言来朗诵你的文字


153
00:07:37,491 --> 00:07:38,692 line:-1
巴黎凯旋门


154
00:07:40,260 --> 00:07:42,663 line:-1
更进一步 你可能想更深入了解如何


155
00:07:42,729 --> 00:07:45,232 line:-1
控制旁白朗诵你的内容


156
00:07:45,599 --> 00:07:46,500 line:-1
我们来看下实现步骤


157
00:07:46,567 --> 00:07:49,903 line:-1
你可以使用IPA和


158
00:07:49,970 --> 00:07:54,141 line:-2
accessibilitySpeechIPANotation
属性来描述你的文章


159
00:07:54,975 --> 00:07:56,610 line:-1
约塞米蒂国家公园


160
00:07:59,179 --> 00:08:02,883 line:-2
所以 想要用旁白
创建良好的阅读体验


161
00:08:02,950 --> 00:08:05,719 line:-1
你的文字内容需要让用户可以获取


162
00:08:05,786 --> 00:08:10,057 line:-2
你需要遵循
UIAccessibilityReadingContent协议


163
00:08:10,624 --> 00:08:13,260 line:-1
接下来 是自动翻页功能


164
00:08:13,327 --> 00:08:15,696 line:-2
这样旁白就能
从头到尾


165
00:08:15,762 --> 00:08:17,197 line:-1
朗诵你app的所有内容了


166
00:08:18,098 --> 00:08:22,069 line:-2
最后 为了控制旁白
朗诵你内容的方式


167
00:08:22,135 --> 00:08:24,938 line:-2
你可以考虑使用
阅读内容协议中的


168
00:08:25,005 --> 00:08:27,341 line:-2
NS属性的strings版本
的方法


169
00:08:27,407 --> 00:08:30,244 line:-2
并支持最合适的
accessibility属性


170
00:08:31,712 --> 00:08:36,015 line:-2
想要了解这个话题的更多内容
请访问演讲的链接


171
00:08:37,384 --> 00:08:38,652 line:-1
谢谢你的观看

