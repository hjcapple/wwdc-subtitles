1
00:00:01,516 --> 00:00:05,686
[ Music ]


2
00:00:06,186 --> 00:00:07,966
>> Hi, my name is Forest, and


3
00:00:07,966 --> 00:00:09,166
I'm excited to talk to you about


4
00:00:09,166 --> 00:00:10,916
new ways for apps to get runtime


5
00:00:10,916 --> 00:00:11,726
on Apple Watch.


6
00:00:12,396 --> 00:00:13,406
We'll review some of the


7
00:00:13,406 --> 00:00:15,166
existing background modes as


8
00:00:15,166 --> 00:00:16,686
well as the details of a new API


9
00:00:16,776 --> 00:00:18,506
we've added in watchOS 6 to


10
00:00:18,506 --> 00:00:19,946
enable more kinds of apps to get


11
00:00:19,946 --> 00:00:20,816
extended runtime.


12
00:00:21,176 --> 00:00:22,756
Brief interactions are what make


13
00:00:22,756 --> 00:00:23,796
Apple Watch powerful.


14
00:00:24,636 --> 00:00:25,676
You might raise your wrist to


15
00:00:25,676 --> 00:00:27,526
check the time, the temperature,


16
00:00:27,766 --> 00:00:29,096
your calendar or other


17
00:00:29,096 --> 00:00:30,156
information that's clearly


18
00:00:30,156 --> 00:00:31,446
visible on the watch face via


19
00:00:31,446 --> 00:00:32,415
complication.


20
00:00:33,386 --> 00:00:34,656
You might check a notification


21
00:00:34,656 --> 00:00:36,366
from a language learning app.


22
00:00:36,856 --> 00:00:38,316
Beyond that you might launch an


23
00:00:38,316 --> 00:00:39,896
app to track a package, complete


24
00:00:39,896 --> 00:00:41,236
a task or log a meal.


25
00:00:42,046 --> 00:00:43,216
When you lower your wrist after


26
00:00:43,216 --> 00:00:44,716
one of these activities, the app


27
00:00:44,716 --> 00:00:45,516
becomes inactive.


28
00:00:46,016 --> 00:00:47,336
After a short duration the


29
00:00:47,336 --> 00:00:48,866
process is suspended but will


30
00:00:48,866 --> 00:00:50,426
remain frontmost for some time


31
00:00:50,426 --> 00:00:51,926
after meaning that it will


32
00:00:51,926 --> 00:00:53,286
become active if you raise your


33
00:00:53,286 --> 00:00:54,626
wrist during that time.


34
00:00:55,726 --> 00:00:56,876
There are some use cases,


35
00:00:56,876 --> 00:00:58,566
however, where you expect an app


36
00:00:58,566 --> 00:00:59,856
to keep running after you lower


37
00:00:59,856 --> 00:01:00,646
your wrist.


38
00:01:01,146 --> 00:01:02,596
If you start a workout, you


39
00:01:02,596 --> 00:01:04,056
expect Apple Watch to track the


40
00:01:04,056 --> 00:01:05,116
time you've invested in that


41
00:01:05,116 --> 00:01:06,656
workout and you might expect


42
00:01:06,656 --> 00:01:07,796
other data to be collected as


43
00:01:07,796 --> 00:01:09,536
well such as your current heart


44
00:01:09,536 --> 00:01:11,206
rate, distance traveled,


45
00:01:11,206 --> 00:01:12,906
elevation gained, steps per


46
00:01:12,906 --> 00:01:13,786
minute and more.


47
00:01:14,666 --> 00:01:16,176
As a developer, you can create


48
00:01:16,176 --> 00:01:17,486
an app that tracks workouts


49
00:01:17,486 --> 00:01:18,936
using the work API and


50
00:01:18,936 --> 00:01:19,456
HealthKit.


51
00:01:20,136 --> 00:01:22,096
Another obvious reason for an


52
00:01:22,096 --> 00:01:23,186
app to continue running after


53
00:01:23,386 --> 00:01:24,896
you lower your wrist is to play


54
00:01:24,896 --> 00:01:26,426
audio via a connected Bluetooth


55
00:01:26,426 --> 00:01:26,926
device.


56
00:01:27,646 --> 00:01:28,866
You can start an audio session


57
00:01:28,866 --> 00:01:30,156
by calling the background audio


58
00:01:30,156 --> 00:01:32,626
APIs and in watchOS 6 you can


59
00:01:32,626 --> 00:01:34,446
not only play local audio you


60
00:01:34,446 --> 00:01:36,416
can also stream music, podcasts,


61
00:01:36,416 --> 00:01:37,666
sporting events and more.


62
00:01:38,086 --> 00:01:39,416
And, of course when you're


63
00:01:39,416 --> 00:01:40,996
navigating, you need turn by


64
00:01:40,996 --> 00:01:42,506
turn directions to be guided to


65
00:01:42,506 --> 00:01:43,656
your next destination.


66
00:01:44,166 --> 00:01:45,246
If you're building an app that


67
00:01:45,246 --> 00:01:46,726
provides directions, you can


68
00:01:46,726 --> 00:01:48,046
create a navigation session by


69
00:01:48,046 --> 00:01:49,486
using core location APIs.


70
00:01:49,976 --> 00:01:52,126
As we've built APIs around these


71
00:01:52,126 --> 00:01:53,586
background modes over the past


72
00:01:53,586 --> 00:01:55,206
few releases of watchOS, we've


73
00:01:55,206 --> 00:01:56,506
noticed that some apps have


74
00:01:56,506 --> 00:01:57,996
needs for additional runtime but


75
00:01:57,996 --> 00:01:59,546
don't fall into any existing use


76
00:01:59,546 --> 00:02:00,036
cases.


77
00:02:01,156 --> 00:02:02,416
So now I'd like to hand this


78
00:02:02,416 --> 00:02:03,766
over to Scott Daner to discuss a


79
00:02:03,766 --> 00:02:05,646
new API in watchOS 6, which will


80
00:02:05,646 --> 00:02:07,196
add support for new use cases.


81
00:02:08,966 --> 00:02:11,106
>> Hi, I'm Scott Daner, and I'll


82
00:02:11,106 --> 00:02:12,436
be walking you through the new


83
00:02:12,436 --> 00:02:13,636
extended runtime API.


84
00:02:14,476 --> 00:02:18,356
In watchOS 6, we're enabling new


85
00:02:18,356 --> 00:02:19,896
scenarios through the extended


86
00:02:19,896 --> 00:02:20,716
runtime API.


87
00:02:21,926 --> 00:02:23,486
This API will provide enough


88
00:02:23,486 --> 00:02:24,906
runtime to complete targeted


89
00:02:24,906 --> 00:02:26,836
tasks even after the user lowers


90
00:02:26,836 --> 00:02:28,236
a wrist while preserving


91
00:02:28,236 --> 00:02:28,716
battery.


92
00:02:29,546 --> 00:02:30,786
The extended runtime API


93
00:02:30,926 --> 00:02:33,816
encompasses 5 use cases; self


94
00:02:33,816 --> 00:02:36,006
care, mindfulness, physical


95
00:02:36,006 --> 00:02:38,416
therapy, alarms and health


96
00:02:38,416 --> 00:02:38,946
monitoring.


97
00:02:39,976 --> 00:02:41,626
Each of these use cases has a


98
00:02:41,626 --> 00:02:42,906
corresponding session type.


99
00:02:43,596 --> 00:02:45,226
We've tailored these use cases


100
00:02:45,226 --> 00:02:46,986
to meet the needs of each use


101
00:02:46,986 --> 00:02:47,326
case.


102
00:02:48,296 --> 00:02:50,606
This API is for scenarios that


103
00:02:50,606 --> 00:02:52,136
are not workouts and, thus,


104
00:02:52,136 --> 00:02:53,366
should not impact move and


105
00:02:53,366 --> 00:02:55,686
exercise rings and while some


106
00:02:55,686 --> 00:02:57,636
apps may benefit from monitoring


107
00:02:57,666 --> 00:02:59,066
and reporting on the user's


108
00:02:59,066 --> 00:03:00,986
heart rate, none of the session


109
00:03:00,986 --> 00:03:02,596
types we're about to talk about


110
00:03:02,826 --> 00:03:04,336
have heart rate monitoring on by


111
00:03:04,336 --> 00:03:05,746
default as workouts do.


112
00:03:06,866 --> 00:03:07,996
We'll go into this in more


113
00:03:07,996 --> 00:03:09,936
detail in a bit but monitoring


114
00:03:09,936 --> 00:03:11,266
user's heart rate is power


115
00:03:11,266 --> 00:03:13,296
intensive so queries for heart


116
00:03:13,296 --> 00:03:14,536
rate should be performed


117
00:03:14,736 --> 00:03:15,506
judiciously.


118
00:03:16,056 --> 00:03:17,346
The first session type we'll


119
00:03:17,346 --> 00:03:18,896
talk about is self care.


120
00:03:19,726 --> 00:03:21,786
Self care apps guide users


121
00:03:21,786 --> 00:03:23,466
through brief activities focused


122
00:03:23,466 --> 00:03:24,906
on the user's health such as


123
00:03:24,906 --> 00:03:25,516
tooth brushing.


124
00:03:26,756 --> 00:03:28,496
A self care session runs for up


125
00:03:28,496 --> 00:03:30,476
to 10 minutes or until the user


126
00:03:30,476 --> 00:03:32,366
exits the app by pressing the


127
00:03:32,366 --> 00:03:34,016
digital crown or switching to


128
00:03:34,016 --> 00:03:34,576
another app.


129
00:03:34,726 --> 00:03:37,386
If the user lowers their wrist,


130
00:03:37,756 --> 00:03:39,216
the screen will turn off, but


131
00:03:39,216 --> 00:03:40,226
the session will continue


132
00:03:40,226 --> 00:03:41,866
running and your process will


133
00:03:41,866 --> 00:03:42,746
not be suspended.


134
00:03:43,656 --> 00:03:44,836
This allows the app to play


135
00:03:44,836 --> 00:03:46,096
sounds and haptics or


136
00:03:46,096 --> 00:03:46,796
communicate with a Bluetooth


137
00:03:46,826 --> 00:03:46,976
device.


138
00:03:47,046 --> 00:03:50,586
Mindfulness apps guide users


139
00:03:50,586 --> 00:03:51,946
through meditation sessions.


140
00:03:52,626 --> 00:03:54,026
Some mindfulness apps are


141
00:03:54,026 --> 00:03:55,436
already getting the runtime they


142
00:03:55,436 --> 00:03:57,086
need by playing audio


143
00:03:57,086 --> 00:03:58,326
continuously throughout the


144
00:03:58,326 --> 00:04:00,336
session and that's fine.


145
00:04:01,216 --> 00:04:02,576
The background audio API can be


146
00:04:02,576 --> 00:04:03,866
used for those scenarios.


147
00:04:04,696 --> 00:04:06,356
This use case provides runtime


148
00:04:06,356 --> 00:04:08,086
for meditations where audio is


149
00:04:08,086 --> 00:04:09,336
not played continuously.


150
00:04:10,926 --> 00:04:12,226
Like self care sessions,


151
00:04:12,556 --> 00:04:14,426
mindfulness sessions run until


152
00:04:14,426 --> 00:04:16,185
the user exits the app or the


153
00:04:16,185 --> 00:04:17,336
time limit expires.


154
00:04:18,185 --> 00:04:19,676
For mindfulness sessions the


155
00:04:19,676 --> 00:04:21,146
time limit is 1 hour.


156
00:04:21,755 --> 00:04:23,956
Physical therapy apps guide


157
00:04:23,956 --> 00:04:25,216
users through stretching,


158
00:04:25,416 --> 00:04:27,176
strengthening or range of motion


159
00:04:27,176 --> 00:04:27,996
exercises.


160
00:04:28,756 --> 00:04:30,286
Physical therapy sessions are


161
00:04:30,286 --> 00:04:31,816
designed to give you the runtime


162
00:04:31,816 --> 00:04:33,456
you need to play haptics to


163
00:04:33,456 --> 00:04:35,026
alert the user when it's time to


164
00:04:35,026 --> 00:04:36,986
switch legs, change rotation


165
00:04:36,986 --> 00:04:38,166
direction, et cetera.


166
00:04:39,706 --> 00:04:41,406
These sessions continue to run


167
00:04:41,406 --> 00:04:42,806
in the background if the user


168
00:04:42,806 --> 00:04:44,426
presses the digital crown or


169
00:04:44,426 --> 00:04:46,526
switches to another app to allow


170
00:04:46,526 --> 00:04:48,016
for multitasking when doing


171
00:04:48,016 --> 00:04:49,196
repetitive movements.


172
00:04:49,776 --> 00:04:51,066
This is similar to how workout


173
00:04:51,066 --> 00:04:51,766
sessions behave.


174
00:04:53,086 --> 00:04:54,616
There's a one 1-time limit, but


175
00:04:54,616 --> 00:04:55,936
you should end the session as


176
00:04:55,936 --> 00:04:57,496
soon as the user has finished


177
00:04:57,496 --> 00:04:58,006
the routine.


178
00:04:59,316 --> 00:05:00,746
Remember that physical therapy


179
00:05:00,746 --> 00:05:01,916
sessions are designed


180
00:05:01,916 --> 00:05:03,616
specifically for activities that


181
00:05:03,616 --> 00:05:04,626
are not workouts.


182
00:05:05,586 --> 00:05:06,986
If your physical therapy app


183
00:05:06,986 --> 00:05:08,646
offers a more strenuous activity


184
00:05:09,056 --> 00:05:10,706
such as riding an exercise bike,


185
00:05:11,056 --> 00:05:12,566
use a workout API for that


186
00:05:12,566 --> 00:05:13,056
activity.


187
00:05:13,426 --> 00:05:14,936
Health monitoring apps get


188
00:05:14,936 --> 00:05:16,756
runtime to monitor the user's


189
00:05:16,756 --> 00:05:18,456
health data such as heart rate


190
00:05:18,456 --> 00:05:19,066
or motion.


191
00:05:19,716 --> 00:05:21,516
Just like today the app must


192
00:05:21,516 --> 00:05:22,756
query for heart rate through


193
00:05:22,756 --> 00:05:23,806
HealthKit APIs.


194
00:05:24,596 --> 00:05:25,686
This will turn on the heart rate


195
00:05:25,686 --> 00:05:26,706
sensor, which will have an


196
00:05:26,706 --> 00:05:28,576
impact on battery life, so


197
00:05:28,576 --> 00:05:30,516
communicating that to your user


198
00:05:30,516 --> 00:05:31,236
is critical.


199
00:05:31,876 --> 00:05:33,026
Because of the potential for


200
00:05:33,026 --> 00:05:34,936
heavy battery impact this type


201
00:05:34,936 --> 00:05:37,106
requires an entitlement and


202
00:05:37,106 --> 00:05:38,216
you'll need to be extra


203
00:05:38,216 --> 00:05:39,626
respectful of the user's


204
00:05:39,626 --> 00:05:40,006
battery.


205
00:05:41,006 --> 00:05:43,616
In order to use this API, you'll


206
00:05:43,616 --> 00:05:45,036
need to add the background modes


207
00:05:45,036 --> 00:05:46,386
capability to your extension


208
00:05:46,386 --> 00:05:49,826
target in Xcode and select an


209
00:05:49,826 --> 00:05:51,016
appropriate session type.


210
00:05:51,686 --> 00:05:54,586
To create a session first create


211
00:05:54,586 --> 00:05:56,376
a WKExtendedRuntimeSession


212
00:05:56,376 --> 00:05:56,876
object.


213
00:05:57,496 --> 00:05:58,836
This will create a session, but


214
00:05:58,836 --> 00:05:59,836
it won't start it yet.


215
00:06:00,836 --> 00:06:02,906
To do that you must set a


216
00:06:02,906 --> 00:06:04,626
delegate on the session and call


217
00:06:04,626 --> 00:06:05,156
start.


218
00:06:05,816 --> 00:06:07,326
Calling start must be done while


219
00:06:07,326 --> 00:06:08,256
the app is active.


220
00:06:08,416 --> 00:06:10,456
After calling start the session


221
00:06:10,456 --> 00:06:12,066
will start immediately and you


222
00:06:12,066 --> 00:06:13,906
will receive a call back noting


223
00:06:13,906 --> 00:06:15,266
that it began successfully.


224
00:06:16,526 --> 00:06:18,166
Finally, you can end the session


225
00:06:18,166 --> 00:06:19,276
by calling invalidate.


226
00:06:21,276 --> 00:06:23,236
And now to talk about alarms I'd


227
00:06:23,236 --> 00:06:23,976
like to bring Forest back.


228
00:06:24,046 --> 00:06:26,786
>> In most cases if an app needs


229
00:06:26,786 --> 00:06:28,246
to alert a user at a specific


230
00:06:28,246 --> 00:06:29,876
time, the best way to do this is


231
00:06:29,876 --> 00:06:30,776
through a notification.


232
00:06:31,536 --> 00:06:33,066
However, there are cases where a


233
00:06:33,066 --> 00:06:34,566
notification is not sufficient


234
00:06:34,566 --> 00:06:35,736
such as waking the user from


235
00:06:35,736 --> 00:06:36,066
sleep.


236
00:06:36,996 --> 00:06:39,296
In this case, the app might want


237
00:06:39,296 --> 00:06:40,576
to get runtime to monitor the


238
00:06:40,576 --> 00:06:42,676
user's heart rate or motion to


239
00:06:42,676 --> 00:06:43,936
determine an optimal time to


240
00:06:43,936 --> 00:06:44,776
play an alarm.


241
00:06:45,476 --> 00:06:46,756
To enable this, we've added the


242
00:06:46,756 --> 00:06:47,776
alarm session type.


243
00:06:48,586 --> 00:06:50,576
Smart alarm sessions allow apps


244
00:06:50,576 --> 00:06:52,166
to schedule a window in which to


245
00:06:52,166 --> 00:06:53,676
begin monitoring for changes in


246
00:06:53,676 --> 00:06:54,766
heart rate or movement.


247
00:06:55,516 --> 00:06:57,186
Alarm sessions are the only type


248
00:06:57,186 --> 00:06:58,306
of session that can be scheduled


249
00:06:58,306 --> 00:07:00,456
in advance up to 36 hours and


250
00:07:00,456 --> 00:07:01,936
can run for up to 30 minutes


251
00:07:02,046 --> 00:07:02,726
once started.


252
00:07:03,426 --> 00:07:04,716
You must play a haptic at least


253
00:07:04,716 --> 00:07:05,916
one time during the course of


254
00:07:05,916 --> 00:07:07,246
the session as your purpose is


255
00:07:07,246 --> 00:07:08,296
to act as an alarm.


256
00:07:09,596 --> 00:07:11,066
If your application is using the


257
00:07:11,066 --> 00:07:12,446
alarm session type, there's one


258
00:07:12,446 --> 00:07:13,466
key difference about how the


259
00:07:13,466 --> 00:07:14,226
session works.


260
00:07:14,586 --> 00:07:15,826
These sessions are scheduled in


261
00:07:15,826 --> 00:07:16,386
advance.


262
00:07:17,196 --> 00:07:18,646
To schedule an alarm session


263
00:07:18,726 --> 00:07:20,676
instead of calling start, call


264
00:07:20,676 --> 00:07:21,376
startAtDate.


265
00:07:22,066 --> 00:07:23,336
This will schedule the alarm to


266
00:07:23,336 --> 00:07:24,746
begin running at a later date.


267
00:07:25,496 --> 00:07:27,086
Also, just as you must call


268
00:07:27,086 --> 00:07:28,206
start when the application is


269
00:07:28,206 --> 00:07:30,076
active startAtDate must also be


270
00:07:30,076 --> 00:07:31,046
called while active.


271
00:07:31,846 --> 00:07:34,036
Later at the time specified the


272
00:07:34,036 --> 00:07:36,246
session will begin and the app


273
00:07:36,246 --> 00:07:37,246
will be launched if it's not


274
00:07:37,246 --> 00:07:37,556
running.


275
00:07:37,856 --> 00:07:40,196
Upon launching the app will


276
00:07:40,196 --> 00:07:41,356
receive a call back on the


277
00:07:41,356 --> 00:07:42,826
extension delegate which passes


278
00:07:42,826 --> 00:07:43,966
the app the running session.


279
00:07:44,616 --> 00:07:46,056
The app must set a delegate on


280
00:07:46,056 --> 00:07:47,386
the session before returning


281
00:07:47,386 --> 00:07:48,026
from this function.


282
00:07:48,976 --> 00:07:50,516
After doing this the app will


283
00:07:50,516 --> 00:07:51,646
receive a call back on the


284
00:07:51,646 --> 00:07:53,196
delegate object saying that the


285
00:07:53,196 --> 00:07:54,026
session has started.


286
00:07:54,616 --> 00:07:55,956
During the time the session is


287
00:07:55,956 --> 00:07:57,916
actively running the app must


288
00:07:57,916 --> 00:07:58,616
play a haptic.


289
00:07:59,516 --> 00:08:00,896
When your app plays a haptic


290
00:08:00,896 --> 00:08:02,756
during an alarm session if it is


291
00:08:02,756 --> 00:08:04,536
not active, we will show a


292
00:08:04,536 --> 00:08:05,826
system alert indicating that


293
00:08:05,826 --> 00:08:07,136
your app is playing alarm.


294
00:08:07,736 --> 00:08:09,596
If your app fails to play a


295
00:08:09,596 --> 00:08:10,926
haptic during an alarm session,


296
00:08:10,926 --> 00:08:12,156
we will warn the user with this


297
00:08:12,156 --> 00:08:13,646
alert offering to disable the


298
00:08:13,646 --> 00:08:14,776
app's ability to schedule


299
00:08:14,776 --> 00:08:15,726
sessions in the future.


300
00:08:16,336 --> 00:08:17,556
Make sure you're being a good


301
00:08:17,556 --> 00:08:18,796
citizen on the platform.


302
00:08:19,606 --> 00:08:20,986
If you are, your users will


303
00:08:20,986 --> 00:08:21,716
never see this.


304
00:08:22,076 --> 00:08:23,246
We've put a lot of thought into


305
00:08:23,246 --> 00:08:24,166
the parameters of these use


306
00:08:24,166 --> 00:08:24,656
cases.


307
00:08:24,756 --> 00:08:26,116
So please pick a use case that's


308
00:08:26,116 --> 00:08:27,046
appropriate for your app.


309
00:08:28,006 --> 00:08:29,036
Be considerate of the user's


310
00:08:29,036 --> 00:08:29,696
battery life.


311
00:08:30,136 --> 00:08:31,526
End sessions as soon as the user


312
00:08:31,526 --> 00:08:33,155
is done with the activity and be


313
00:08:33,155 --> 00:08:34,576
judicious about querying heart


314
00:08:34,576 --> 00:08:34,826
rate.


315
00:08:35,166 --> 00:08:36,385
This will ensure great battery


316
00:08:36,385 --> 00:08:37,466
life for your users.


317
00:08:38,426 --> 00:08:40,336
For more information, check out


318
00:08:40,336 --> 00:08:41,206
the documentation


319
00:08:41,366 --> 00:08:42,976
@developer.apple.com.

