1
00:00:10,544 --> 00:00:11,378 line:-1
好的


2
00:00:12,746 --> 00:00:13,580 line:-1
早上好


3
00:00:14,715 --> 00:00:16,550 line:0
谢谢你来参加这次演讲


4
00:00:16,917 --> 00:00:17,985 line:0
我是Kulpreet


5
00:00:18,051 --> 00:00:20,521 line:0
我是本地化的一名软件工程师


6
00:00:20,587 --> 00:00:22,556 line:-1
我将和我的同事Vivian


7
00:00:22,623 --> 00:00:23,590 line:-1
和Arthur一起来做本场演讲


8
00:00:25,459 --> 00:00:26,293 line:-1
本场演讲中


9
00:00:26,360 --> 00:00:29,129 line:-1
我会介绍一些我们平台上的


10
00:00:29,196 --> 00:00:30,364 line:-1
非常棒的本地化新功能


11
00:00:30,964 --> 00:00:34,535 line:-2
Vivian和Arthur将介绍
Xcode 11上的一些新工具


12
00:00:34,601 --> 00:00:38,071 line:-1
包含一些本地化工作流程的提升


13
00:00:38,138 --> 00:00:39,640 line:-1
本地化图片


14
00:00:39,706 --> 00:00:43,443 line:-1
以及如何使用测试来


15
00:00:43,510 --> 00:00:45,045 line:-1
为你的app创建多语言截图


16
00:00:47,080 --> 00:00:52,719 line:-2
今天 我们预估超过70%的用户
在美国以外


17
00:00:53,554 --> 00:00:57,357 line:-1
本地化是扩展app新市场


18
00:00:57,424 --> 00:00:59,860 line:-1
的好机会


19
00:01:01,962 --> 00:01:02,930 line:-1
在Apple


20
00:01:02,996 --> 00:01:05,666 line:-1
我们非常关注为全球的


21
00:01:05,732 --> 00:01:08,569 line:-1
用户带来优质的用户体验


22
00:01:08,635 --> 00:01:09,503 line:-1
今年


23
00:01:09,570 --> 00:01:12,573 line:-1
我们为多语种和全球用户


24
00:01:12,639 --> 00:01:15,542 line:-1
提升了用户体验和引入了新功能


25
00:01:16,210 --> 00:01:17,845 line:-1
举几个例子


26
00:01:17,911 --> 00:01:22,783 line:-2
在iOS 13上 我们的键盘
现已支持38种语言了


27
00:01:23,083 --> 00:01:25,886 line:-2
我敢确定你的母语是其中之一
你一定很激动吧


28
00:01:26,787 --> 00:01:28,088 line:-1
我们也创建了一些新的设置流程


29
00:01:28,155 --> 00:01:31,892 line:-1
来引导多语种用户正确设置语言


30
00:01:33,193 --> 00:01:36,597 line:-2
现在其中之一的功能是
我特别想要和你们分享的


31
00:01:36,663 --> 00:01:39,099 line:-1
我们来深入了解一下


32
00:01:40,334 --> 00:01:44,438 line:-1
在iOS 13 你可以在app中


33
00:01:44,505 --> 00:01:46,139 line:-1
为多语种用户设计一个新的设置页面


34
00:01:46,940 --> 00:01:50,444 line:-1
我很高兴告诉大家 用户现在可以


35
00:01:50,511 --> 00:01:52,713 line:-2
在系统语言之外单独
设置app的语言了


36
00:01:57,217 --> 00:01:58,819 line:-2
如果一个用户
有一个已连接的Watch


37
00:01:58,886 --> 00:02:02,122 line:-2
设置也会同步到相应的
Watch应用中


38
00:02:02,923 --> 00:02:04,424 line:-1
相似地 在macOS


39
00:02:04,491 --> 00:02:06,593 line:-1
用户也能通过语言和地区偏好


40
00:02:06,660 --> 00:02:08,662 line:-1
在app中设置语言了


41
00:02:10,464 --> 00:02:13,700 line:-2
这很重要
因为在多语种地区


42
00:02:13,767 --> 00:02:17,137 line:-2
用户会偏爱在不同的
上下文中使用不同的语言


43
00:02:17,738 --> 00:02:19,072 line:-1
比如在香港地区


44
00:02:19,139 --> 00:02:21,608 line:-1
一些人可能习惯阅读中文新闻


45
00:02:21,675 --> 00:02:24,144 line:-1
即使他们用英文来处理银行业务


46
00:02:25,379 --> 00:02:29,183 line:-1
在印度 一个学生会在学校学习英语


47
00:02:29,249 --> 00:02:32,152 line:-1
即使他们回家和家人们说北印度语


48
00:02:32,953 --> 00:02:36,790 line:-2
app是我们每天都会
使用的交互窗口


49
00:02:36,857 --> 00:02:39,793 line:-1
这个新设置允许用户选择一个


50
00:02:39,860 --> 00:02:42,162 line:-1
他们使用你app时偏爱的语言


51
00:02:43,564 --> 00:02:46,900 line:-2
现在 如果你的本地化使用的
是我们标准基础API库


52
00:02:46,967 --> 00:02:50,737 line:-1
你马上就能实现这个功能


53
00:02:51,071 --> 00:02:52,573 line:-1
但你要留意一些事情


54
00:02:52,639 --> 00:02:54,775 line:-1
来让用户更好地使用你的app


55
00:02:56,210 --> 00:03:00,647 line:-2
首先 不要尝试手动在代码中
配置app语言


56
00:03:00,948 --> 00:03:02,649 line:-1
我们的API为保证用户获取到


57
00:03:02,716 --> 00:03:06,186 line:-1
正确的语言和字体回退做了很多工作


58
00:03:06,653 --> 00:03:09,857 line:-2
如果你需要在你的app添加
切换语言的选项


59
00:03:09,923 --> 00:03:11,692 line:-1
我们推荐你在设置中添加


60
00:03:11,758 --> 00:03:14,494 line:-1
用户能在那里切换你app的语言


61
00:03:16,096 --> 00:03:20,200 line:-2
接下来 当用户改变了
你app的语言


62
00:03:21,568 --> 00:03:24,204 line:-1
你的app会重启 切换到目标语言


63
00:03:24,838 --> 00:03:28,475 line:-2
现在 为了让用户
能无缝实现语言切换


64
00:03:28,542 --> 00:03:31,712 line:-2
我们推荐你使用
状态恢复API


65
00:03:32,980 --> 00:03:36,483 line:-2
在iOS 13
NSUserActivity


66
00:03:36,550 --> 00:03:38,485 line:-1
有了新的状态恢复API


67
00:03:38,552 --> 00:03:42,222 line:-2
想要了解如何使用它们的更多信息
你可以参加周五的演讲


68
00:03:44,391 --> 00:03:46,860 line:-1
最后 在你的app中将所有的内容


69
00:03:46,927 --> 00:03:50,397 line:-1
连贯地用一种语言表示很重要


70
00:03:50,664 --> 00:03:53,800 line:-1
如果你要加载客户端或服务端的资源


71
00:03:53,867 --> 00:03:56,336 line:-1
一些有用的API会帮你判定


72
00:03:56,403 --> 00:03:59,039 line:-1
加载哪种语言


73
00:03:59,773 --> 00:04:01,441 line:-1
我们来看看其中的一些


74
00:04:02,442 --> 00:04:04,811 line:-1
本地的API对于获取用户的


75
00:04:04,878 --> 00:04:07,414 line:-1
语言和地区偏好非常有用


76
00:04:07,848 --> 00:04:11,318 line:-2
Locale.PreferredLanguages
会返回用户偏好的


77
00:04:11,385 --> 00:04:13,253 line:-1
语言列表


78
00:04:13,654 --> 00:04:16,190 line:-1
现在 这个列表可能对你有用


79
00:04:16,255 --> 00:04:21,094 line:-1
如果你需要创建一个处理多语种


80
00:04:21,161 --> 00:04:22,362 line:-1
内容的app 以及需要获取


81
00:04:22,429 --> 00:04:25,465 line:-1
所有语言的一些字体等资源文件


82
00:04:25,999 --> 00:04:29,369 line:-2
另一个需要注意的点是
Locale.PreferredLanguages


83
00:04:29,436 --> 00:04:33,407 line:-1
它会返回一个用户偏爱的语言列表


84
00:04:33,473 --> 00:04:36,743 line:-1
不论是否是你应用程序包支持的语言


85
00:04:36,810 --> 00:04:40,047 line:-2
所以它并不适用于获取
当前app运行的语言


86
00:04:40,848 --> 00:04:43,250 line:-1
为了获取当前app运行的语言


87
00:04:43,317 --> 00:04:45,018 line:-1
我们可以使用Bundle API


88
00:04:45,819 --> 00:04:49,022 line:-2
Bundle API适用于
语言匹配


89
00:04:49,389 --> 00:04:52,192 line:-1
Bundle.main.preferredLocalizations


90
00:04:52,259 --> 00:04:55,295 line:-1
兼顾用户偏爱的语言


91
00:04:55,362 --> 00:04:58,265 line:-1
和app程序包支持的语言


92
00:04:58,332 --> 00:05:01,635 line:-2
会根据用户的偏好
返回一个


93
00:05:01,702 --> 00:05:03,303 line:-2
你的app程序包
需要支持的语言列表


94
00:05:04,404 --> 00:05:05,706 line:-1
现在 如果你有一个外部列表


95
00:05:05,772 --> 00:05:08,141 line:-2
例如你从服务器上加载了
一些远程文件


96
00:05:08,208 --> 00:05:10,477 line:-2
你的服务器有
不同语言支持的安装远程文件


97
00:05:10,544 --> 00:05:14,248 line:-2
使用Bundle.preferredLocalizationsfrom
的类方法


98
00:05:14,314 --> 00:05:17,618 line:-1
它会包含你服务器的第三种语言


99
00:05:19,653 --> 00:05:21,655 line:-1
现在 为了帮助你了解这些功能


100
00:05:21,722 --> 00:05:23,624 line:-1
以及它能为你的app带来什么


101
00:05:23,690 --> 00:05:25,492 line:-1
我来用一个示例讲解


102
00:05:34,902 --> 00:05:35,736 line:0
好的


103
00:05:36,436 --> 00:05:38,472 line:0
去年 我们开发了Vacation Planet
的示例版本


104
00:05:38,872 --> 00:05:41,675 line:-1
这是第一个星际旅行预订app


105
00:05:41,742 --> 00:05:43,076 line:-1
我们已经完善了这个app


106
00:05:43,143 --> 00:05:45,579 line:-1
完整预订旅行的功能体验


107
00:05:46,146 --> 00:05:47,681 line:-1
我们有这个发现标签页


108
00:05:47,748 --> 00:05:49,550 line:-1
里面的集成页面展示了


109
00:05:49,616 --> 00:05:52,219 line:-1
一些我们提供的很棒的缩略图


110
00:05:52,286 --> 00:05:58,358 line:-2
比如这个去往浪漫的Pluto
或Moon Yoga空间巡航项目


111
00:06:00,427 --> 00:06:02,763 line:-1
现在 一些季节限定的产品比如


112
00:06:02,829 --> 00:06:05,098 line:-1
WWDC Afterparty


113
00:06:05,165 --> 00:06:06,633 line:-1
因为这个季节限定产品


114
00:06:06,700 --> 00:06:08,936 line:-1
的内容是从我们的服务器拉取的


115
00:06:09,002 --> 00:06:10,838 line:-1
所以 这张图片和这个很棒的关于


116
00:06:10,904 --> 00:06:13,273 line:-2
首个Interstellar Bash
的描述


117
00:06:13,340 --> 00:06:15,342 line:-1
以及我们如何在船上…


118
00:06:15,409 --> 00:06:19,079 line:-1
我们将要在船上的一个海鲜餐厅


119
00:06:19,146 --> 00:06:20,347 line:-1
Codable


120
00:06:20,414 --> 00:06:23,717 line:-1
都是完全从服务器上下载的


121
00:06:24,017 --> 00:06:25,953 line:-1
现在 读完这些介绍后


122
00:06:26,019 --> 00:06:28,222 line:-1
我认为很棒 我想要预订


123
00:06:28,555 --> 00:06:30,057 line:-1
但是 你知道的


124
00:06:30,123 --> 00:06:33,227 line:-1
WWDC的出席者来自世界各地


125
00:06:33,293 --> 00:06:35,195 line:-1
他们可能想要用不同的语言


126
00:06:35,262 --> 00:06:36,663 line:-1
来预定行程


127
00:06:37,130 --> 00:06:39,433 line:-2
所以 我么接下来要做的是在下面的
个人标签页面


128
00:06:39,499 --> 00:06:40,868 line:-1
这里有一个表视图单元格


129
00:06:40,934 --> 00:06:43,103 line:-1
展示了现在app运行的语言


130
00:06:43,504 --> 00:06:44,872 line:-1
当我点击它


131
00:06:44,938 --> 00:06:46,406 line:-1
它会带我进入设置界面


132
00:06:46,473 --> 00:06:47,774 line:-1
我点击来查看一个


133
00:06:47,841 --> 00:06:50,444 line:-1
我app所支持的所有语言列表


134
00:06:50,511 --> 00:06:52,513 line:-1
我来将它改变为法语


135
00:06:52,579 --> 00:06:56,416 line:-2
当我返回后 你看
System UI还是英语


136
00:06:56,483 --> 00:06:58,318 line:-2
但当我返回到
Vacation Planet


137
00:06:58,385 --> 00:07:01,088 line:-1
app会重启 它现在变成法语了


138
00:07:05,526 --> 00:07:06,793 line:-1
现在 你会注意到


139
00:07:06,860 --> 00:07:09,029 line:-1
它回到了我离开时候的界面


140
00:07:09,096 --> 00:07:12,432 line:-1
这是因为我使用了状态修复的API


141
00:07:13,033 --> 00:07:16,069 line:-2
你能看到所有我们的字符串
和日期格式


142
00:07:16,136 --> 00:07:18,005 line:-1
都是法语 很好


143
00:07:18,071 --> 00:07:20,908 line:-1
但当我回到服务端下载的内容


144
00:07:20,974 --> 00:07:23,076 line:-1
我看到它还是英语


145
00:07:23,143 --> 00:07:24,211 line:-1
这样是有问题的


146
00:07:24,278 --> 00:07:25,846 line:-2
因为我们希望我们app的
内容都是一致的


147
00:07:25,913 --> 00:07:27,881 line:-1
我们想要他们的app是同一种语言


148
00:07:28,815 --> 00:07:30,884 line:-1
所以 我们来看一下接下来要做什么


149
00:07:32,386 --> 00:07:34,922 line:-1
这里 在我们的几何视图控制器里


150
00:07:34,988 --> 00:07:37,157 line:-2
我有这个方法
localDiscoverItems


151
00:07:37,224 --> 00:07:39,726 line:-1
从服务器下载内容


152
00:07:39,793 --> 00:07:40,994 line:-1
当我们下载内容时


153
00:07:41,061 --> 00:07:42,696 line:-1
我们需要传language的值


154
00:07:42,763 --> 00:07:43,931 line:-1
因为服务器需要知道


155
00:07:43,997 --> 00:07:46,466 line:-1
我们下载内容的语言


156
00:07:47,067 --> 00:07:48,836 line:-1
你在这能看到我传递的语言是


157
00:07:48,902 --> 00:07:51,238 line:-1
Locale.preferredLanguages.first


158
00:07:51,538 --> 00:07:53,473 line:-2
我之前提到过的
Locale.preferredLanguages


159
00:07:53,540 --> 00:07:56,376 line:-1
不管我app支持的语言


160
00:07:56,443 --> 00:07:59,479 line:-1
会返回一个用户偏爱的语言


161
00:07:59,546 --> 00:08:01,148 line:-1
所以 这可能是我app


162
00:08:01,215 --> 00:08:03,483 line:-1
不怎么支持的波斯语


163
00:08:04,551 --> 00:08:06,520 line:-1
现在 我最好考虑


164
00:08:06,587 --> 00:08:08,188 line:-1
服务端支持的语言


165
00:08:08,255 --> 00:08:10,390 line:-1
我的应用包支持的语言


166
00:08:10,457 --> 00:08:12,492 line:-1
用户偏爱的顺序


167
00:08:13,026 --> 00:08:17,631 line:-2
所以 我要开始从服务器支持的语言
下载


168
00:08:17,698 --> 00:08:18,832 line:-1
你能在这里看到


169
00:08:19,299 --> 00:08:20,934 line:-1
接着当我使用包API时


170
00:08:21,001 --> 00:08:24,805 line:-2
那个类方法来自
Bundle.preferredLocalizations


171
00:08:24,872 --> 00:08:27,708 line:-2
我会传给
availableServerLocalizations


172
00:08:27,774 --> 00:08:29,276 line:-1
针对那段内容 现在的第一个元素是


173
00:08:29,343 --> 00:08:34,381 line:-1
向服务器请求的


174
00:08:34,448 --> 00:08:35,948 line:-1
最佳语言


175
00:08:37,251 --> 00:08:39,186 line:-1
所以 我来重新构建它


176
00:08:43,957 --> 00:08:46,360 line:-1
等几秒钟重启


177
00:08:46,760 --> 00:08:49,329 line:-1
你现在会看到图片和所有内容


178
00:08:49,396 --> 00:08:50,397 line:-1
都是法语了


179
00:08:50,464 --> 00:08:51,598 line:-1
这样很棒吧？


180
00:08:51,665 --> 00:08:52,633 line:-1
很酷 我们可以准备预订


181
00:08:52,699 --> 00:08:55,302 line:-2
我等不及在Interstellar Bash上
看到你们了


182
00:08:56,637 --> 00:08:57,471 line:-1
好的


183
00:08:57,938 --> 00:08:59,273 line:-1
来总结一下


184
00:08:59,339 --> 00:09:03,377 line:-2
app语言设置能运行用户
在你app中选择的语言


185
00:09:05,145 --> 00:09:06,313 line:-1
启动设置


186
00:09:06,380 --> 00:09:10,117 line:-2
是让你的用户来切换你app语言的
最好的方法


187
00:09:11,251 --> 00:09:13,654 line:-1
使用状态修复为用户


188
00:09:13,720 --> 00:09:16,123 line:-1
带来无缝切换语言的体验


189
00:09:16,823 --> 00:09:20,227 line:-2
最后 如果你要自定义或在服务端
加载资源


190
00:09:20,294 --> 00:09:24,264 line:-2
请确定使用正确的包或
你本地的用户案例API


191
00:09:26,166 --> 00:09:28,969 line:-1
对于所有的这些新功能 我都很兴奋


192
00:09:29,036 --> 00:09:30,804 line:-1
我们今年做出了提升


193
00:09:30,871 --> 00:09:32,172 line:-1
我期待看到你在app中


194
00:09:32,239 --> 00:09:35,209 line:-1
会为国际用户带来什么


195
00:09:35,542 --> 00:09:39,012 line:-1
现在我们已经简化了实现方法


196
00:09:39,079 --> 00:09:40,714 line:-2
有请Vivian
Vivian？


197
00:09:46,620 --> 00:09:47,487 line:-1
谢谢Kulpreet


198
00:09:47,554 --> 00:09:49,890 line:-1
现在 我们来聊一下Xcode


199
00:09:49,957 --> 00:09:52,926 line:-1
中的一些本地化工具的提升功能


200
00:09:53,427 --> 00:09:57,197 line:0
今年 我们根据大家的需求
做了很多事情


201
00:09:57,264 --> 00:10:00,334 line:-1
所以这会像是阅读一份愿望清单


202
00:10:00,400 --> 00:10:03,270 line:-1
首先 性能


203
00:10:04,304 --> 00:10:05,772 line:-1
我非常兴奋地宣布


204
00:10:05,839 --> 00:10:09,743 line:-1
导出很多本地化


205
00:10:09,810 --> 00:10:11,078 line:-1
的用户界面构建器文件项目


206
00:10:11,144 --> 00:10:16,149 line:-1
比之前平均快了15倍


207
00:10:20,621 --> 00:10:23,657 line:-2
所以 这意味着 如果导出
你的项目需要一分钟


208
00:10:24,124 --> 00:10:26,627 line:-1
现在只需4秒了


209
00:10:28,962 --> 00:10:33,066 line:-2
我们是通过重新设计了
字符串提取进程来实现的


210
00:10:33,133 --> 00:10:36,603 line:-1
所以你的用户界面构建器文件越多


211
00:10:36,670 --> 00:10:39,706 line:-1
你会看到越大的改进效果


212
00:10:39,773 --> 00:10:43,076 line:-1
同时也加快了你的工作流程


213
00:10:43,143 --> 00:10:47,281 line:-2
无需再为直接调用genstrings
或btool而烦恼


214
00:10:47,347 --> 00:10:51,385 line:-2
我们使用xcodebuild
exportlocalizations


215
00:10:51,451 --> 00:10:52,986 line:-1
和importlocalizations


216
00:10:53,053 --> 00:10:55,656 line:-2
取代了原有的方法
来创建你所有的字符串文件


217
00:10:56,423 --> 00:10:57,391 line:-1
接下来


218
00:10:58,058 --> 00:10:59,960 line:-1
Mac上的iPad app


219
00:11:00,027 --> 00:11:04,765 line:-2
你可能已经很兴奋能在Mac上
使用你的iPad app


220
00:11:04,831 --> 00:11:08,435 line:-1
但可能有一些字符串不被支持


221
00:11:08,502 --> 00:11:10,103 line:-1
或其他一些事情 比如


222
00:11:10,404 --> 00:11:11,238 line:-1
点击这里


223
00:11:11,305 --> 00:11:14,374 line:-2
但用户现在需要使用
一个有着光标的鼠标


224
00:11:14,441 --> 00:11:15,275 line:-1
没有人会点击


225
00:11:15,342 --> 00:11:16,476 line:-1
或在新闻中


226
00:11:16,977 --> 00:11:20,314 line:-1
你能控制Siri在设置中的推荐


227
00:11:20,380 --> 00:11:21,682 line:-1
当你使用iPad时


228
00:11:21,748 --> 00:11:26,053 line:-1
但app是Mac的偏好设置


229
00:11:26,553 --> 00:11:27,688 line:-1
当然


230
00:11:28,455 --> 00:11:32,593 line:-1
你会想要使用代码中已有的


231
00:11:32,659 --> 00:11:34,828 line:-1
NSLocalizedString


232
00:11:35,495 --> 00:11:36,964 line:-1
所以 为了实现它


233
00:11:37,030 --> 00:11:42,703 line:-2
我们为特定设备的字符串引入了一个
新的stringsdict规则


234
00:11:43,437 --> 00:11:47,975 line:-2
这个规则结合了复数
和可变的宽度规则


235
00:11:48,041 --> 00:11:50,944 line:-2
你可以在你已有的
字符串中使用它


236
00:11:51,011 --> 00:11:54,314 line:-2
甚至stringsdict文件中
已经存在的文件也可以


237
00:11:56,183 --> 00:11:59,887 line:-2
所以 新规则是
NSStringDeviceSpecificRuleType


238
00:12:00,354 --> 00:12:07,327 line:-2
支持的设备是Apple TV、
Apple Watch、iPad


239
00:12:07,394 --> 00:12:10,764 line:-1
iPhone、iPod和Mac


240
00:12:10,831 --> 00:12:14,401 line:-2
所以 它不仅能在Mac的
iPad app中使用


241
00:12:15,636 --> 00:12:18,071 line:-2
你的stringsdict
会像这样：


242
00:12:18,138 --> 00:12:21,475 line:-1
上面的已有字符串关键字


243
00:12:21,808 --> 00:12:25,612 line:-2
接下来的新规则
NSStringDeviceSpecificRuleType


244
00:12:25,679 --> 00:12:27,648 line:-1
和在一个通过设备关键字的所有


245
00:12:27,714 --> 00:12:32,886 line:-1
特殊设备的字符串序列的字典内部


246
00:12:33,353 --> 00:12:35,589 line:-2
想要了解Mac上的
iPad app的更多内容


247
00:12:35,656 --> 00:12:36,823 line:-1
请观看接下来的演讲


248
00:12:36,890 --> 00:12:39,826 line:-2
将Mac的iPad app
提升到一个新高度


249
00:12:40,427 --> 00:12:41,395 line:-1
接下来


250
00:12:41,995 --> 00:12:43,230 line:-1
设置包


251
00:12:45,265 --> 00:12:49,369 line:-2
你现在可以在Xcode本地化目录
中设置包


252
00:12:49,436 --> 00:12:53,841 line:-2
所以在项目中本地化将
变得非常简单


253
00:12:54,875 --> 00:12:57,544 line:-1
我们做的非常重要地提升之一是


254
00:12:57,611 --> 00:13:00,280 line:-1
Xcode的本地化工具


255
00:13:00,347 --> 00:13:04,051 line:-1
是你能使用的本地化资源


256
00:13:04,351 --> 00:13:05,686 line:-1
所以 到现在


257
00:13:06,086 --> 00:13:07,387 line:-1
为了本地化一张图片


258
00:13:07,454 --> 00:13:11,692 line:-1
它需要成为你项目的一个独立文件


259
00:13:12,025 --> 00:13:17,297 line:-2
这意味着在你的资产目录
会有一些


260
00:13:17,364 --> 00:13:20,501 line:-1
四处分散的本地化的文件


261
00:13:20,567 --> 00:13:23,303 line:-1
所以 我很兴奋来宣布现在开始


262
00:13:23,370 --> 00:13:27,407 line:-2
你能直接在资产目录
本地化图片了


263
00:13:32,179 --> 00:13:36,817 line:-1
所以 你现在能本地化你的图片集


264
00:13:37,117 --> 00:13:39,019 line:-1
观察并发状况


265
00:13:39,353 --> 00:13:41,655 line:-1
Apple TV图像栈


266
00:13:42,089 --> 00:13:43,924 line:-1
雪碧图集


267
00:13:44,458 --> 00:13:47,494 line:-2
Game Center控制面板
和排行榜


268
00:13:47,561 --> 00:13:50,531 line:-1
以及新的符号集


269
00:13:50,864 --> 00:13:52,799 line:-1
我们来看一下如何实现


270
00:13:54,101 --> 00:13:55,969 line:-1
在资产目录编辑器中


271
00:13:56,036 --> 00:14:00,040 line:-2
当你在属性检查器
选择了一个支持类型


272
00:14:00,107 --> 00:14:02,442 line:-1
你就会发现一个本地化按钮


273
00:14:02,809 --> 00:14:03,677 line:-1
点击它


274
00:14:03,744 --> 00:14:05,612 line:-1
我们为内容.JSON的资产添加


275
00:14:05,679 --> 00:14:08,382 line:-1
本地化属性


276
00:14:08,615 --> 00:14:11,952 line:-2
你可以导出一个
Xcode本地化目录


277
00:14:12,953 --> 00:14:15,289 line:-1
不过 如果你是多语种


278
00:14:15,355 --> 00:14:18,192 line:-1
你自己本地化了一些文件


279
00:14:18,492 --> 00:14:21,862 line:-1
或你移动一些已经本地化的图片


280
00:14:22,062 --> 00:14:23,864 line:-1
到资产目录


281
00:14:24,364 --> 00:14:26,033 line:-1
当你点击这个按钮


282
00:14:26,500 --> 00:14:29,069 line:-1
它会显示你项目中所有


283
00:14:29,136 --> 00:14:32,372 line:-1
本地化过文件的复选框


284
00:14:33,307 --> 00:14:34,875 line:-1
检查其中的一些


285
00:14:35,876 --> 00:14:39,012 line:-2
它会在资产目录编辑器
创建wells


286
00:14:39,079 --> 00:14:43,884 line:-2
所以你能拖拽本地化的图片到
你想要的其他资产中


287
00:14:44,751 --> 00:14:46,887 line:-1
那么 新的符号们会怎样呢？


288
00:14:47,221 --> 00:14:51,058 line:-1
SF系统符号已经被本地化了


289
00:14:51,124 --> 00:14:52,993 line:-1
你无需再做其他工作


290
00:14:53,894 --> 00:14:56,663 line:-1
自定义符号也能被本地化


291
00:14:56,730 --> 00:14:58,632 line:-1
你能设置方向


292
00:14:58,699 --> 00:15:01,201 line:-2
或者你只需要它们
为从右到左的语言翻转


293
00:15:01,268 --> 00:15:02,769 line:-1
比如阿拉伯语和希伯来语


294
00:15:02,836 --> 00:15:07,741 line:-2
或者你能在相同图片
工作流做一个完整的本地化循环


295
00:15:07,808 --> 00:15:11,411 line:-2
你会发现在属性检查器有
同样的本地化按钮


296
00:15:12,012 --> 00:15:13,247 line:-1
了解符号的更多内容


297
00:15:13,313 --> 00:15:17,284 line:-2
可以今天晚些时候参加
SF符号介绍演讲


298
00:15:18,552 --> 00:15:19,620 line:-1
接下来


299
00:15:19,686 --> 00:15:22,222 line:-1
我想要在示例中向你展示实际操作


300
00:15:28,562 --> 00:15:30,130 line:-2
现在 你可能留意到
在Kulpreet的示例中


301
00:15:30,197 --> 00:15:33,033 line:-1
我们并没有完全本地化剩余的图片


302
00:15:33,100 --> 00:15:34,768 line:-1
现在我们来完成它


303
00:15:35,335 --> 00:15:36,870 line:-1
如果我进入Xcode


304
00:15:36,937 --> 00:15:38,505 line:-1
我能找到我的资产目录


305
00:15:38,572 --> 00:15:41,542 line:-1
我们来修复这张瑜伽图片


306
00:15:41,608 --> 00:15:43,944 line:-1
这是月球上非常棒的瑜伽疗养所


307
00:15:44,011 --> 00:15:47,948 line:-2
你能感觉心理和身体上
都比以前轻了


308
00:15:49,249 --> 00:15:52,586 line:-1
所以 我只需打开属性检查器


309
00:15:52,653 --> 00:15:54,254 line:-1
点击本地化


310
00:15:55,055 --> 00:15:57,591 line:-1
保存 就好了


311
00:15:57,658 --> 00:16:00,961 line:-2
我已经为我其他的旅行指南
完成了本地化


312
00:16:01,895 --> 00:16:05,599 line:-1
但我有一张已经被本地化的图片


313
00:16:05,666 --> 00:16:08,335 line:-1
我想要把它移到我的资产目录


314
00:16:08,402 --> 00:16:11,772 line:-1
利用资产目录所有很棒的功能


315
00:16:11,839 --> 00:16:15,309 line:-2
比如来指定一个不同的外观
来适配深色模式


316
00:16:15,809 --> 00:16:17,010 line:-1
这超级简单


317
00:16:17,077 --> 00:16:20,981 line:-1
我只需将我的旧图片拖入到资产目录


318
00:16:21,782 --> 00:16:24,451 line:-1
Xcode已经为相同名字的旧资源


319
00:16:24,518 --> 00:16:27,888 line:-1
创建了一个新的图片集


320
00:16:27,955 --> 00:16:31,124 line:-2
所以我甚至不需要在故事板
做任何修改


321
00:16:31,191 --> 00:16:32,426 line:-1
它就能工作


322
00:16:32,759 --> 00:16:35,295 line:-2
现在 我也想要将我的本地化文件
一起拖进去


323
00:16:35,362 --> 00:16:37,297 line:-1
我点击本地化


324
00:16:38,532 --> 00:16:42,703 line:-2
核对当前的语言
将它拖入正确的位置


325
00:16:43,504 --> 00:16:44,638 line:-1
然后保存


326
00:16:45,305 --> 00:16:47,374 line:-1
现在 我能删除我的项目


327
00:16:47,975 --> 00:16:49,943 line:-1
和硬盘里的旧文件


328
00:16:50,744 --> 00:16:53,814 line:-1
好了 一切都准备好了


329
00:16:53,881 --> 00:16:57,317 line:-2
我现在能导出一个
Xcode本地化目录


330
00:16:57,651 --> 00:17:00,554 line:-1
这和Xcode 10工作流程一样


331
00:17:00,621 --> 00:17:03,190 line:-1
我选择项目 来到编辑器


332
00:17:03,657 --> 00:17:05,459 line:-1
为本地化导出


333
00:17:08,228 --> 00:17:10,396 line:-1
我们现在来完成法语


334
00:17:10,464 --> 00:17:11,832 line:-1
我不需要其他多余的


335
00:17:12,799 --> 00:17:14,667 line:-1
好的 导出


336
00:17:15,836 --> 00:17:17,404 line:-1
我们来看看我们得到了什么


337
00:17:19,940 --> 00:17:23,010 line:-2
好的 这是我的Xcode的
本地化目录


338
00:17:23,076 --> 00:17:25,913 line:-1
我能将它发送到我的本地化工具


339
00:17:26,180 --> 00:17:27,781 line:-1
我找到了我的本地化工具


340
00:17:28,582 --> 00:17:29,616 line:-1
我将它打开


341
00:17:29,683 --> 00:17:34,821 line:-2
我知道我能访问本地化文件
开始工作


342
00:17:34,888 --> 00:17:38,192 line:-1
所以 我们在这里得到了xliff


343
00:17:38,258 --> 00:17:39,459 line:-1
我知道怎么做


344
00:17:39,526 --> 00:17:42,029 line:-1
我知道它包含项目所有的字符串


345
00:17:42,095 --> 00:17:43,664 line:-1
但还有什么呢？


346
00:17:44,498 --> 00:17:46,667 line:-1
我们有一个资产目录


347
00:17:46,867 --> 00:17:50,170 line:-1
这是一个完整的资产目录


348
00:17:50,237 --> 00:17:53,974 line:-2
我能将它拖到另一个
Xcode项目 使用它


349
00:17:54,041 --> 00:17:58,846 line:-2
但本地化工具不关心这个文件
这个文件已被过滤掉了


350
00:17:58,912 --> 00:18:01,481 line:-1
所以 它是唯一的本地化内容


351
00:18:01,782 --> 00:18:04,151 line:-1
只针对这个语言环境


352
00:18:04,918 --> 00:18:07,688 line:-2
现在 当前情况下
我们还没有任何的法语图片


353
00:18:07,754 --> 00:18:12,392 line:-1
现在这里只有英文的复制文件


354
00:18:12,459 --> 00:18:14,294 line:-1
这是为了让本地化工具能更方便工作


355
00:18:14,361 --> 00:18:16,864 line:-1
它们能直接使用 开始编辑


356
00:18:17,764 --> 00:18:21,602 line:-2
为了节省时间 我已经有一些
本地化工具完成的文件了


357
00:18:22,135 --> 00:18:23,737 line:-1
我们来看看它们返回了什么


358
00:18:24,204 --> 00:18:27,508 line:-1
打开我最喜爱的本地化工具的目录


359
00:18:30,477 --> 00:18:32,946 line:-1
我们能看到一边是所有图片


360
00:18:34,615 --> 00:18:39,386 line:-2
的英文版本 另一边是法语版本
这是瑜伽 对的


361
00:18:40,087 --> 00:18:43,056 line:-1
我们来将它导入到项目中


362
00:18:43,123 --> 00:18:44,525 line:-1
回到Xcode


363
00:18:44,791 --> 00:18:47,561 line:-2
还是和Xcode 10一样的
工作流程


364
00:18:47,628 --> 00:18:48,795 line:-1
选择项目


365
00:18:48,996 --> 00:18:50,030 line:-1
来到编辑器


366
00:18:50,397 --> 00:18:52,266 line:-1
倒入本地化


367
00:18:52,332 --> 00:18:55,602 line:-2
选择它
完成Xcode本地化目录


368
00:18:55,669 --> 00:18:58,539 line:-1
选择导入 很棒


369
00:18:58,939 --> 00:19:00,908 line:-1
那么 现在 我要来到我的资产目录


370
00:19:02,776 --> 00:19:07,981 line:-1
我看到 现在我的图片有两个版本


371
00:19:08,048 --> 00:19:09,449 line:-1
都在一个地方


372
00:19:12,386 --> 00:19:15,088 line:-2
但是 它有点小
我们再次运行一下app


373
00:19:15,155 --> 00:19:17,057 line:-1
现在我们看到大了一点点


374
00:19:20,394 --> 00:19:22,229 line:-1
所以 这次当我们回到app


375
00:19:22,296 --> 00:19:26,600 line:-1
我们现在应该能看到


376
00:19:27,067 --> 00:19:28,602 line:-1
我们法语标题的旅行指南了


377
00:19:33,373 --> 00:19:35,809 line:-1
看吧 真好看


378
00:19:41,782 --> 00:19:44,685 line:-1
我们回到幻灯片


379
00:19:48,622 --> 00:19:53,293 line:-2
我们刚看到了Xcode的
本地化工具的新功能


380
00:19:53,360 --> 00:19:55,996 line:-1
用户界面构建器文件的导出和导入


381
00:19:56,063 --> 00:19:57,965 line:-1
现在更快了


382
00:19:59,032 --> 00:20:02,636 line:-2
这有一则新stringsdict规则
针对特定设备设定的


383
00:20:04,004 --> 00:20:06,740 line:-1
现在设置包本地化更简单了


384
00:20:08,008 --> 00:20:12,412 line:-1
符号和图片能在资产目录下本地化了


385
00:20:12,713 --> 00:20:15,315 line:-2
现在 当然
只要你本地化了你的app


386
00:20:15,382 --> 00:20:18,819 line:-1
你会想要测试所有本地化的功能


387
00:20:19,086 --> 00:20:21,021 line:-1
我们也简化了步骤


388
00:20:21,421 --> 00:20:24,491 line:-1
有请Arthur来为大家讲解


389
00:20:27,828 --> 00:20:28,662 line:-1
谢谢Vivian


390
00:20:28,729 --> 00:20:30,330 line:-1
（使用XCTest来本地化截屏）


391
00:20:31,064 --> 00:20:33,300 line:-1
现在 我们来了解如何利用UI测试


392
00:20:33,367 --> 00:20:35,435 line:-1
的优势来测试本地化


393
00:20:36,470 --> 00:20:39,673 line:-1
测试是开发周期一个重要的部分


394
00:20:39,740 --> 00:20:41,675 line:-1
它耗费时间和资源


395
00:20:41,742 --> 00:20:44,077 line:-1
但是当你添加新功能时


396
00:20:44,144 --> 00:20:45,445 line:-1
和检测问题


397
00:20:45,512 --> 00:20:46,547 line:-1
协助回归测试很重要


398
00:20:46,613 --> 00:20:49,149 line:-1
在你发布你产品给用户之前


399
00:20:51,818 --> 00:20:53,820 line:-1
如果你的app支持超过一种语言


400
00:20:53,887 --> 00:20:56,456 line:-1
你必须测试所有语言特征的问题


401
00:20:56,890 --> 00:20:58,258 line:-1
剪辑的字符串


402
00:20:59,059 --> 00:21:00,260 line:-1
截断的内容


403
00:21:01,728 --> 00:21:02,996 line:-1
重叠的布局


404
00:21:03,430 --> 00:21:06,033 line:-1
或甚至从右到左特定的语言


405
00:21:06,099 --> 00:21:07,701 line:-1
比如阿拉伯语和希伯来语


406
00:21:09,703 --> 00:21:13,874 line:-2
现在 如果你想要测试
你支持的所有设备


407
00:21:15,175 --> 00:21:17,211 line:-1
你支持的所有语言


408
00:21:18,445 --> 00:21:20,848 line:-1
你的测试度量会重复探索


409
00:21:21,849 --> 00:21:25,619 line:-2
你很容易就会遇到
成千上万种测试场景


410
00:21:26,253 --> 00:21:27,621 line:-1
你的测试人员手动覆盖所有的


411
00:21:27,688 --> 00:21:30,324 line:-1
测试场景会非常难


412
00:21:30,390 --> 00:21:33,827 line:-2
所以 最重要的是在你项目中
引入测试


413
00:21:33,894 --> 00:21:36,096 line:-1
来减轻质保的体力劳动负荷


414
00:21:38,065 --> 00:21:39,233 line:-1
在Xcode 11


415
00:21:40,334 --> 00:21:43,670 line:-1
覆盖所有的测试计划


416
00:21:43,737 --> 00:21:44,771 line:0
的自动化测试变得简单了


417
00:21:49,710 --> 00:21:51,144 line:-1
测试计划通过使用不同的配置


418
00:21:51,211 --> 00:21:53,881 line:-1
是一种非常简单的方法


419
00:21:53,947 --> 00:21:55,382 line:-1
来多次跑相同的测试


420
00:21:56,416 --> 00:21:58,852 line:-1
我今天不会讲测试计划的很多细节


421
00:21:58,919 --> 00:22:01,421 line:-2
要了解更多内容
请参加周四早上的


422
00:22:01,488 --> 00:22:03,390 line:-1
使用Xcode测试演讲


423
00:22:04,992 --> 00:22:06,627 line:-1
我们要讲的是如何在你的


424
00:22:06,693 --> 00:22:10,230 line:-1
本地化工作流程中使用测试计划


425
00:22:12,266 --> 00:22:13,333 line:-1
首先


426
00:22:13,867 --> 00:22:17,004 line:-2
我们会讲如何将你的本地化测试过程
变得容易


427
00:22:18,572 --> 00:22:21,208 line:-2
接下来 我们会讲到
如何使用测试计划


428
00:22:21,275 --> 00:22:23,143 line:-1
来集成本地化截屏


429
00:22:24,611 --> 00:22:25,646 line:-1
最后


430
00:22:25,712 --> 00:22:29,149 line:-1
我们会了解一些截屏的使用案例


431
00:22:29,216 --> 00:22:31,351 line:-1
因为它们不仅可以用来测试


432
00:22:33,520 --> 00:22:34,421 line:-1
首先


433
00:22:35,322 --> 00:22:37,691 line:-1
我们来了解我们如何确保


434
00:22:37,758 --> 00:22:39,359 line:-1
测试你使用的每种语言


435
00:22:40,427 --> 00:22:41,361 line:-1
这么做


436
00:22:42,329 --> 00:22:44,631 line:-1
你需要使用可访问性标识符


437
00:22:45,566 --> 00:22:47,601 line:-1
这些标识符都是特殊的


438
00:22:47,668 --> 00:22:48,669 line:-1
稳定的


439
00:22:48,735 --> 00:22:52,072 line:-2
我们会保证能在任意语言
环境下进行你的测试


440
00:22:53,640 --> 00:22:55,375 line:-1
它们配置起来简单


441
00:22:55,442 --> 00:22:57,811 line:-1
在代码中设置相同名字的属性


442
00:22:58,812 --> 00:23:02,282 line:-2
如果你使用了界面构建器
创建你的UI元素


443
00:23:02,950 --> 00:23:05,686 line:-1
你能在标识符检查器定义它们


444
00:23:08,455 --> 00:23:09,656 line:-1
这样就可以了


445
00:23:09,723 --> 00:23:11,992 line:-2
所以 现在 你的本地化测试
很容易


446
00:23:12,359 --> 00:23:15,395 line:-2
我们来看看你如何使用它们来
创建本地化截图


447
00:23:16,730 --> 00:23:19,700 line:-1
我在之前的测试计划中提到过


448
00:23:19,766 --> 00:23:21,902 line:-1
你能创建多个配置


449
00:23:24,605 --> 00:23:26,740 line:-1
在每个配置中


450
00:23:27,107 --> 00:23:28,442 line:-1
你能设置一个不同的语言


451
00:23:28,509 --> 00:23:31,078 line:-1
和一个不同的地区来运行你的测试


452
00:23:33,814 --> 00:23:37,518 line:-1
接着 启用本地化截屏幕选项


453
00:23:37,584 --> 00:23:39,553 line:-1
在UI测试部分


454
00:23:39,953 --> 00:23:41,955 line:-1
你的屏幕截图将持续


455
00:23:42,489 --> 00:23:44,458 line:-1
你能用它们做很多事情


456
00:23:46,326 --> 00:23:48,829 line:-1
在模式编辑器里 有这些选项


457
00:23:48,896 --> 00:23:50,631 line:-1
我们已经知道如何使用


458
00:23:50,697 --> 00:23:52,900 line:-1
以防你还没在测试计划中标注它


459
00:23:56,570 --> 00:23:59,806 line:-2
现在你的测试设置完成
可以开始本地化截屏了


460
00:23:59,873 --> 00:24:01,441 line:-1
我们来看看如何使用它们


461
00:24:01,742 --> 00:24:03,510 line:-1
它们是很棒的扩展市场的资源


462
00:24:04,044 --> 00:24:06,480 line:-1
你可以发送它们给市场团队


463
00:24:06,847 --> 00:24:08,382 line:-1
或甚至上传至App Store


464
00:24:08,448 --> 00:24:10,284 line:-1
来展示你最新的设计


465
00:24:11,585 --> 00:24:15,122 line:-2
你可以在你的文档或
你的教程中使用它们


466
00:24:17,191 --> 00:24:18,859 line:-1
但是 最重要的是


467
00:24:19,393 --> 00:24:22,563 line:-2
它们能帮你的本地化工具
获取它们需要的内容


468
00:24:22,629 --> 00:24:25,132 line:-1
给你提供高质量的本地化


469
00:24:26,700 --> 00:24:28,135 line:-1
我们来快速看一个例子


470
00:24:29,870 --> 00:24:32,406 line:-2
一个简单的词语
比如英文中的start


471
00:24:32,472 --> 00:24:35,609 line:-1
它有作为动词开始的意思


472
00:24:35,676 --> 00:24:39,112 line:-2
它也可以是一个名词
表示一个事件的开始


473
00:24:39,680 --> 00:24:42,182 line:-1
在英文中 这个差异可能很细微


474
00:24:42,249 --> 00:24:43,083 line:-1
但它在其他语言本地化过程中


475
00:24:43,150 --> 00:24:45,419 line:-1
会产生很大的差异


476
00:24:46,753 --> 00:24:50,524 line:-2
这里 我们知道它是一个名词
因为它表示了开始的日期


477
00:24:52,326 --> 00:24:54,895 line:-1
根据本地化工具中的视觉内容


478
00:24:54,962 --> 00:24:56,330 line:-1
我们减少了歧义


479
00:24:56,396 --> 00:24:59,233 line:-1
来保证你得到了最准确地本地化翻译


480
00:25:01,401 --> 00:25:05,405 line:-2
去年 我们介绍了
Xcode的本地化目录


481
00:25:06,473 --> 00:25:10,210 line:-1
它是基于一个地方的资源


482
00:25:10,277 --> 00:25:13,814 line:-2
处理本地化字符串和非字符串
的一个非常通用地方法


483
00:25:15,749 --> 00:25:18,452 line:-1
在里面 我们包含了Notes目录


484
00:25:18,519 --> 00:25:21,221 line:-1
特别是包含了你的上下文信息


485
00:25:21,288 --> 00:25:23,757 line:-1
比如你本地化工具的截屏


486
00:25:26,059 --> 00:25:28,529 line:-1
今年 我非常高兴


487
00:25:28,595 --> 00:25:30,631 line:-1
我们支持在Xcode本地化目录


488
00:25:30,697 --> 00:25:33,166 line:-1
中自动地为你包括这些截图


489
00:25:38,372 --> 00:25:40,073 line:-1
所有的这些 你只需在你


490
00:25:40,140 --> 00:25:43,043 line:-1
使用过的导出本地化


491
00:25:43,110 --> 00:25:44,611 line:-1
工作流中点击一下


492
00:25:46,547 --> 00:25:49,983 line:-2
如果你使用自动化
创建你的本地化目录


493
00:25:50,050 --> 00:25:52,519 line:-2
你只需简单地添加
IncludeScreenshots参数


494
00:25:52,586 --> 00:25:54,855 line:-2
至你的xcodebuildexportLocalizations
命令中


495
00:25:57,157 --> 00:25:59,860 line:-1
你也能自定义导出的截屏


496
00:26:00,093 --> 00:26:03,263 line:-1
我们为你简化了指定测试目标


497
00:26:03,330 --> 00:26:07,367 line:-1
设备和导出至本地化目录中的语言


498
00:26:10,470 --> 00:26:14,174 line:-1
但你的本地化工具要通过很多个


499
00:26:14,241 --> 00:26:16,944 line:-1
截图来查看UI上展示的字符串


500
00:26:17,711 --> 00:26:21,782 line:-1
所以 我们创建的每个本地化截图


501
00:26:21,849 --> 00:26:23,817 line:-2
都有一个
metadata.plist


502
00:26:23,884 --> 00:26:27,421 line:-1
映射至截图上确定位置上的字符串


503
00:26:29,957 --> 00:26:31,925 line:-1
这个文件包括了字符串的ID


504
00:26:31,992 --> 00:26:33,927 line:-1
你能在xliff找到


505
00:26:34,528 --> 00:26:36,597 line:-1
还有框架构造


506
00:26:36,663 --> 00:26:40,334 line:-1
就是截图中字符串的具体位置


507
00:26:41,301 --> 00:26:43,871 line:-1
这让本地化工具能简单地


508
00:26:43,937 --> 00:26:46,139 line:-1
映射字符串到xliff


509
00:26:46,206 --> 00:26:48,742 line:-1
并直接在截图上高亮它们


510
00:26:50,544 --> 00:26:53,113 line:-1
只要你导出了你的本地化目录


511
00:26:53,180 --> 00:26:56,717 line:-2
这个新内容就在Notes目录下被
有序地组织起来了


512
00:26:56,783 --> 00:26:59,653 line:-2
这个metadata.plist
为了测试目标和设备


513
00:26:59,720 --> 00:27:01,388 line:-1
合并为了一个


514
00:27:02,222 --> 00:27:04,124 line:-1
在Xcode 11和测试计划直接


515
00:27:04,458 --> 00:27:08,295 line:-1
使用本地化截图非常简单


516
00:27:12,165 --> 00:27:14,668 line:-1
我想请Vivian回到舞台


517
00:27:14,735 --> 00:27:16,270 line:-1
来向你们展示如何操作


518
00:27:21,241 --> 00:27:22,576 line:-1
谢谢Arthur


519
00:27:22,643 --> 00:27:28,248 line:-2
现在我们已经本地化我们的app了
我们想要测试本地化功能


520
00:27:33,053 --> 00:27:33,954 line:-1
好的


521
00:27:34,655 --> 00:27:38,759 line:-2
我已经为我的项目
创建了一些UI测试


522
00:27:38,825 --> 00:27:44,164 line:-2
我这里有一些
它们会截取我所有的屏幕


523
00:27:44,231 --> 00:27:46,200 line:-1
我觉得会对我的本地化


524
00:27:46,266 --> 00:27:49,703 line:-1
工具理解上下文非常有用


525
00:27:49,770 --> 00:27:50,904 line:-1
我有另一个测试


526
00:27:51,438 --> 00:27:52,773 line:-1
它是zip文件


527
00:27:52,840 --> 00:27:56,210 line:-1
我觉得会对扩大市场有用的


528
00:27:56,276 --> 00:27:58,312 line:-1
一些旅行指南图片


529
00:27:59,379 --> 00:28:04,451 line:-2
但我想在我支持的所有本地化
中运行所有的测试


530
00:28:04,518 --> 00:28:05,986 line:-1
它会耗费一些时间


531
00:28:06,053 --> 00:28:08,355 line:-1
测试计划这时就很有用了


532
00:28:08,422 --> 00:28:11,692 line:-2
你能在你的项目中的任何文件
添加一个测试计划


533
00:28:11,758 --> 00:28:14,995 line:-2
文件 新建 文件
这里有它可以使用的一个模版


534
00:28:15,062 --> 00:28:18,098 line:-1
我只需搜寻计划 在这里


535
00:28:18,165 --> 00:28:22,202 line:-2
你也能将你已有的测试
移动到测试计划中


536
00:28:22,469 --> 00:28:24,705 line:-1
为了节省时间 我已经做了一个


537
00:28:25,272 --> 00:28:26,640 line:-1
那么 我们来看看


538
00:28:27,674 --> 00:28:31,011 line:-1
好的 我这里有两个测试目标


539
00:28:31,411 --> 00:28:35,916 line:-1
我有一个能运行我所有的截图测试


540
00:28:35,983 --> 00:28:40,087 line:-1
另一个能截取市场需要的图片


541
00:28:40,854 --> 00:28:43,190 line:-1
我也设置了一些配置


542
00:28:43,257 --> 00:28:46,693 line:-1
这里最重要的是在分享设置中


543
00:28:47,661 --> 00:28:50,831 line:-1
启用本地化截屏


544
00:28:52,032 --> 00:28:56,470 line:-1
我已经配置了一个英文 美国


545
00:28:56,537 --> 00:28:58,672 line:-1
另一个瑞典语 瑞典


546
00:28:58,739 --> 00:29:01,742 line:-1
因为我已经得到了一些法语图片


547
00:29:01,808 --> 00:29:03,777 line:-1
我也添加一个法语


548
00:29:03,844 --> 00:29:05,312 line:-1
点击加号


549
00:29:05,612 --> 00:29:09,149 line:-1
我们称它为一个法语 法国


550
00:29:11,652 --> 00:29:12,486 line:-1
好的


551
00:29:13,053 --> 00:29:17,958 line:-1
我们设置app语言为法语


552
00:29:18,225 --> 00:29:22,763 line:-1
app的地区为法国


553
00:29:23,230 --> 00:29:24,064 line:-1
好的


554
00:29:24,464 --> 00:29:28,769 line:-2
现在 我来重新运行测试
来获得市场图片


555
00:29:28,836 --> 00:29:32,272 line:-1
我得到了一张新的本地化法语图片


556
00:29:33,507 --> 00:29:36,677 line:-1
我回到UI测试来运行它


557
00:29:36,743 --> 00:29:39,546 line:-1
现在 当我点击测试方块


558
00:29:39,613 --> 00:29:41,548 line:-1
它不会只运行我的测试一次


559
00:29:41,615 --> 00:29:44,451 line:-2
取而代之的是
它会使用我的配置来运行


560
00:29:44,518 --> 00:29:47,454 line:-2
我们能看到它
通过了所有的这些测试


561
00:29:47,521 --> 00:29:50,691 line:-1
它将会运行三次


562
00:29:50,757 --> 00:29:52,326 line:-1
英语


563
00:29:52,392 --> 00:29:54,161 line:-1
接下来是瑞典语


564
00:29:54,228 --> 00:29:55,963 line:-1
除非我的本地化工具没有完成


565
00:29:56,029 --> 00:29:58,432 line:-1
我们将会再一次看到一些英文字符串


566
00:29:58,765 --> 00:30:00,934 line:-1
接下来 最后一次是法语


567
00:30:01,969 --> 00:30:03,370 line:-1
我知道它会运行


568
00:30:03,437 --> 00:30:06,974 line:-2
因为我使用了Arthur提到的
可访问性标识符


569
00:30:07,040 --> 00:30:11,712 line:-2
所以我的测试会运行
所有配置的这三种语言


570
00:30:11,778 --> 00:30:13,480 line:-1
好的 我们再来一次


571
00:30:16,617 --> 00:30:19,219 line:-1
法语 好的


572
00:30:20,220 --> 00:30:22,155 line:-1
那么 我们看看我们得到了什么


573
00:30:23,257 --> 00:30:25,826 line:-1
如果我查看我刚才跑过的测试


574
00:30:26,627 --> 00:30:29,196 line:-2
好的 我能看到它在运作
在我的配置中


575
00:30:29,263 --> 00:30:33,600 line:-2
如果我检查法语
查看我的附件


576
00:30:34,201 --> 00:30:37,104 line:-2
很棒 所以
我用这一张作为市场宣传


577
00:30:38,172 --> 00:30:41,041 line:-2
但是我的本地化工具还等着
瑞典语的更新


578
00:30:41,108 --> 00:30:42,776 line:-1
这样它们就能结束了


579
00:30:42,843 --> 00:30:47,514 line:-2
所以我需要发送给它们一个新的
Xcode本地化目录


580
00:30:47,581 --> 00:30:48,982 line:-1
以及我想确认


581
00:30:49,049 --> 00:30:52,186 line:-2
它们能将棘手的“开始”字符串
处理正确


582
00:30:52,252 --> 00:30:54,621 line:-1
那么 我们来让它们获得一张截图


583
00:30:55,322 --> 00:30:56,657 line:-1
我早些时候运行过我的测试


584
00:30:56,723 --> 00:30:59,359 line:-1
让它来截取我所有的屏幕


585
00:31:00,060 --> 00:31:02,129 line:-1
那么 我来看瑞典语的这张


586
00:31:03,864 --> 00:31:07,434 line:-2
我们来看看能否找到
诡异的“开始”字符串


587
00:31:08,135 --> 00:31:09,870 line:-1
我觉得它在这里


588
00:31:10,370 --> 00:31:11,238 line:-1
是的 在这 好的


589
00:31:11,305 --> 00:31:13,740 line:-1
它们没有翻译开始或结束


590
00:31:13,807 --> 00:31:15,876 line:-1
以及旅行者


591
00:31:16,176 --> 00:31:22,616 line:-1
这里 我得到的包含框架信息的文件


592
00:31:23,283 --> 00:31:24,885 line:-1
应该会很有用


593
00:31:25,719 --> 00:31:29,890 line:-2
所以 现在我准备导出
一个Xcode本地化目录


594
00:31:30,390 --> 00:31:31,792 line:-1
选择项目


595
00:31:31,859 --> 00:31:32,893 line:-1
来到编辑器


596
00:31:33,360 --> 00:31:34,895 line:-1
导出本地化


597
00:31:35,729 --> 00:31:38,899 line:-1
这次 我来运行瑞典语


598
00:31:39,700 --> 00:31:44,204 line:-1
最重要的是 我会点击包含截屏


599
00:31:44,738 --> 00:31:47,975 line:-2
好的 Xcode找到了
19张可用的截屏


600
00:31:48,041 --> 00:31:49,910 line:-1
我们来看一下我们得到了什么


601
00:31:50,143 --> 00:31:51,144 line:-1
如果我点击自定义


602
00:31:51,211 --> 00:31:57,718 line:-2
我能看到我在iPhone 8 Plus
10R和10S跑过的测试


603
00:31:57,784 --> 00:31:59,186 line:-1
所以 如果有截取的


604
00:31:59,253 --> 00:32:01,388 line:-1
任何布局的问题


605
00:32:01,455 --> 00:32:03,690 line:-1
好的 我会保留所有这些


606
00:32:04,791 --> 00:32:08,929 line:-1
现在 我来导出


607
00:32:10,297 --> 00:32:11,131 line:-1
好的


608
00:32:12,633 --> 00:32:14,401 line:-1
现在 如果我来看我新的


609
00:32:16,270 --> 00:32:17,938 line:-1
本地化目录


610
00:32:19,239 --> 00:32:23,944 line:-1
现在在Notes目录下 我有截图


611
00:32:24,411 --> 00:32:27,214 line:-1
我能在这看到由测试目标和设备


612
00:32:27,281 --> 00:32:30,884 line:-1
组织的所有的截图


613
00:32:30,951 --> 00:32:34,254 line:-1
事实上 我将取出等下市场需要的


614
00:32:34,588 --> 00:32:37,958 line:-1
将剩余的发送至我的本地化工具


615
00:32:39,793 --> 00:32:40,961 line:-1
那么 我们看一下这里


616
00:32:41,028 --> 00:32:44,965 line:-1
我们看到我所有的截图都在这


617
00:32:47,601 --> 00:32:49,503 line:-1
好的 这是怪异的“开始”字符串


618
00:32:49,570 --> 00:32:51,939 line:-1
还有比开始更糟糕的


619
00:32:52,005 --> 00:32:53,640 line:-1
你看一下这张截图


620
00:32:53,707 --> 00:32:59,112 line:-2
这些字符串
预订 一 二 三次


621
00:32:59,179 --> 00:33:05,819 line:-2
所以 plist文件的
帧信息将会很有用


622
00:33:05,886 --> 00:33:08,222 line:-1
这就是合并的plist文件


623
00:33:08,288 --> 00:33:11,792 line:-1
它包含所有字符串的帧信息


624
00:33:11,859 --> 00:33:15,529 line:-1
截取了整个组的屏幕


625
00:33:16,463 --> 00:33:20,167 line:-2
所以 它们非常好用因为
现在当我在本地化工具里


626
00:33:20,234 --> 00:33:23,770 line:-1
我打开我最喜欢的本地化工具目录


627
00:33:25,372 --> 00:33:30,811 line:-1
现在 我能预览字符串在哪出现


628
00:33:35,782 --> 00:33:39,987 line:-1
我不仅能看到一个地方的字符出现了


629
00:33:40,053 --> 00:33:41,221 line:-1
它还会向我展示


630
00:33:41,288 --> 00:33:44,291 line:-1
截取到图片中的所有已知字符串


631
00:33:46,660 --> 00:33:49,196 line:-1
所以 我的本地化工具将会很开心


632
00:33:52,366 --> 00:33:54,034 line:-1
好的 我们来总结一下


633
00:33:55,669 --> 00:34:00,374 line:-2
今天我们看见了
用户能在你的app中


634
00:34:00,440 --> 00:34:03,577 line:-1
运行和系统不一样的语言


635
00:34:04,178 --> 00:34:09,216 line:-2
我们了解了Xcode中
本地化工具的很多提升改进的功能


636
00:34:09,283 --> 00:34:13,286 line:-1
包括更快地导出界面构建器文件


637
00:34:13,353 --> 00:34:15,155 line:-2
一则新的
stringsdict规则


638
00:34:15,222 --> 00:34:17,925 line:-1
本地化你的设置包是多么简单


639
00:34:17,991 --> 00:34:19,293 line:-1
以及 当然


640
00:34:19,359 --> 00:34:22,329 line:-1
如何在你的资产目录下本地化图片


641
00:34:23,397 --> 00:34:28,467 line:-1
以及如何在测试中


642
00:34:28,534 --> 00:34:30,070 line:-1
创建本地化截图


643
00:34:30,137 --> 00:34:33,072 line:-1
和一些截图的用途


644
00:34:35,375 --> 00:34:36,543 line:-1
了解更多的信息


645
00:34:36,610 --> 00:34:39,813 line:-2
请在developer.apple.com
访问我们的页面


646
00:34:39,880 --> 00:34:44,051 line:-2
如果你有任何疑问
你可以之后在实验室找到我们


647
00:34:44,117 --> 00:34:46,320 line:-2
谢谢大家
祝大家接下来的议程愉快

