1
00:00:06,073 --> 00:00:07,341 line:0
（通用链接的新功能）


2
00:00:07,407 --> 00:00:09,543 line:0
欢迎参加我们的通用链接课程


3
00:00:10,077 --> 00:00:11,612 line:0
我叫Jonathan Grynspan


4
00:00:11,678 --> 00:00:13,947 line:0
我在Apple的核心框架团队工作


5
00:00:14,948 --> 00:00:18,285 line:0
今天 我将向您展示如何在
您的app中使用通用链接


6
00:00:19,219 --> 00:00:21,622 line:0
我们在IOS 9中引入通用链接


7
00:00:21,688 --> 00:00:25,425 line:0
作为在网络和app中
提供丰富内容的好方法


8
00:00:26,460 --> 00:00:28,462 line:0
今天 我将向您展示我们


9
00:00:28,529 --> 00:00:29,530 line:0
已经完成的增强功能


10
00:00:30,397 --> 00:00:33,233 line:0
无论您是已经在iOS
app中采用了通用链接


11
00:00:33,567 --> 00:00:35,569 line:0
还是正在将它们添加到
macOS app中


12
00:00:36,003 --> 00:00:38,772 line:0
您都需要密切关注我将要讨论的变化


13
00:00:40,707 --> 00:00:43,644 line:-1
首先 我们来谈谈什么是通用链接


14
00:00:45,512 --> 00:00:49,783 line:-2
通用链接是HTTP或
HTTPS URL


15
00:00:50,050 --> 00:00:52,119 line:-2
Apple的操作系统将其识别为
指向网络或app中的资源


16
00:00:52,319 --> 00:00:55,789 line:-1
无论是在网上还是在您的app中


17
00:00:56,723 --> 00:00:59,826 line:-1
这意味着 无论您的用户是否


18
00:00:59,893 --> 00:01:01,695 line:-1
安装了app或者只是还没有下载


19
00:01:02,095 --> 00:01:03,830 line:-1
一个URL都可以表示该内容


20
00:01:04,531 --> 00:01:07,167 line:-2
它们是提高用户在app中
参与度的好方法


21
00:01:08,368 --> 00:01:11,872 line:-2
iOS 9和tvOS 10中
引入了通用链接


22
00:01:12,706 --> 00:01:15,175 line:-1
我很高兴地宣布 无论您使用的


23
00:01:15,242 --> 00:01:16,710 line:-2
是AppKit还是UIKit
我们都将向他们


24
00:01:17,344 --> 00:01:19,680 line:-2
介绍带有macOS 10.15的
Mac


25
00:01:20,380 --> 00:01:22,249 line:-1
我一会儿再详细介绍


26
00:01:23,116 --> 00:01:27,054 line:-2
通用链接在您的app
和网站之间是安全关联的


27
00:01:27,754 --> 00:01:29,890 line:-1
您的app在Xcode中采用了


28
00:01:29,957 --> 00:01:32,259 line:-1
一个权限 指示它可以代表哪些域


29
00:01:32,726 --> 00:01:35,195 line:-2
您的网络服务器采用了
一个JSON文件


30
00:01:35,262 --> 00:01:38,165 line:-1
该文件包含了关于您的app中


31
00:01:38,332 --> 00:01:39,700 line:-1
可以表示其域的哪些部分的更多细节


32
00:01:40,601 --> 00:01:42,135 line:-1
这种双向安全握手确保没有人


33
00:01:42,202 --> 00:01:46,006 line:-2
可以将用户重定向到他们
的app而不是您的app


34
00:01:47,508 --> 00:01:50,878 line:-1
我们建议您现在使用自定义URL


35
00:01:51,078 --> 00:01:53,447 line:-2
方案的地方从今天开始
迁移到通用链接


36
00:01:54,281 --> 00:01:56,717 line:-1
自定义URL方案本质上不安全


37
00:01:57,084 --> 00:01:59,186 line:-1
并且可能被恶意开发人员滥用


38
00:01:59,720 --> 00:02:02,723 line:-1
强烈建议不要使用自定义网址方案


39
00:02:05,058 --> 00:02:09,062 line:-2
既然我们已经知道了什么是通用链接
让我们来讨论一下如何构建它们


40
00:02:09,663 --> 00:02:10,997 line:-1
我们将从您的网络服务器开始


41
00:02:13,100 --> 00:02:17,004 line:-2
您的网络服务器必须
有一个有效的HTTPS证书


42
00:02:17,471 --> 00:02:21,642 line:-1
HTTP不安全 不能用于验证


43
00:02:21,842 --> 00:02:23,510 line:-1
app和网站之间的关联


44
00:02:24,678 --> 00:02:27,714 line:-1
用于签名HTTPS证书的根证书


45
00:02:27,881 --> 00:02:30,050 line:-1
必须被操作系统识别


46
00:02:30,617 --> 00:02:32,586 line:-1
不支持自定义根证书


47
00:02:34,087 --> 00:02:36,790 line:-1
生成证书并配置服务器之后


48
00:02:37,157 --> 00:02:39,660 line:-1
添加Apple-app-site-association文件


49
00:02:40,294 --> 00:02:41,495 line:-1
这是一个JSON文件


50
00:02:41,562 --> 00:02:43,163 line:-1
稍后我们将讨论这种格式


51
00:02:44,064 --> 00:02:46,166 line:-2
当您的app安装在
Apple设备上时


52
00:02:46,333 --> 00:02:48,135 line:-1
操作系统将下载该文件


53
00:02:48,202 --> 00:02:51,305 line:-2
以确定服务器将允许您的
app使用哪些服务


54
00:02:52,105 --> 00:02:55,342 line:-1
系统还定期下载此文件的更新


55
00:02:56,210 --> 00:02:59,513 line:-2
通用链接是这个文件中
可能包含的许多服务之一


56
00:03:00,547 --> 00:03:02,216 line:-1
这个文件应该位于


57
00:03:02,449 --> 00:03:04,818 line:-1
HTTPS://


58
00:03:05,185 --> 00:03:06,186 line:-1
您的域名


59
00:03:06,587 --> 00:03:08,522 line:-1
/.well-known


60
00:03:08,589 --> 00:03:11,024 line:-1
/apple-app-site-association


61
00:03:11,925 --> 00:03:13,427 line:-1
不推荐使用其他路径


62
00:03:14,194 --> 00:03:17,798 line:-2
过去 我们讨论过注册您的
apple-app-site-association文件


63
00:03:18,332 --> 00:03:21,335 line:-1
这从来不是支持普遍联系的必要步骤


64
00:03:21,401 --> 00:03:22,769 line:-1
所以现在它被弃用了


65
00:03:23,871 --> 00:03:25,639 line:-1
支持已签名的JSON文件


66
00:03:25,706 --> 00:03:29,142 line:-2
其他路径的JSON文件
将在将来的版本中删除


67
00:03:31,078 --> 00:03:32,179 line:-1
这就解决了


68
00:03:32,346 --> 00:03:35,282 line:-2
让我们看看您的
apple-app-site-association文件


69
00:03:36,083 --> 00:03:38,485 line:-2
如果您的网络服务器上
已经有这些文件之一


70
00:03:38,552 --> 00:03:39,953 line:-1
那么这看起来可能很熟悉


71
00:03:40,821 --> 00:03:43,056 line:-1
但是 我们今天要介绍一些变化


72
00:03:43,957 --> 00:03:47,060 line:-1
顶层是字典 其关键字是服务类型


73
00:03:47,461 --> 00:03:50,397 line:-2
对于通用链接 关键是applinks
就像您在这里看到的一样


74
00:03:50,831 --> 00:03:52,733 line:-1
但是也可以使用其他服务


75
00:03:53,534 --> 00:03:55,836 line:-1
我们将只关注通用链接


76
00:03:56,770 --> 00:03:59,973 line:-2
在顶层的键下面是
Apps键和Details键


77
00:04:00,541 --> 00:04:02,242 line:-1
如果您的目标是iOS 13


78
00:04:02,576 --> 00:04:05,245 line:-2
tvOS 13和
macOS 10.15


79
00:04:05,646 --> 00:04:08,215 line:-2
您不需要Apps键
所以可以删除它


80
00:04:09,049 --> 00:04:10,751 line:-1
如果您继续提供支持


81
00:04:10,817 --> 00:04:14,454 line:-2
对于iOS 12、tvOS 12
或更早版本 您仍然需要它


82
00:04:14,855 --> 00:04:17,457 line:-2
对于通用链接
它应该总是一个空数组


83
00:04:18,825 --> 00:04:21,228 line:-2
Details键包含一个字典数组
每个字典代表


84
00:04:21,394 --> 00:04:24,898 line:-1
一个特定app的通用链接配置


85
00:04:25,832 --> 00:04:28,502 line:-1
过去 我们在这里支持使用字典结构


86
00:04:28,569 --> 00:04:31,638 line:-2
而不是数组
但是这种配置已经过时了


87
00:04:33,106 --> 00:04:37,377 line:-2
在Details键下面是一个appID键
它的值是您的app标识符


88
00:04:37,978 --> 00:04:41,615 line:-1
您的app标识符由一个


89
00:04:41,682 --> 00:04:42,716 line:-1
由Apple提供的字母数字


90
00:04:43,150 --> 00:04:45,586 line:-2
10字符前缀
.和一个bundle标识符组成


91
00:04:46,954 --> 00:04:49,923 line:-2
前缀可能等于也可能不等于
您的团队标识符


92
00:04:50,123 --> 00:04:52,759 line:-2
检查开发人员门户以确认
您的app标识符


93
00:04:53,493 --> 00:04:57,064 line:-1
如果您有多个具有相同通用链接配置


94
00:04:57,531 --> 00:04:59,700 line:-2
的app
您可能不想重复相关的JSON


95
00:05:00,434 --> 00:05:02,336 line:-1
如果您的目标是今年的发行版


96
00:05:02,536 --> 00:05:04,171 line:-1
您可以使用复数appIDs键


97
00:05:04,404 --> 00:05:06,240 line:-1
来减小该文件的大小


98
00:05:07,007 --> 00:05:09,810 line:-1
该键的值是一个app标识符数组


99
00:05:10,444 --> 00:05:12,479 line:-1
如果您需要支持以前的版本


100
00:05:12,546 --> 00:05:15,549 line:-2
您应该继续为每个app
使用单一的appID键


101
00:05:16,617 --> 00:05:17,851 line:-1
接下来是路径键


102
00:05:18,285 --> 00:05:20,487 line:-1
此键包含路径模式数组


103
00:05:21,021 --> 00:05:23,557 line:-1
模式匹配与在终端中执行相同的方式


104
00:05:24,057 --> 00:05:27,160 line:-1
星号用于表示多个通配符


105
00:05:27,494 --> 00:05:29,630 line:-1
而问号只匹配一个字符


106
00:05:30,631 --> 00:05:34,268 line:-2
从今年开始
我们将用组件键替换路径键


107
00:05:35,369 --> 00:05:37,671 line:-1
此键的值是一个字典数组


108
00:05:37,738 --> 00:05:40,641 line:-1
其中每个字典都包含零个


109
00:05:40,841 --> 00:05:41,942 line:-1
或多个URL组件 以进行模式匹配


110
00:05:42,776 --> 00:05:45,512 line:-2
与前面一样
您可以匹配URL的路径组件


111
00:05:45,746 --> 00:05:47,114 line:-1
该组件的键是正斜杠


112
00:05:48,081 --> 00:05:51,185 line:-2
如果需要支持以前的版本
可以保留路径键


113
00:05:51,818 --> 00:05:54,054 line:-1
iOS 13、tvOS 13


114
00:05:54,254 --> 00:05:57,891 line:-2
如果组件键存在
macOS 10.15将忽略它


115
00:05:58,926 --> 00:06:01,595 line:-2
现在 您可以匹配URL的
Fragment组件


116
00:06:01,929 --> 00:06:03,063 line:-1
它的键是散列标记


117
00:06:03,463 --> 00:06:06,099 line:-2
您还可以匹配Query组件
它的键是问号


118
00:06:07,000 --> 00:06:09,770 line:-2
现在 很多URL
如果不是大多数的话


119
00:06:09,837 --> 00:06:13,440 line:-1
将查询组件分成键值对 称为查询项


120
00:06:14,041 --> 00:06:17,444 line:-1
对于查询组件 可以指定字典而不是


121
00:06:17,511 --> 00:06:18,378 line:-2
字符串作为其值和模式匹配
的单个查询项


122
00:06:18,812 --> 00:06:20,948 line:-1
模式匹配单个查询项


123
00:06:21,648 --> 00:06:23,617 line:-1
URL可以重复查询项名称


124
00:06:23,684 --> 00:06:25,152 line:-1
并且操作系统将要求给定查询项


125
00:06:25,219 --> 00:06:28,589 line:-1
名称的所有实例都匹配您的模式


126
00:06:29,523 --> 00:06:32,192 line:-1
没有值的查询项和没有查询项的


127
00:06:32,259 --> 00:06:33,760 line:-1
查询项由操作系统处理


128
00:06:34,027 --> 00:06:36,430 line:-1
就好像它们的值等于空字符串一样


129
00:06:37,965 --> 00:06:40,567 line:-1
要使组件字典匹配候选URL


130
00:06:40,868 --> 00:06:42,870 line:-1
所有指定的组件必须匹配


131
00:06:43,403 --> 00:06:44,938 line:-1
如果不指定组件


132
00:06:45,005 --> 00:06:46,907 line:-1
操作系统的默认行为


133
00:06:47,107 --> 00:06:48,842 line:-1
就是简单地忽略那个组件


134
00:06:49,409 --> 00:06:51,845 line:-1
例如 如果您的app不关心


135
00:06:51,912 --> 00:06:53,680 line:-1
URL的Fragment组件


136
00:06:54,081 --> 00:06:55,849 line:-1
您不需要在此文件中指定它


137
00:06:56,517 --> 00:06:58,151 line:-1
您的网站可能有一些部分


138
00:06:58,218 --> 00:07:00,554 line:-1
还不能在您的app中显示


139
00:07:01,221 --> 00:07:04,758 line:-1
您可以通过使用布尔值True


140
00:07:05,025 --> 00:07:06,393 line:-2
指定Exclude键
来排除这些子部分


141
00:07:07,227 --> 00:07:09,763 line:-1
此键具有与在旧路径键中


142
00:07:09,830 --> 00:07:11,498 line:-1
使用的Not关键字相同的行为


143
00:07:12,032 --> 00:07:14,902 line:-1
在使用组件字典时不支持该关键字


144
00:07:16,904 --> 00:07:20,274 line:-2
这里有几个URL示例
我们需要它们进行模式匹配


145
00:07:20,974 --> 00:07:22,476 line:-1
我正在开发一个订餐app


146
00:07:22,643 --> 00:07:26,146 line:-2
我使用通用链接将用户
从Safari带入我的app


147
00:07:27,014 --> 00:07:29,449 line:-2
在左边
您可以看到来自我的服务器的


148
00:07:29,816 --> 00:07:31,919 line:-2
一些JSON 在右边
您可以看到一些URL


149
00:07:32,786 --> 00:07:35,956 line:-2
首先 我想匹配我网站上
所有的订单表单


150
00:07:36,390 --> 00:07:40,060 line:-2
它们都位于一个路径上
其中第一个组件可以是任何东西


151
00:07:40,460 --> 00:07:42,062 line:-1
第二个组件是Order


152
00:07:42,396 --> 00:07:44,631 line:-1
之后就没有其他的路径组件了


153
00:07:45,832 --> 00:07:48,669 line:-2
此模式将匹配一个URL
如右边的这两个


154
00:07:49,069 --> 00:07:49,937 line:-1
午饭时间到了


155
00:07:51,338 --> 00:07:53,240 line:-1
接下来 我知道我的很多顾客


156
00:07:53,307 --> 00:07:55,342 line:-1
会想在他们的玉米饼上放奶酪


157
00:07:55,576 --> 00:07:57,377 line:-2
因此 我将匹配路径
以路径组件玉米饼开始的


158
00:07:57,444 --> 00:08:00,047 line:-1
任何URL 以及指定名为


159
00:08:00,848 --> 00:08:03,984 line:-1
奶酪的查询项的URL


160
00:08:04,585 --> 00:08:07,554 line:-1
您将注意到 我从查询项的值中


161
00:08:07,721 --> 00:08:09,656 line:-1
指定了一个问号和星号作为模式


162
00:08:10,457 --> 00:08:13,627 line:-2
由单个星号组成的模式
匹配任何字符串


163
00:08:13,794 --> 00:08:15,028 line:-1
包括空字符串 而缺少的查询项


164
00:08:15,429 --> 00:08:18,498 line:-1
具有与空字符串等价的值


165
00:08:19,032 --> 00:08:22,436 line:-2
因此 要匹配
至少一个字符长的字符串


166
00:08:22,836 --> 00:08:24,271 line:-1
我指定一个问号


167
00:08:24,338 --> 00:08:27,174 line:-1
然后用星号匹配任何其他字符


168
00:08:28,041 --> 00:08:29,443 line:-1
与我们的第三个URL相匹配


169
00:08:31,245 --> 00:08:33,780 line:-2
第四个和第五个URL
看起来非常相似


170
00:08:34,581 --> 00:08:35,948 line:-1
但这是有原因的


171
00:08:36,517 --> 00:08:39,285 line:-2
我的网站也有很多四位数
的优惠券代码


172
00:08:39,352 --> 00:08:40,621 line:-1
app可以处理


173
00:08:40,988 --> 00:08:42,489 line:-1
但如果它们以1开头


174
00:08:42,956 --> 00:08:44,458 line:-1
我希望它们留在浏览器中


175
00:08:45,192 --> 00:08:48,295 line:-2
因为操作系统将从上到下
查看可用的模式


176
00:08:48,362 --> 00:08:49,429 line:-1
所以我们首先将以1开头的


177
00:08:49,796 --> 00:08:53,166 line:-1
优惠券代码标记为排除


178
00:08:54,234 --> 00:08:57,437 line:-1
这告诉系统 如果找到匹配项


179
00:08:57,704 --> 00:09:00,274 line:-2
就停止在这里查找
但不要将URL作为通用链接打开


180
00:09:00,941 --> 00:09:02,809 line:-1
然后 任何其他优惠券都将匹配


181
00:09:02,876 --> 00:09:04,878 line:-1
第四个也是最后一个组件字典


182
00:09:08,081 --> 00:09:09,449 line:-1
在我们进入您的app之前


183
00:09:09,650 --> 00:09:12,352 line:-1
让我们来讨论一下如何支持国际观众


184
00:09:13,453 --> 00:09:15,522 line:-1
URL始终使用ASCII编码


185
00:09:15,589 --> 00:09:17,925 line:-2
所以组件匹配也是用
ASCII码完成的


186
00:09:18,825 --> 00:09:20,627 line:-2
如果需要匹配当前的
Unicode字符


187
00:09:20,861 --> 00:09:22,996 line:-1
并像在URL中那样对它们进行编码


188
00:09:23,931 --> 00:09:25,732 line:-1
由于存在组件并对其进行编码


189
00:09:25,799 --> 00:09:27,768 line:-1
Unicode字符可以由


190
00:09:27,935 --> 00:09:29,436 line:-1
多个ASCII字符表示


191
00:09:29,703 --> 00:09:32,506 line:-1
当您构建JSON时


192
00:09:33,640 --> 00:09:34,775 line:-1
您可能想为您支持的


193
00:09:34,842 --> 00:09:37,344 line:-1
每个国家提供特定于


194
00:09:37,411 --> 00:09:38,846 line:-1
国家的模式


195
00:09:39,413 --> 00:09:41,815 line:-1
这大大增加了JSON的大小


196
00:09:42,616 --> 00:09:45,018 line:-1
如果国家之间的模式匹配是一致的


197
00:09:45,252 --> 00:09:47,387 line:-1
则可以通过简化JSON


198
00:09:47,454 --> 00:09:48,755 line:-1
来减少服务器之间的流量


199
00:09:49,523 --> 00:09:52,526 line:-1
例如 如果您使用两个字母


200
00:09:52,860 --> 00:09:54,895 line:-2
的国家代码来分隔内容
那么您只需要指定


201
00:09:55,128 --> 00:09:57,197 line:-2
您以前使用这些国家代码的
地方的两个问号


202
00:09:57,898 --> 00:10:00,067 line:-2
其他更复杂的模式
就像您在这里看到的


203
00:10:00,367 --> 00:10:01,602 line:-1
也可以很容易地匹配


204
00:10:02,469 --> 00:10:05,138 line:-1
如果遇到带有无效国家代码


205
00:10:05,205 --> 00:10:06,840 line:-1
或特定于语言环境的标识符的URL


206
00:10:07,040 --> 00:10:09,042 line:-1
请将其视为用户的当前语言环境


207
00:10:10,544 --> 00:10:13,380 line:-1
从这个版本开始 操作系统将根据


208
00:10:13,447 --> 00:10:15,582 line:-1
用户最可能浏览的位置对


209
00:10:15,782 --> 00:10:18,218 line:-2
apple-app-site-association
下载进行优先级排序


210
00:10:18,752 --> 00:10:20,988 line:-1
我们仍然会在安装app时下载它们


211
00:10:21,054 --> 00:10:22,456 line:-1
但是优先级不同


212
00:10:23,156 --> 00:10:26,293 line:-2
顶级域名.com
.net和.org


213
00:10:26,660 --> 00:10:27,961 line:-1
是高优先级域


214
00:10:28,028 --> 00:10:30,831 line:-2
因为它们占了全球互联网流量的
很大一部分


215
00:10:31,698 --> 00:10:34,568 line:-2
国家代码TLD
也称为ccTLD


216
00:10:34,801 --> 00:10:37,738 line:-2
如果国际化的TLD
与用户当前的语言环境


217
00:10:37,804 --> 00:10:40,107 line:-1
设置匹配 那么它们也会被优先化


218
00:10:40,541 --> 00:10:42,776 line:-1
例如 中国的普通用户


219
00:10:42,843 --> 00:10:46,280 line:-1
访问中国ccTLD下的域名的


220
00:10:46,446 --> 00:10:49,683 line:-2
可能性比访问意大利或俄罗斯
ccTLD下的域名的可能性更大


221
00:10:52,486 --> 00:10:55,222 line:-2
因此 现在您的服务器
已经准备好支持通用链接


222
00:10:55,455 --> 00:10:56,423 line:-1
让我们更新您的app


223
00:10:58,692 --> 00:11:01,995 line:-2
在Xcode中打开项目
并导航到项目设置


224
00:11:02,429 --> 00:11:04,531 line:-1
添加关联域功能


225
00:11:05,132 --> 00:11:07,434 line:-1
这将向选定的目标添加一个新的权限


226
00:11:08,035 --> 00:11:10,437 line:-1
您可以直接从该视图修改此权限


227
00:11:13,674 --> 00:11:14,875 line:-1
此权限的值是表单服务


228
00:11:14,942 --> 00:11:18,712 line:-1
类型冒号域名的字符串数组


229
00:11:19,346 --> 00:11:21,849 line:-2
对于通用链接
服务类型是applinks


230
00:11:21,915 --> 00:11:24,585 line:-2
就像在您的
apple-app-site-association文件中一样


231
00:11:25,352 --> 00:11:27,955 line:-1
这个数组中的值的顺序被系统忽略


232
00:11:29,022 --> 00:11:31,758 line:-2
在这里 我们声明
您的app支持通用链接


233
00:11:31,825 --> 00:11:34,061 line:-1
例如www.example.com


234
00:11:34,928 --> 00:11:36,396 line:-1
当您的app被安装时


235
00:11:36,463 --> 00:11:39,867 line:-2
操作系统将访问
www.example.com


236
00:11:40,267 --> 00:11:43,504 line:-2
寻找我们刚刚讨论过的
apple-app-site-association文件


237
00:11:44,037 --> 00:11:47,674 line:-1
如果它存在 并且它包含这个app


238
00:11:47,875 --> 00:11:49,443 line:-2
的app标识符的信息
那么关联就被确认了


239
00:11:50,310 --> 00:11:52,646 line:-1
还可以指示对给定域的子域的


240
00:11:52,713 --> 00:11:55,015 line:-1
通配符支持 如下所示


241
00:11:55,682 --> 00:11:58,619 line:-2
在本例中 此时操作系统将访问
example.com


242
00:11:58,952 --> 00:12:00,721 line:-1
这次没有www


243
00:12:01,989 --> 00:12:05,058 line:-2
在通用链接查找期间
精确域比通配符域


244
00:12:05,259 --> 00:12:06,393 line:-1
具有更高的优先级


245
00:12:07,127 --> 00:12:09,830 line:-1
在这种情况下 这意味着当一个系统


246
00:12:09,897 --> 00:12:12,165 line:-2
在www.example.com
上打开URL时


247
00:12:12,666 --> 00:12:14,701 line:-1
它会尝试在从父域获得模式


248
00:12:14,935 --> 00:12:16,837 line:-1
之前匹配该域的模式


249
00:12:17,804 --> 00:12:19,973 line:-2
只有在完全限定子域中
没有找到匹配项时


250
00:12:20,040 --> 00:12:22,609 line:-1
才会匹配来自父域的模式


251
00:12:23,944 --> 00:12:26,980 line:-1
最后 这里是一个国际化域的例子


252
00:12:27,648 --> 00:12:29,449 line:-1
因为URL总是ASCII


253
00:12:29,716 --> 00:12:33,253 line:-2
您的国际化域名将需要使用
Punycode进行编码


254
00:12:33,921 --> 00:12:37,457 line:-2
有关Punycode的更多信息
请参见RFC 3492


255
00:12:40,093 --> 00:12:42,663 line:-1
现在 您的app声明了对某些域


256
00:12:42,729 --> 00:12:45,332 line:-2
的支持 您需要在
URL进入时解析它们


257
00:12:46,233 --> 00:12:49,536 line:-2
通用链接是基于
Foundation


258
00:12:49,803 --> 00:12:51,405 line:-2
的NSUserActivity类
由app委托处理


259
00:12:52,339 --> 00:12:54,675 line:-2
您将需要一个处理程序
来处理传入的用户活动


260
00:12:55,242 --> 00:12:58,245 line:-1
如果您已经支持传递 或者其他


261
00:12:58,478 --> 00:13:00,747 line:-2
类似的技术 您的app委托中
可能已经有了这个方法


262
00:13:01,448 --> 00:13:02,683 line:-1
该方法返回一个Bool


263
00:13:02,883 --> 00:13:05,719 line:-2
如果您能够成功打开用户活动
则返回True


264
00:13:05,986 --> 00:13:06,987 line:-1
如果不能 则返回False


265
00:13:08,088 --> 00:13:09,356 line:-2
如果您正在使用
UIScene


266
00:13:09,656 --> 00:13:11,458 line:-1
就可以使用类似的委托方法


267
00:13:12,092 --> 00:13:13,227 line:-1
如果您正在使用AppKit


268
00:13:13,393 --> 00:13:15,596 line:-1
这个方法的签名几乎是相同的


269
00:13:15,662 --> 00:13:18,632 line:-2
就像您在这里看到的
用NS替换UI


270
00:13:19,433 --> 00:13:22,035 line:-2
在此会话的其余部分
我们将使用UI app


271
00:13:23,303 --> 00:13:25,339 line:-1
接下来 我们将检查活动类型


272
00:13:25,405 --> 00:13:27,941 line:-1
是否为NSUserActivityTypeBrowsingWeb


273
00:13:28,609 --> 00:13:30,210 line:-1
这有助于将通用链接与app


274
00:13:30,277 --> 00:13:33,080 line:-2
可能支持的其他传入
用户活动区分开来


275
00:13:33,881 --> 00:13:36,550 line:-1
即使您现在不支持其他活动类型


276
00:13:36,783 --> 00:13:38,685 line:-1
检查活动类型也是一个好主意


277
00:13:38,986 --> 00:13:41,421 line:-1
以防将来需要支持其他类型


278
00:13:42,556 --> 00:13:43,891 line:-1
活动类型看起来不错


279
00:13:44,191 --> 00:13:46,994 line:-2
让我们从用户活动对象
获取网络页面URL


280
00:13:47,461 --> 00:13:49,596 line:-2
对于一个通用链接
它永远不会是nil


281
00:13:50,097 --> 00:13:53,267 line:-2
让我们从URL构建一个URL
组件结构体


282
00:13:53,967 --> 00:13:56,803 line:-2
您应该始终使用URL组件
解析URL


283
00:13:57,237 --> 00:14:00,240 line:-1
使用正则表达式或手动解析URL


284
00:14:00,307 --> 00:14:02,509 line:-2
字符串可能会使您容易
受到安全问题的影响


285
00:14:03,610 --> 00:14:06,947 line:-2
我们已经通过了guard语句
所以让我们检查URL的内容


286
00:14:07,648 --> 00:14:10,384 line:-2
在本例中
我对URL的查询项很感兴趣


287
00:14:10,450 --> 00:14:12,386 line:-1
但此时您可以使用URL的


288
00:14:12,452 --> 00:14:14,021 line:-1
任何组件来根化活动


289
00:14:14,755 --> 00:14:17,090 line:-1
如果您支持来自多个域的


290
00:14:17,324 --> 00:14:18,992 line:-1
通用链接 不要忘记检查主机组件


291
00:14:21,628 --> 00:14:23,797 line:-2
我们的代码已经完成
服务器也配置好了


292
00:14:23,864 --> 00:14:27,100 line:-2
但是在macOS上使用
通用链接时存在一些差异


293
00:14:27,968 --> 00:14:30,871 line:-2
默认情况下 macOS上的
通用链接在浏览器中打开


294
00:14:31,371 --> 00:14:34,942 line:-2
当它们打开时 Safari会给
用户在app中打开它们的选项


295
00:14:35,742 --> 00:14:37,311 line:-1
如果用户选择此选项


296
00:14:37,377 --> 00:14:39,947 line:-2
之后 您的链接将继续
在您的app中打开


297
00:14:41,148 --> 00:14:45,219 line:-2
与iOS不同 macOS支持
启动远程卷上的app


298
00:14:45,786 --> 00:14:48,388 line:-1
远程卷上的app不能使用通用链接


299
00:14:48,555 --> 00:14:50,057 line:-1
它们必须安装在本地


300
00:14:51,291 --> 00:14:53,360 line:-2
如果用户从App Store
下载您的app


301
00:14:53,594 --> 00:14:56,997 line:-1
系统将在您的app安装或更新后


302
00:14:57,064 --> 00:14:59,266 line:-2
立即开始下载
apple-app-site-association文件


303
00:15:00,000 --> 00:15:01,735 line:-2
如果您的app
是开发者ID签名的


304
00:15:01,802 --> 00:15:03,504 line:-1
在用户至少启动一次app之前


305
00:15:03,570 --> 00:15:06,006 line:-1
系统不会开始这些下载


306
00:15:07,140 --> 00:15:10,077 line:-1
因为通用链接由与app标识符


307
00:15:10,143 --> 00:15:11,345 line:-1
的安全关联支持 所以给定app


308
00:15:11,612 --> 00:15:13,146 line:-1
只有一个副本能够处理


309
00:15:13,213 --> 00:15:15,516 line:-1
Mac上的通用链接


310
00:15:16,216 --> 00:15:18,118 line:-1
通常 这将是/applications中


311
00:15:18,185 --> 00:15:19,820 line:-1
app的副本


312
00:15:20,287 --> 00:15:22,556 line:-1
当您需要测试相关域权限


313
00:15:22,623 --> 00:15:24,458 line:-1
的更改时 请记住这一点


314
00:15:25,325 --> 00:15:27,261 line:-1
如果您在操作的另一端 并且想要


315
00:15:27,327 --> 00:15:28,929 line:-1
打开一个通用链接UI app


316
00:15:29,363 --> 00:15:31,398 line:-2
NSWorkspace
和Launch Services


317
00:15:31,465 --> 00:15:34,735 line:-1
都会在可用时自动打开它们


318
00:15:35,769 --> 00:15:38,438 line:-1
如果您想在一个app中打开


319
00:15:38,505 --> 00:15:39,873 line:-1
一个通用链接而不是默认的浏览器


320
00:15:40,174 --> 00:15:41,608 line:-1
您可以适当地使用UI app


321
00:15:41,842 --> 00:15:44,244 line:-1
或NSWorkspace API


322
00:15:44,778 --> 00:15:46,413 line:-1
如果这些打开操作失败


323
00:15:46,480 --> 00:15:49,683 line:-2
则意味着提供的URL
不能使用通用链接


324
00:15:50,751 --> 00:15:53,053 line:-2
如果您正在为macOS
开发网络浏览器


325
00:15:53,120 --> 00:15:55,055 line:-1
将提供额外的API


326
00:15:55,122 --> 00:15:56,823 line:-1
来帮助您支持通用链接


327
00:15:58,959 --> 00:16:02,129 line:-1
为了帮助您做出最好的app


328
00:16:02,196 --> 00:16:04,164 line:-2
并提供最好的用户体验
我有一些最后的技巧与您分享


329
00:16:06,099 --> 00:16:07,901 line:-1
首先是优雅地失败


330
00:16:08,502 --> 00:16:10,537 line:-1
可能会向您提供表示过期、无效


331
00:16:10,604 --> 00:16:13,941 line:-1
或不存在内容的URL


332
00:16:14,608 --> 00:16:17,511 line:-2
如果您确定一个通用链接
不能被您的app打开


333
00:16:17,878 --> 00:16:19,980 line:-2
您可以经常在Safari
视图控制器中打开它


334
00:16:20,414 --> 00:16:22,115 line:-1
这可以让用户参与您的app


335
00:16:22,783 --> 00:16:24,718 line:-2
如果Safari视图控制器
不是选项


336
00:16:24,985 --> 00:16:26,954 line:-1
考虑在Safari中打开URL


337
00:16:27,020 --> 00:16:30,090 line:-1
或者至少提示有关问题的详细信息


338
00:16:30,591 --> 00:16:32,693 line:-1
避免将用户发送到空白屏幕


339
00:16:34,027 --> 00:16:35,796 line:-1
若有人访问您的网站


340
00:16:36,029 --> 00:16:38,131 line:-2
请使用Smart App Banner
提供到


341
00:16:38,198 --> 00:16:40,334 line:-2
App Store或
您的内容的链接


342
00:16:40,767 --> 00:16:43,971 line:-2
Smart App Banner与
Safari无缝集成 看起来很棒


343
00:16:44,371 --> 00:16:46,607 line:-1
而且不需要JavaScript


344
00:16:46,673 --> 00:16:47,674 line:-1
或自定义URL模式来支持它


345
00:16:48,809 --> 00:16:51,745 line:-1
最后 如果您有关于我们如何


346
00:16:51,912 --> 00:16:53,013 line:-1
改进通用链接的反馈 我很乐意听到


347
00:16:53,380 --> 00:16:54,882 line:-1
请使用反馈助手


348
00:16:54,948 --> 00:16:57,851 line:-2
让我们知道我们能做些什么
来让通用链接更好


349
00:16:58,752 --> 00:16:59,586 line:-1
谢谢

